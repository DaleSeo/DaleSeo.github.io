{"version":3,"sources":["webpack:///./src/templates/ListTemplate.jsx"],"names":["nodes","data","allMarkdownRemark","search","document","location","qs","parse","ignoreQueryPrefix","tag","page","posts","filter","node","fields","tags","includes","totalPosts","length","totalPages","Math","ceil","skip","parseInt","basic","as","title","slice","textAlign","query"],"mappings":"wPAOe,sBAAqB,IAC1BA,EADyB,EAARC,KACFC,kBAAfF,MACFG,EAAS,oBAAOC,SAA2B,GAAKA,SAASC,SAASF,OAFvC,EAGAG,IAAGC,MAAMJ,EAAQ,CAChDK,mBAAmB,IAJY,IAGzBC,WAHyB,MAGnB,GAHmB,MAGfC,YAHe,MAGR,IAHQ,EAO3BC,EAAQX,EAAMY,QAAO,SAACC,GAAD,OACzBJ,GAAMI,EAAKC,OAAOC,KAAKC,SAASP,MAE5BQ,EAAaN,EAAMO,OAEnBC,EAAaC,KAAKC,KAAKJ,EADR,IAEfK,EAFe,IAEPC,SAASb,GAAQ,GAE/B,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAASc,OAAK,EAACC,GAAG,WAChB,kBAAC,IAAD,CACEC,MAAOjB,GAAO,MACdQ,WAAYA,EACZN,MAAOA,EAAMgB,MAAML,EAAMA,EAVZ,MAYf,kBAAC,IAAD,CAASE,OAAK,EAACI,UAAU,UACvB,kBAAC,IAAD,CAAYT,WAAYA,EAAYV,IAAKA,EAAKC,KAAMA,QAOvD,IAAMmB,EAAK","file":"component---src-templates-list-template-jsx-2effd18171d9d07b6518.js","sourcesContent":["import React from \"react\"\nimport { Segment } from \"semantic-ui-react\"\nimport { graphql } from \"gatsby\"\nimport qs from \"qs\"\nimport Layout from \"../components/Layout\"\nimport { List, Pagination } from \"../components/Post\"\n\nexport default function ({ data }) {\n  const { nodes } = data.allMarkdownRemark\n  const search = typeof document === `undefined` ? \"\" : document.location.search\n  const { tag = \"\", page = \"1\" } = qs.parse(search, {\n    ignoreQueryPrefix: true,\n  })\n\n  const posts = nodes.filter((node) =>\n    tag ? node.fields.tags.includes(tag) : true\n  )\n  const totalPosts = posts.length\n  const postsPerPage = 10\n  const totalPages = Math.ceil(totalPosts / postsPerPage)\n  const skip = (parseInt(page) - 1) * postsPerPage\n\n  return (\n    <Layout>\n      <Segment basic as=\"section\">\n        <List\n          title={tag || \"All\"}\n          totalPosts={totalPosts}\n          posts={posts.slice(skip, skip + postsPerPage)}\n        />\n        <Segment basic textAlign=\"center\">\n          <Pagination totalPages={totalPages} tag={tag} page={page} />\n        </Segment>\n      </Segment>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query listPosts {\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      nodes {\n        excerpt(truncate: true)\n        timeToRead\n        fields {\n          slug\n          tags\n        }\n        frontmatter {\n          title\n          date(formatString: \"MMM D, YYYY\")\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}