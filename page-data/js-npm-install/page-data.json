{
    "componentChunkName": "component---src-templates-detail-template-jsx",
    "path": "/js-npm-install/",
    "result": {"pageContext":{"previous":{"fields":{"slug":"/chatgpt-bigocalc/"},"frontmatter":{"title":"OpenAI 무료 크레딧으로 만든 웹사이트의 방문자가 폭증한다면? (Big O Calc)"}},"node":{"html":"<p>npm 저장소는 모든 프로그래밍 언어를 통털어 명실상부 가장 큰 패키지 저장소입니다.\n자바스크립트 개발자들은 편리하게 <code>npm install</code> 명령어를 사용하여 npm 저장소로부터 다양한 패키지를 내려받아 사용하고 있는데요.</p>\n<p>이번 포스팅에서는 워낙 자주 사용하다 보니 의외로 잘 모를 수 있는 <code>npm install</code> 명령어를 사용하는 방법에 대해서 알아보려고 합니다.</p>\n<blockquote>\n<p><a href=\"/js-npm-cli/\">별도 포스팅</a>에서 자바스크립트 개발자를 위한 필수 npm 커맨드도 정리해두었으니 참고바랍니다.</p>\n</blockquote>\n<h2 id=\"npm-install의-별칭\" style=\"position:relative;\"><a href=\"#npm-install%EC%9D%98-%EB%B3%84%EC%B9%AD\" aria-label=\"npm install의 별칭 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>npm install의 별칭</h2>\n<p><code>npm install</code> 명령어는 여러가지 별칭이 있는데요.\n대표적으로 <code>npm i</code>와 <code>npm add</code>를 들 수 있습니다.</p>\n<p>예를 들어, 유효성 검증 라이브러리리인 <a href=\"/?tag=Zod\">Zod</a>를 설치할 때 다음 명령어 중 어떤 것을 사용해도 무방합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">npm</span> <span class=\"token function\">install</span> zod</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">npm</span> i zod</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">npm</span> <span class=\"token function\">add</span> zod</code></pre></div>\n<p>저는 개인적으로 워낙 자주 쓰는 명령어라 타이핑을 제일 적게할 수 있는 <code>npm i</code>를 선호하는데요.\n자칫 <a href=\"/js-npm-init/\">npm init</a> 명령어와 헛갈릴 수도 있기 때문에 <code>npm install</code>을 쓰기도 합니다.</p>\n<h2 id=\"packagejson-변경-여부-설정\" style=\"position:relative;\"><a href=\"#packagejson-%EB%B3%80%EA%B2%BD-%EC%97%AC%EB%B6%80-%EC%84%A4%EC%A0%95\" aria-label=\"packagejson 변경 여부 설정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>package.json 변경 여부 설정</h2>\n<p>아주 예전에 <code>npm install</code> 명령어를 실행할 때 무조건 <code>-S</code> 또는 <code>--save</code>를 붙이라고 하던 시절이 있었습니다.\nnpm 초창기 버전에서는 이 옵션없이 <code>npm install</code> 명령어를 실행하면, 패키지를 <code>node_modules</code> 폴더 안에 다운로드만 해놓고 <code>package.json</code> 파일은 건들지 않았기 때문인데요.</p>\n<p>이제는 굳이 <code>-S</code> 또는 <code>--save</code>를 붙이지 않더라도 패키지의 이름과 버전이 <code>package.json</code> 파일의 <code>dependencies</code> 영역에 자동으로 추가됩니다.\n하지만 아직도 오래된 문서를 보면, 이 옵션을 사용하라고 가이드되어 있는 것을 종종 보실 수 있으실 거에요.</p>\n<p>예를 들어, 다음과 같이 <code>-S</code> 또는 <code>--save</code>를 붙이든,</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">npm</span> i <span class=\"token parameter variable\">-S</span> zod</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">npm</span> <span class=\"token function\">install</span> <span class=\"token parameter variable\">--save</span> zod</code></pre></div>\n<p>다음과 같이 아무 옵션을 사용하지 않든,</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">npm</span> i zod</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">npm</span> <span class=\"token function\">install</span> zod</code></pre></div>\n<p>프로젝트의 <code>package.json</code> 파일을 열어보시면 아래와 같이 똑같이 패키지 이름과 버전이 추가된 것을 보실 수 있으실 거에요.</p>\n<div class=\"gatsby-code-title\">package.json</div>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"dependencies\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"zod\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"^3.22.4\"</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>오히려 반대로 옛날처럼 <code>package.json</code> 파일을 변경하지 않고 패키지만 내려받고 싶으면 요즘에는 <code>--no-save</code>라는 옵션을 써야합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">npm</span> i --no-save zod</code></pre></div>\n<p>하지만 일회성으로 패키지를 사용하는 게 아니라면 그럴 일은 거의 없겠죠?\n항상 내려받은 패키지를 <code>package.json</code> 파일에 반영하여 같은 프로젝트에서 협업하는 다른 개발자에게 문제가 생기지 않도록 해야겠습니다.</p>\n<blockquote>\n<p>package.json 파일에 대해서는 <a href=\"/js-package-json/\">별도 포스팅</a>에서 자세히 다루고 있으니 참고 바랍니다.</p>\n</blockquote>\n<h2 id=\"개발-의존성으로-설치\" style=\"position:relative;\"><a href=\"#%EA%B0%9C%EB%B0%9C-%EC%9D%98%EC%A1%B4%EC%84%B1%EC%9C%BC%EB%A1%9C-%EC%84%A4%EC%B9%98\" aria-label=\"개발 의존성으로 설치 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>개발 의존성으로 설치</h2>\n<p>애플리케이션 실행 시점에는 필요하지 않지만 개발하는 동안에는 필요한 패키지는 개발 의존성으로 설치를 해야하는데요.\n개발 의존성으로 패키즤를 설치할 때는 <code>-D</code> 또는 <code>--save-dev</code> 옵션을 사용합니다.</p>\n<p>예를 들어, 자바스크립트에서 가장 많이 사용되는 <a href=\"/?tag=ESLint\">ESLint</a>를 개발 의존성으로 설치하려면 아래와 같이 실행합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">npm</span> i <span class=\"token parameter variable\">-D</span> eslint</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">npm</span> <span class=\"token function\">install</span> --save-dev eslint</code></pre></div>\n<p>개발 의존성으로 설치된 패키지의 이름과 버전은 <code>package.json</code> 파일의 <code>devDependencies</code> 영역에 자동으로 추가됩니다.</p>\n<h2 id=\"전역에-설치\" style=\"position:relative;\"><a href=\"#%EC%A0%84%EC%97%AD%EC%97%90-%EC%84%A4%EC%B9%98\" aria-label=\"전역에 설치 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>전역에 설치</h2>\n<p>간혹 패키지를 현재 디렉터리 뿐만 아니라 컴퓨터의 어느 경로에서나 실행할 수 있도록 전역으로 설치해야 할 때가 있습니다.\n이렇게 특정 프로젝트에 국한되지 않는 패키지를 설치할 때는 <code>-g</code> 또는 <code>--global</code> 옵션을 사용합니다.</p>\n<p>예를 들어, <a href=\"https://www.daleseo.com/tsc/\">타입스크립트</a>를 전역으로 설치하려면 아래와 같이 실행합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">npm</span> i <span class=\"token parameter variable\">-g</span> typescript</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">npm</span> <span class=\"token function\">install</span> <span class=\"token parameter variable\">--global</span> typescript</code></pre></div>\n<p>이렇게 전역으로 설치된 패키지하면 <code>node_modules</code> 디렉토리나 <code>package.json</code> 파일에는 아무 변화가 일어나지 않습니다.\n대신에 전역 패키지들은 Node.js가 설치된 경로 아래에 <code>lib/node_modules</code>에 내려받아지는데요.\n터미널에 <code>npm root -g</code>라고 입력하면 정확한 경로를 확인하실 수 있으실 거에요.</p>\n<h2 id=\"설치된-패키지의-버전-고정\" style=\"position:relative;\"><a href=\"#%EC%84%A4%EC%B9%98%EB%90%9C-%ED%8C%A8%ED%82%A4%EC%A7%80%EC%9D%98-%EB%B2%84%EC%A0%84-%EA%B3%A0%EC%A0%95\" aria-label=\"설치된 패키지의 버전 고정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>설치된 패키지의 버전 고정</h2>\n<p><code>npm install</code> 명령어로 패키지를 설치하면 기본적으로는 버전 앞에 <code>^</code> 기호가 붙어서 <code>package.json</code> 파일에 추가가 되는데요.\n이렇게 버전을 영역으로 지정해주면 npm이 프로젝트의 의존성 트리를 관리할 때 최적화가 용이해지며,\n나중에 해당 패키지의 새로운 패치(patch)나 마이너(minor) 버전이 출시되었을 때 <code>npm update</code> 명령어를 통해 안전한 업그레이드도 가능해집니다.</p>\n<p>하지만 영역으로 버전을 지정하면 공급망 공격(Supply-chain Attack)에 취약해지기 때문에 보안에 민감한 프로젝트의 경우 영역으로 버전을 지정하는 것을 금지하는 경우도 있습니다.\n이럴 때는 <code>-E</code> 또는 <code>--save-exact</code> 옵션을 사용하여 패키지의 버전을 npm에 등록된 최신 버전으로 고정(pin)시킬 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">npm</span> i <span class=\"token parameter variable\">-E</span> zod</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">npm</span> <span class=\"token function\">install</span> --save-exact zod</code></pre></div>\n<div class=\"gatsby-code-title\">package.json</div>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"dependencies\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"zod\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"3.22.4\"</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"packagejson에-나열된-모든-패키지-설치\" style=\"position:relative;\"><a href=\"#packagejson%EC%97%90-%EB%82%98%EC%97%B4%EB%90%9C-%EB%AA%A8%EB%93%A0-%ED%8C%A8%ED%82%A4%EC%A7%80-%EC%84%A4%EC%B9%98\" aria-label=\"packagejson에 나열된 모든 패키지 설치 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>package.json에 나열된 모든 패키지 설치</h2>\n<p><code>npm install</code> 명령어는 프로젝트에 새로운 패키지를 추가할 때 뿐만 아니라, <code>package.json</code>에 나열된 모든 패키지를 일괄 설치를 할 때도 많이 쓰는데요.\nGit 저장소에서 프로젝트를 처음 클론(clone) 받으셨거나, <code>node_modules</code> 폴더가 지워졌을 때 유용하게 사용할 수 있습니다.</p>\n<p>새로운 패키지를 추가할 때는 <code>npm install &#x3C;패키지>@&#x3C;버전></code> 형태를 쓰잖아요?\n여기서 <code>&#x3C;패키지>@&#x3C;버전></code>를 명시하지 않고 그냥 <code>npm install</code> 명령어만 실행해주시면 됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">npm</span> i</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">npm</span> <span class=\"token function\">install</span></code></pre></div>\n<h2 id=\"ci-운영-환경에서-패키지-설치\" style=\"position:relative;\"><a href=\"#ci-%EC%9A%B4%EC%98%81-%ED%99%98%EA%B2%BD%EC%97%90%EC%84%9C-%ED%8C%A8%ED%82%A4%EC%A7%80-%EC%84%A4%EC%B9%98\" aria-label=\"ci 운영 환경에서 패키지 설치 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>CI, 운영 환경에서 패키지 설치</h2>\n<p>개발자 PC가 아닌 CI나 QA, 운영 환경의 서버에 패키지를 설치할 때는 좀 더 주의할 부분이 생기는데요.</p>\n<p>예를 들어, 패키지 잠금을 해주는 <code>package-lock.json</code>이 없거나, <code>package.json</code>과 맞지 않는 부분이 있다면 보안 문제를 초래할 수 있기 때문에 패키지 설치를 중단해야합니다.\n그리고 배포 환경에 <code>node_modules</code> 폴더가 이미 있더라도 재사용하기 보다는 삭제하고 매번 새로 설치하는 것이 안전합니다.\n또한, 운영 환경에서는 개발 도구가 사용되지 않기 때문에 굳이 개발 의존성인 패키지를 설치할 필요가 없죠.</p>\n<p>이를 위해 npm에서는 아예 별도의 최적화된 설치 명령어를 제공하고 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">npm</span> ci</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">npm</span> clean-install</code></pre></div>\n<p>따라서 CI 서버나 운영 환경에서는 위 명령어를 사용하여 패키지를 설치하는 것이 권장되겠습니다.</p>\n<p>만약에 어떤 이유로든 개발 의존성의 패키지도 설치해야 한다면 <code>--included=dev</code> 옵션을 붙여주시면 됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">npm</span> ci <span class=\"token parameter variable\">--included</span><span class=\"token operator\">=</span>dev</code></pre></div>\n<blockquote>\n<p>package-lock.json 파일에 대해서는 <a href=\"/js-package-locks/\">별도 포스팅</a>에서 자세히 다루고 있으니 참고 바랍니다.</p>\n</blockquote>\n<h2 id=\"마치면서\" style=\"position:relative;\"><a href=\"#%EB%A7%88%EC%B9%98%EB%A9%B4%EC%84%9C\" aria-label=\"마치면서 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>마치면서</h2>\n<p>이상으로 자바스크립트 패키지를 설치할 때 사용되는 <code>npm install</code> 명령어를 어떻게 활용하는지 살펴보앗습니다.\n자주 사용하시느 명령어인 만큼 이번 기회에 잘 정리해두시면 두고 두고 도움이 되실거라 생각합니다.</p>\n<blockquote>\n<p>npm에 대한 포스팅은 <a href=\"/?tag=npm\">관련 태그</a>를 통해서 쉽게 만나보세요!</p>\n</blockquote>","timeToRead":5,"fields":{"slug":"/js-npm-install/","tags":["JavaScript","Node.js","npm"]},"frontmatter":{"title":"자바스크립트 패키지 설치법 완벽 가이드 (npm install)","date":"Nov 3, 2023"}},"next":{"fields":{"slug":"/js-npm-init/"},"frontmatter":{"title":"자바스크립트 프로젝트 생성 방법 정리 (npm init, npm create, npx)"}}}},
    "staticQueryHashes": ["2168229929","2362167539","3056348342"]}