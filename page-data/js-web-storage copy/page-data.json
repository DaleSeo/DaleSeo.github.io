{"componentChunkName":"component---src-templates-detail-template-jsx","path":"/js-web-storage copy/","result":{"pageContext":{"previous":null,"node":{"html":"<p>JavaScript, API, Markup를 근간으로 하는 JAM stack이 모던 웹 개발의 새로운 패러다임으로 자리잡고 있는데요.\n이 추세에 따라, 예전처럼 서버 단에서 대신 API를 호출해주기 보다는 클라이언트 단에서 직접 API를 호출하는 경우가 많아지고 있습니다.\n(이렇게 브라우저에서 직접 비동기로 HTTP 통신을 하는 것을 한 때 Ajax라고도 일컬었죠…)\n이번 포스트에서는 간편하게 API를 호출할 수 있도록 브라우저에서 내장되어 있는 <code>fetch()</code> 함수에 대해서 살펴보겠습니다.</p>\n<h2 id=\"라이브러리\" style=\"position:relative;\"><a href=\"#%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC\" aria-label=\"라이브러리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>라이브러리</h2>\n<p>원격 API 호출하면 제일 먼저 떠오리는 것이 <a href=\"https://www.npmjs.com/package/request\">request</a>나 <a href=\"https://www.npmjs.com/package/axios\">axios</a>, <a href=\"https://www.npmjs.com/package/jquery\">jQuery</a>와 같은 라이브러리일 것입니다.\n브라우저에서 <code>fetch()</code> 함수를 지원하기 이 전에는 클라이언트 단에서 직접 HTTP 요청하고 응답을 받는 게 상당히 복잡해서 이러한 라이브러리를 사용하는 것이 합리적이었습니다.\n하지만 현재는 구지 이러한 라이브러리의 도움없이도 브라우저에서 지원하는 <code>fetch()</code> 함수를 이용하면 대부분의 경우 충분하기 때문에 오히려 이러한 라이브러리를 사용하는 것이 번들(bundle) 크기만 늘리고 낭비가 될 수 있습니다.</p>\n<h2 id=\"get-호출\" style=\"position:relative;\"><a href=\"#get-%ED%98%B8%EC%B6%9C\" aria-label=\"get 호출 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>GET 호출</h2>\n<p>먼저 단순히 원격 서버에 있는 데이터를 가져올 때 쓰이는 GET 방식 API 호출에 대해서 살펴볼까요?</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"></code></pre></div>\n<p>개발하시는 애플리케이션이 데이터를 단순히 보여주기만 한다면 이 방법으로 충분할 것입니다.</p>\n<h2 id=\"post-호출\" style=\"position:relative;\"><a href=\"#post-%ED%98%B8%EC%B6%9C\" aria-label=\"post 호출 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>POST 호출</h2>\n<h2 id=\"put-delete-호출\" style=\"position:relative;\"><a href=\"#put-delete-%ED%98%B8%EC%B6%9C\" aria-label=\"put delete 호출 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>PUT, DELETE 호출</h2>\n<h2 id=\"마치면서\" style=\"position:relative;\"><a href=\"#%EB%A7%88%EC%B9%98%EB%A9%B4%EC%84%9C\" aria-label=\"마치면서 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>마치면서</h2>\n<p>이상으로 <code>fetch()</code> 함수를 어떻게 사용하는지 알아보았습니다.</p>","timeToRead":1,"fields":{"slug":"/js-web-storage copy/","tags":["JavaScript"]},"frontmatter":{"title":"[자바스크립트] fetch() 함수로 API 호출하기","date":"Nov 2, 2020"}},"next":{"fields":{"slug":"/react-hooks-use-ref/"},"frontmatter":{"title":"React Hooks: useRef 사용법"}}}}}