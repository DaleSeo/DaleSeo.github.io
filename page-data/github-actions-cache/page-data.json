{"componentChunkName":"component---src-templates-detail-template-jsx","path":"/github-actions-cache/","result":{"pageContext":{"previous":{"fields":{"slug":"/mock-service-worker/"},"frontmatter":{"title":"MSW로 백앤드 API 모킹하기"}},"node":{"html":"<p>어느 프로그래밍 언어나 프래임워크를 사용하든 요즘에 대부분의 소프트웨어 프로젝트는 수많은 다른 패키지에 의존하기 마련인데요.\n로컬 환경에서 소프트웨어 개발을 할 때는 이러한 외부 패키지를 최초에 딱 한 번만 설치하면 되지만 항상 새롭게 셋업되는 CI 서버에서는 이 작업을 매번 다시 해야합니다.</p>\n<p>이번 포스팅에서는 GitHub에서 제공하는 캐시(Cache) 액션을 사용하여 CI 서버에서 발생할 수 있는 불필요한 패키지 재설치를 예방해보겠습니다.</p>\n<h2 id=\"github-actions의-액션action이란\" style=\"position:relative;\"><a href=\"#github-actions%EC%9D%98-%EC%95%A1%EC%85%98action%EC%9D%B4%EB%9E%80\" aria-label=\"github actions의 액션action이란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>GitHub Actions의 액션(Action)이란?</h2>\n<p>먼저 GitHub Actions에서 액션(Action)이 무엇을 의미하는지 간단하게 짚고 넘어가겠습니다.\nGitHub Actions는 일반적으로 CI(Continuous Integration, 지속 통합) 또는 CD(Continuous Deployment, 지속 배포)와 같은 자동화를 위해서 사용되는데요.\n이를 위해 워크플로우(workflow)를 구성하다보면 거의 필연적으로 여러 작업(job)에서 반복적으로 처리되야 할 일들이 생겨나기 마련입니다.</p>\n<p>액션(Action)은 이렇게 빈번하게 필요한 반복 단계를 재사용하기 용이하도록 GitHub Actions에서 제공되는 일종의 작업 공유 매커니즘인데요.\n이 액션은 하나의 코드 저장소 범위 내에서 여러 워크플로우 간에서 공유를 할 수 있을 뿐만 아니라, 공개 코드 저장소를 통해 액션을 공유하면 GitHub 상의 모든 코드 저장소에서 사용이 가능해집니다.</p>\n<p>누구나 <a href=\"https://github.com/marketplace?type=actions\">GitHub Marketplace</a>를 통해 GitHub 뿐만 아니라 다양한 써드 파티 업체들이 공개해놓은 액션을 쉽게 검색하고 써볼 수 있습니다.</p>\n<blockquote>\n<p>GitHub Actions에 대한 소개와 핵심 개념은 별도로 정리해 두었으니 <a href=\"/github-actions-basics/\">관련 포스팅</a>를 참고 바랍니다.</p>\n</blockquote>\n<h2 id=\"github의-캐시-액션\" style=\"position:relative;\"><a href=\"#github%EC%9D%98-%EC%BA%90%EC%8B%9C-%EC%95%A1%EC%85%98\" aria-label=\"github의 캐시 액션 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>GitHub의 캐시 액션</h2>\n<p>GitHub가 제공하는 캐시(Cache) 액션을 사용하면 GitHub Actions에서 워크플로우가 실행될 때 필요한 파일 중에서 거의 잘 바뀌지 않는 파일들을 GitHub의 캐시에 올려놓고 CI 서버로 내려받을 수 있습니다.\n설치해야하는 패키지가 많은 프로젝트의 경우, GitHub의 캐시 액션을 잘 활용하면 워크플로우의 성능을 최적화하는데 상당한 도움이 됩니다.\n프로젝트에서 의존하고 있는 외부 패키지를 매번 네트워크를 통해 원격 패키지 저장소로 부터 내려받는 대신에 GitHub의 캐시에 저장해두고 활용할 수 있기 때문이죠.</p>\n<p>GitHub의 캐시 액션은 주어진 키에 해당하는 데이터가 GitHub의 캐시에 존재하는 경우 해당 파일을 CI 서버의 특정 경로에 내려받아 줍니다.\n반면에 주어진 키에 해당하는 데이터가 GitHub의 캐시에 존재하지 않는 경우에는 CI 서버의 특정 경로에 있는 파일을 모두 캐시에 저장하여 다음에 워크플로우가 실행될 때 해당 데이터가 캐시에 존재하도록 해줍니다.</p>\n<p>지금부터 실습 프로젝트를 하나 생성하고 GitHub의 코드 저장소에 올린 후에 실제로 GitHub Actions에서 캐시 액션을 사용해보겠습니다.</p>\n<h2 id=\"실습-프로젝트와-코드-저장소-생성\" style=\"position:relative;\"><a href=\"#%EC%8B%A4%EC%8A%B5-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8%EC%99%80-%EC%BD%94%EB%93%9C-%EC%A0%80%EC%9E%A5%EC%86%8C-%EC%83%9D%EC%84%B1\" aria-label=\"실습 프로젝트와 코드 저장소 생성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>실습 프로젝트와 코드 저장소 생성</h2>\n<p>실습을 위해서 외부 패키지에 의존하는 프로젝트가 하나 필요할 것 같습니다.\nCreate React App을 통해서 간단한 React 앱을 하나 뚝딱 만들고 시작하겠습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ npx create-react-app github-actions-cache\n\nCreating a new React app <span class=\"token keyword\">in</span> /Users/daleseo/temp/github-actions-cache.\n\nInstalling packages. This might take a couple of minutes.\nInstalling react, react-dom, and react-scripts with cra-template<span class=\"token punctuation\">..</span>.\n\n\n<span class=\"token punctuation\">(</span><span class=\"token punctuation\">..</span>. 생략 <span class=\"token punctuation\">..</span>.<span class=\"token punctuation\">)</span>\n\nWe suggest that you begin by typing:\n\n  <span class=\"token builtin class-name\">cd</span> github-actions-cache\n  <span class=\"token function\">npm</span> start\n\nHappy hacking<span class=\"token operator\">!</span></code></pre></div>\n<p>본인 GitHub에 계정에 새로운 코드 저장소(repository)를 하나를 만들고 위에서 생성한 React 프로젝트를 올립니다.\n(저는 <code>github-actions-cache</code>이라는 이름으로 실습 코드 저장소를 만들겠습니다.)</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token builtin class-name\">cd</span> github-actions-cache\n$ <span class=\"token function\">git</span> remote <span class=\"token function\">add</span> origin https://github.com/DaleSchool/github-actions-cache.git\n$ <span class=\"token function\">git</span> branch -M main\n$ <span class=\"token function\">git</span> push -u origin main\nEnumerating objects: <span class=\"token number\">22</span>, done.\nCounting objects: <span class=\"token number\">100</span>% <span class=\"token punctuation\">(</span><span class=\"token number\">22</span>/22<span class=\"token punctuation\">)</span>, done.\nDelta compression using up to <span class=\"token number\">8</span> threads\nCompressing objects: <span class=\"token number\">100</span>% <span class=\"token punctuation\">(</span><span class=\"token number\">22</span>/22<span class=\"token punctuation\">)</span>, done.\nWriting objects: <span class=\"token number\">100</span>% <span class=\"token punctuation\">(</span><span class=\"token number\">22</span>/22<span class=\"token punctuation\">)</span>, <span class=\"token number\">285.94</span> KiB <span class=\"token operator\">|</span> <span class=\"token number\">8.41</span> MiB/s, done.\nTotal <span class=\"token number\">22</span> <span class=\"token punctuation\">(</span>delta <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>, reused <span class=\"token number\">0</span> <span class=\"token punctuation\">(</span>delta <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>, pack-reused <span class=\"token number\">0</span>\nTo https://github.com/DaleSchool/github-actions-cache.git\n * <span class=\"token punctuation\">[</span>new branch<span class=\"token punctuation\">]</span>      main -<span class=\"token operator\">></span> main\nBranch <span class=\"token string\">'main'</span> <span class=\"token builtin class-name\">set</span> up to track remote branch <span class=\"token string\">'main'</span> from <span class=\"token string\">'origin'</span><span class=\"token builtin class-name\">.</span></code></pre></div>\n<h2 id=\"github-actions-워크플로우-생성\" style=\"position:relative;\"><a href=\"#github-actions-%EC%9B%8C%ED%81%AC%ED%94%8C%EB%A1%9C%EC%9A%B0-%EC%83%9D%EC%84%B1\" aria-label=\"github actions 워크플로우 생성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>GitHub Actions 워크플로우 생성</h2>\n<p>프로젝트에 <code>.github/workflows/</code>라는 폴더를 만든 후, 그 안에 <code>cache.yml</code>이라는 이름의 YAML 파일을 하나 생성합니다.</p>\n<p>코드 저장소에서 <code>push</code> 이벤트가 발생되면 워크플로우가 실행되도록 설정하고 <code>cache</code>라는 간단한 작업(job)을 추가합니다.\n<code>cache</code> 작업은 총 2단계로 이뤄지는데 첫번째 단계에서는 체크아웃 액션을 이용하여 코드 저장소에 올려둔 프로젝트의 코드를 CI 서버로 내려받고 두번째 단계에서는 <code>npm</code>을 이용하여 <code>package.json</code> 파일에 명시되어 있는 패키지들을 CI 서버에 설치합니다.</p>\n<blockquote>\n<p>GitHub에서 제공하는 체크아웃(Checkout) 액션에 대해서는 <a href=\"/github-actions-checkout/\">별도의 포스팅</a>에서 자세히 다루었으니 참고 바랍니다.</p>\n</blockquote>\n<div class=\"gatsby-code-title\">.github/workflows/cache.yml</div>\n<div class=\"gatsby-highlight\" data-language=\"yml\"><pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Our Workflow\n<span class=\"token key atrule\">on</span><span class=\"token punctuation\">:</span> push\n<span class=\"token key atrule\">jobs</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">cache</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">runs-on</span><span class=\"token punctuation\">:</span> ubuntu<span class=\"token punctuation\">-</span>latest\n    <span class=\"token key atrule\">steps</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/checkout@v3\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> npm ci</code></pre></div>\n<p><code>cache.yml</code> 파일을 GitHub의 코드 저장소로 올린 후 <code>Actions</code> 탭에 들어가면 다음과 같은 워크플로우 실행 로그를 확인할 수 있을 것입니다.</p>\n<div class=\"gatsby-code-title\">Log</div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">☑️ Set up Job\n☑️ Run actions/checkout@v3\n☑️ Run <span class=\"token function\">npm</span> ci\n<span class=\"gatsby-highlight-code-line\">▶ Run <span class=\"token function\">npm</span> ci</span><span class=\"gatsby-highlight-code-line\"><span class=\"token function\">npm</span> WARN deprecated source-map-resolve@0.6.0: See https://github.com/lydell/source-map-resolve<span class=\"token comment\">#deprecated</span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token function\">npm</span> WARN deprecated svgo@1.3.2: This SVGO version is no longer supported. Upgrade to v2.x.x.</span><span class=\"gatsby-highlight-code-line\"></span><span class=\"gatsby-highlight-code-line\">added <span class=\"token number\">1415</span> packages, and audited <span class=\"token number\">1416</span> packages <span class=\"token keyword\">in</span> 28s</span><span class=\"gatsby-highlight-code-line\"></span><span class=\"gatsby-highlight-code-line\"><span class=\"token number\">177</span> packages are looking <span class=\"token keyword\">for</span> funding</span><span class=\"gatsby-highlight-code-line\">  run <span class=\"token variable\"><span class=\"token variable\">`</span><span class=\"token function\">npm</span> fund<span class=\"token variable\">`</span></span> <span class=\"token keyword\">for</span> details</span><span class=\"gatsby-highlight-code-line\"></span><span class=\"gatsby-highlight-code-line\"><span class=\"token number\">6</span> moderate severity vulnerabilities</span><span class=\"gatsby-highlight-code-line\"></span><span class=\"gatsby-highlight-code-line\">To address all issues <span class=\"token punctuation\">(</span>including breaking changes<span class=\"token punctuation\">)</span>, run:</span><span class=\"gatsby-highlight-code-line\">  <span class=\"token function\">npm</span> audit fix --force</span><span class=\"gatsby-highlight-code-line\"></span><span class=\"gatsby-highlight-code-line\">Run <span class=\"token variable\"><span class=\"token variable\">`</span><span class=\"token function\">npm</span> audit<span class=\"token variable\">`</span></span> <span class=\"token keyword\">for</span> details.</span>☑️ Post Run actions/checkout@v3\n☑️ Complete Job</code></pre></div>\n<p><code>Run npm ci</code> 단계를 보면 패키지를 1415개를 설치하는데 총 28초가 걸린 것을 볼 수 있는데요.</p>\n<p>실제 프로젝트에서는 당연히 이것보다 설치해야할 패키지가 훨씬 많아지겠죠?\nCI 서버에 패키지 설치하는데만 보통 수분이 소요될 수 있을 것입니다.</p>\n<p>워크플로우를 실행할 때마다 이렇게 매번 똑같은 패키지를 내려받으면 여러 가지 측면에서 낭비가 발생합니다.\nCI가 느려질 뿐만 아니라 네트워크 대역폭을 많이 쓰는 등 결국은 프로젝트의 유지보수 비용의 증가로 이어질 것입니다.</p>\n<h2 id=\"캐시-액션-사용\" style=\"position:relative;\"><a href=\"#%EC%BA%90%EC%8B%9C-%EC%95%A1%EC%85%98-%EC%82%AC%EC%9A%A9\" aria-label=\"캐시 액션 사용 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>캐시 액션 사용</h2>\n<p>워크플로우 YAML 파일에서는 <code>steps</code> 키 하위의 <code>uses</code> 키에 사용하고자 하는 액션의 위치를 <code>{소유자}/{저장소명}@{참조자}</code>의 형태로 명시하는데요.\nGitHub에서 제공하는 캐시 액션의 소유자는 <code>actions</code>이고, 저장소 이름은 <code>cache</code>이며 현재 포스팅 시점에서 사용 가능한 최신 버전은 <code>v3</code>입니다.</p>\n<p>이에 따라 실습 워크플로우에 캐시 액션을 추가해주겠습니다.</p>\n<div class=\"gatsby-code-title\">.github/workflows/cache.yml</div>\n<div class=\"gatsby-highlight\" data-language=\"yml\"><pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Our Workflow\n<span class=\"token key atrule\">on</span><span class=\"token punctuation\">:</span> push\n<span class=\"token key atrule\">jobs</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">cache</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">runs-on</span><span class=\"token punctuation\">:</span> ubuntu<span class=\"token punctuation\">-</span>latest\n    <span class=\"token key atrule\">steps</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/checkout@v3\n<span class=\"gatsby-highlight-code-line\">      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/cache@v3</span><span class=\"gatsby-highlight-code-line\">        <span class=\"token key atrule\">with</span><span class=\"token punctuation\">:</span></span><span class=\"gatsby-highlight-code-line\">          <span class=\"token key atrule\">path</span><span class=\"token punctuation\">:</span> ~/.npm</span><span class=\"gatsby-highlight-code-line\">          <span class=\"token key atrule\">key</span><span class=\"token punctuation\">:</span> $<span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> runner.os <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">-</span>node<span class=\"token punctuation\">-</span>$<span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> hashFiles('<span class=\"token important\">**/package-lock.json')</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span>      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> npm ci</code></pre></div>\n<p>여기서 주의깊게 볼 부분은 <code>with</code> 키를 이용해서 캐시 액션에 넘기고 있는 2개의 입력값인데요.</p>\n<p><code>path</code> 인자로는 우분투 운영체제에서 <code>npm</code>이 패키지 저장소에서 내려받은 패키지를 CI 서버에 저장해두는 경로를 지정하고 있고요.\n<code>key</code> 인자로는 GitHub의 캐시에서 데이터를 읽거나 쓸 때 사용되는 식별자를 명시합니다.</p>\n<p>다시 말해 CI 서버의 <code>path</code>에 위치한 디렉토리나 파일을 <code>key</code>를 통해서 캐시에 올리거나 내려받게 됩니다.</p>\n<p>캐시 히트(hit)의 경우, 즉 캐시에서 주어진 <code>key</code>에 해당하는 파일들이 저장되어 있다면, CI 서버 상의 <code>path</code>로 해당 파일들을 내려받아 줍니다.\n캐시 미쓰(miss)의 경우, 즉 캐시에서 주어진 <code>key</code>에 해당하는 파일들이 저장되어 있지 않다면, 해당 작업의 종료 시점에 CI 서버 상의 <code>path</code>에 있는 파일들을 캐시에 저장합니다.</p>\n<p>여기서 조심할 부분은 새로운 패키지를 설치하거나 기존 패키지를 제거하거나 버전을 업그레이드할 때는 GitHub의 캐시에 저장해놓은 패키지를 사용하면 안 되겠죠?\n따라서 패키지 설치 내역에 변경이 있을 때는 키도 함께 변경이 될 수 있도록 GitHub Actions의 <code>hashFiles()</code> 내장함수를 이용하여 <code>package-lock.json</code> 파일의 SHA 해시값을 키에 포함시켜줍니다.\n뿐만 아니라 워크플로우를 여러 운영체제에서 실행할 경우를 대비하여 GitHub Actions의 <code>runner.os</code> 컨텍스트(context)도 키에 포함시키고 있습니다.</p>\n<p>이제 <code>cache.yml</code> 파일의 변경 내용을 GitHub의 코드 저장소로 올리면 워크플로우가 실행될 것입니다.</p>\n<div class=\"gatsby-code-title\">Log</div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">☑️ Set up Job\n☑️ Run actions/checkout@v3\n☑️ Run actions/cache@v3\n<span class=\"gatsby-highlight-code-line\">▶ Run actions/cache@v3</span><span class=\"gatsby-highlight-code-line\">Cache not found <span class=\"token keyword\">for</span> input keys: Linux-node-8f192a58c56108cb7532746bc925611ec228332771a9983ab738220e0b03b5b8</span>☑️ Run <span class=\"token function\">npm</span> ci\n<span class=\"gatsby-highlight-code-line\">▶ Run <span class=\"token function\">npm</span> ci</span><span class=\"gatsby-highlight-code-line\"><span class=\"token function\">npm</span> WARN deprecated source-map-resolve@0.6.0: See https://github.com/lydell/source-map-resolve<span class=\"token comment\">#deprecated</span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token function\">npm</span> WARN deprecated svgo@1.3.2: This SVGO version is no longer supported. Upgrade to v2.x.x.</span><span class=\"gatsby-highlight-code-line\"></span><span class=\"gatsby-highlight-code-line\">added <span class=\"token number\">1415</span> packages, and audited <span class=\"token number\">1416</span> packages <span class=\"token keyword\">in</span> 27s</span><span class=\"gatsby-highlight-code-line\"></span><span class=\"gatsby-highlight-code-line\"><span class=\"token number\">177</span> packages are looking <span class=\"token keyword\">for</span> funding</span><span class=\"gatsby-highlight-code-line\">  run <span class=\"token variable\"><span class=\"token variable\">`</span><span class=\"token function\">npm</span> fund<span class=\"token variable\">`</span></span> <span class=\"token keyword\">for</span> details</span><span class=\"gatsby-highlight-code-line\"></span><span class=\"gatsby-highlight-code-line\"><span class=\"token number\">6</span> moderate severity vulnerabilities</span><span class=\"gatsby-highlight-code-line\"></span><span class=\"gatsby-highlight-code-line\">To address all issues <span class=\"token punctuation\">(</span>including breaking changes<span class=\"token punctuation\">)</span>, run:</span><span class=\"gatsby-highlight-code-line\">  <span class=\"token function\">npm</span> audit fix --force</span><span class=\"gatsby-highlight-code-line\"></span><span class=\"gatsby-highlight-code-line\">Run <span class=\"token variable\"><span class=\"token variable\">`</span><span class=\"token function\">npm</span> audit<span class=\"token variable\">`</span></span> <span class=\"token keyword\">for</span> details.</span>☑️ Post Run actions/cache@v3\n<span class=\"gatsby-highlight-code-line\">Post job cleanup.</span><span class=\"gatsby-highlight-code-line\">/usr/bin/tar --posix --use-compress-program zstd -T0 -cf cache.tzst -P -C /home/runner/work/github-actions-cache/github-actions-cache --files-from manifest.txt</span><span class=\"gatsby-highlight-code-line\">Cache Size: ~38 MB <span class=\"token punctuation\">(</span><span class=\"token number\">39344370</span> B<span class=\"token punctuation\">)</span></span><span class=\"gatsby-highlight-code-line\">Cache saved successfully</span><span class=\"gatsby-highlight-code-line\">Cache saved with key: Linux-node-99a1d11713e027e9d5df465eafb83e00829dc398e3b7e415b8cde8e65444d092</span>☑️ Post Run actions/checkout@v3\n☑️ Complete Job</code></pre></div>\n<p><code>Actions</code> 탭에 들어가면 워크플로우 실행 로그를 확인해보면,</p>\n<ul>\n<li><code>Run actions/cache@v3</code> 단계에서 입력된 키에 해당하는 키가 없었다고 나옵니다.</li>\n<li><code>Run npm ci</code> 단계를 보면 패키지를 설치하는 속도에 큰 차이가 없는 것을 볼 수 있습니다.</li>\n<li><code>Post Run actions/cache@v3</code> 단계를 보면 캐시에 약 38MB의 크기의 압축 파일을 저장하는 것이 확인됩니다.</li>\n</ul>\n<p>이처럼 캐시 액션을 설정 후에 최초 워크플로우 실행 시에는 전혀 빨리지는 않습니다.\n왜냐하면 기존에 GitHub의 캐시에 데이터를 저장한 적이 없기 때문이죠.\n하지만 막 워크플로우를 한 번 실행하였기 때문에 프로젝트에서 필요한 모든 패키지가 GitHub의 캐시에 저장되었습니다.</p>\n<p>이제 <code>Actions</code> 탭에서 실습 워크플로우를 수동으로 재실행해볼까요?</p>\n<div class=\"gatsby-code-title\">Log</div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">☑️ Set up Job\n☑️ Run actions/checkout@v3\n☑️ Run actions/cache@v3\n<span class=\"gatsby-highlight-code-line\">▶ Run actions/cache@v3</span><span class=\"gatsby-highlight-code-line\">Received <span class=\"token number\">39344370</span> of <span class=\"token number\">39344370</span> <span class=\"token punctuation\">(</span><span class=\"token number\">100.0</span>%<span class=\"token punctuation\">)</span>, <span class=\"token number\">40.5</span> MBs/sec</span><span class=\"gatsby-highlight-code-line\">Cache Size: ~38 MB <span class=\"token punctuation\">(</span><span class=\"token number\">39344370</span> B<span class=\"token punctuation\">)</span></span><span class=\"gatsby-highlight-code-line\">/usr/bin/tar --use-compress-program zstd -d -xf /home/runner/work/_temp/8b2db391-0bb4-43bf-b7bd-efbe64691fa7/cache.tzst -P -C /home/runner/work/github-actions-cache/github-actions-cache</span><span class=\"gatsby-highlight-code-line\">Cache restored successfully</span><span class=\"gatsby-highlight-code-line\"></span><span class=\"gatsby-highlight-code-line\">Cache restored from key: Linux-node-99a1d11713e027e9d5df465eafb83e00829dc398e3b7e415b8cde8e65444d092</span>☑️ Run <span class=\"token function\">npm</span> ci\n<span class=\"gatsby-highlight-code-line\">▶ Run <span class=\"token function\">npm</span> ci</span><span class=\"gatsby-highlight-code-line\"><span class=\"token function\">npm</span> WARN deprecated source-map-resolve@0.6.0: See https://github.com/lydell/source-map-resolve<span class=\"token comment\">#deprecated</span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token function\">npm</span> WARN deprecated svgo@1.3.2: This SVGO version is no longer supported. Upgrade to v2.x.x.</span><span class=\"gatsby-highlight-code-line\"></span><span class=\"gatsby-highlight-code-line\">added <span class=\"token number\">1415</span> packages, and audited <span class=\"token number\">1416</span> packages <span class=\"token keyword\">in</span> 12s</span><span class=\"gatsby-highlight-code-line\"></span><span class=\"gatsby-highlight-code-line\"><span class=\"token number\">177</span> packages are looking <span class=\"token keyword\">for</span> funding</span><span class=\"gatsby-highlight-code-line\">  run <span class=\"token variable\"><span class=\"token variable\">`</span><span class=\"token function\">npm</span> fund<span class=\"token variable\">`</span></span> <span class=\"token keyword\">for</span> details</span><span class=\"gatsby-highlight-code-line\"></span><span class=\"gatsby-highlight-code-line\"><span class=\"token number\">6</span> moderate severity vulnerabilities</span><span class=\"gatsby-highlight-code-line\"></span><span class=\"gatsby-highlight-code-line\">To address all issues <span class=\"token punctuation\">(</span>including breaking changes<span class=\"token punctuation\">)</span>, run:</span><span class=\"gatsby-highlight-code-line\">  <span class=\"token function\">npm</span> audit fix --force</span><span class=\"gatsby-highlight-code-line\"></span><span class=\"gatsby-highlight-code-line\">Run <span class=\"token variable\"><span class=\"token variable\">`</span><span class=\"token function\">npm</span> audit<span class=\"token variable\">`</span></span> <span class=\"token keyword\">for</span> details.</span>☑️ Post Run actions/cache@v3\n<span class=\"gatsby-highlight-code-line\">Post job cleanup.</span><span class=\"gatsby-highlight-code-line\">Cache hit occurred on the primary key Linux-node-99a1d11713e027e9d5df465eafb83e00829dc398e3b7e415b8cde8e65444d092, not saving cache.</span>☑️ Post Run actions/checkout@v3\n☑️ Complete Job</code></pre></div>\n<p>이 번에는 무언가가 달라진 것을 볼 수 있는데요.</p>\n<ul>\n<li><code>Run actions/cache@v3</code> 단계를 보면 GitHub의 캐시에서 주어진 키에 해당하는 38 MB의 압축 파일을 읽어와서 압축을 풀고 있는 것을 볼 수 있습니다.</li>\n<li><code>Run npm ci</code> 단계에서 동일한 개수의 패키지를 설치하는데 걸리는 속도가 12초로 기존 대비 2배 이상 빨라진 것을 볼 수 있습니다.</li>\n<li><code>Post Run actions/cache@v3</code> 단계에서는 캐시 히트(hit)의 경우이기 때문에 캐시에 데이터를 저장하지 않는다고 나옵니다.</li>\n</ul>\n<h2 id=\"캐시-히트-여부-출력값-활용\" style=\"position:relative;\"><a href=\"#%EC%BA%90%EC%8B%9C-%ED%9E%88%ED%8A%B8-%EC%97%AC%EB%B6%80-%EC%B6%9C%EB%A0%A5%EA%B0%92-%ED%99%9C%EC%9A%A9\" aria-label=\"캐시 히트 여부 출력값 활용 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>캐시 히트 여부 출력값 활용</h2>\n<p>GitHub의 캐시 액션은 캐시 히트(hit) 여부, 즉 캐시에 주어진 키에 해당하는 데이터가 존재하는지 여부를 <code>npm-cache</code>라는 출력값에 담아서 제공해주는데요.\n캐시 액션을 사용한 다음에 나오는 작업 단계(step)에서 이 출력값을 읽어서 활용할 수 있습니다.</p>\n<p>간단하게 캐시 히트 여부를 실행 로그에 출력해주는 작업 단계를 실습 워크 플로우에 추가해볼까요?\nGitHub Actions의 <code>steps</code> 컨텍스트를 통해 <code>&#x3C;step_id>.outputs.cache-hit</code>를 읽어와 후속 작업의 실행 여부를 <code>if</code> 속성으로 설정해줍니다.\n(캐시 액션을 사용하는 작업 단계에 <code>id</code> 속성을 추가해주는 부분 빼먹지 않도록 주의하세요.)</p>\n<div class=\"gatsby-code-title\">Log</div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">name: Our Workflow\non: push\njobs:\n  cache:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v3\n      - uses: actions/cache@v3\n<span class=\"gatsby-highlight-code-line\">        id: npm-cache</span>        with:\n          path: ~/.npm\n          key: <span class=\"token variable\">${{ runner.os }</span><span class=\"token punctuation\">}</span>-node-<span class=\"token variable\">${{ hashFiles('**<span class=\"token operator\">/</span>package-lock.json') }</span><span class=\"token punctuation\">}</span>\n<span class=\"gatsby-highlight-code-line\">      - if: steps.npm-cache.outputs.cache-hit <span class=\"token operator\">==</span> <span class=\"token string\">'true'</span></span><span class=\"gatsby-highlight-code-line\">        run: <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">'npm cache hit!'</span></span><span class=\"gatsby-highlight-code-line\">      - if: steps.npm-cache.outputs.cache-hit <span class=\"token operator\">!=</span> <span class=\"token string\">'true'</span></span><span class=\"gatsby-highlight-code-line\">        run: <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">'npm cache missed!'</span></span>      - run: <span class=\"token function\">npm</span> ci</code></pre></div>\n<p>이제 워크플로우 실행 로그를 확인해보면 캐시에 주어진 키에 해당하는 데이터가 존재하였기 때문에 <code>npm cache hit</code>만 출력이 되는 것을 볼 수 있습니다.\n<code>npm cache miss</code>를 출력하는 작업 단계는 <code>if</code> 속성에 명시된 조건이 거짓이므로 수행되지 않습니다.</p>\n<div class=\"gatsby-code-title\">Log</div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">☑️ Set up Job\n☑️ Run actions/checkout@v3\n☑️ Run actions/cache@v3\n<span class=\"gatsby-highlight-code-line\">☑️ Run <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">'npm cache hit!'</span></span><span class=\"gatsby-highlight-code-line\">▶ Run <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">'npm cache hit!'</span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token function\">npm</span> cache hit<span class=\"token operator\">!</span></span><span class=\"gatsby-highlight-code-line\">🚫 Run <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">'npm cache missed!'</span></span>☑️ Run <span class=\"token function\">npm</span> ci\n☑️ Post Run actions/cache@v3\n☑️ Post Run actions/checkout@v3\n☑️ Complete Job</code></pre></div>\n<p>실제 워크플로우에서는 <code>npm-cache</code> 출력값을 활용해서 불필요한 작업 단계를 생략하기 위해서 많이 사용되고 있습니다.\n예를 들어, 사설 패키지 저장소를 사용하는 경우 GitHub의 캐시에 패키지가 이미 존재한다면 굳이 해당 저장소에 접근하기 위한 인증 단계를 거칠 필요가 없을 것입니다.</p>\n<h2 id=\"실습-코드\" style=\"position:relative;\"><a href=\"#%EC%8B%A4%EC%8A%B5-%EC%BD%94%EB%93%9C\" aria-label=\"실습 코드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>실습 코드</h2>\n<p>본 포스팅에서 작성한 YAML 파일과 워크플로우 실행 결과는 아래 코드 저장소에서 확인하실 수 있습니다.</p>\n<ul>\n<li>Code: <a href=\"https://github.com/DaleSchool/github-actions-cache\">https://github.com/DaleSchool/github-actions-cache</a></li>\n<li>Actions: <a href=\"https://github.com/DaleSchool/github-actions-cache/actions\">https://github.com/DaleSchool/github-actions-cache/actions</a></li>\n</ul>\n<h2 id=\"마치면서\" style=\"position:relative;\"><a href=\"#%EB%A7%88%EC%B9%98%EB%A9%B4%EC%84%9C\" aria-label=\"마치면서 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>마치면서</h2>\n<p>지금까지 GitHub 캐시에 잘 바뀌지 않는 파일들을 저장하기 위해서 사용되는 캐시(Cache) 액션을 워크플로우에 어떻게 설정하고 사용하는지에 대해서 살펴보았습니다.\n참고로 하나의 코드 저장소(repository)에는 총 10 GB 캐시 용량이 주어지며 일주일이 넘게 접근이 되지 않은 파일들을 자동으로 캐시에서 삭제됩니다.\nCache 액션에 대한 좀 더 자세한 내용은 <a href=\"https://github.com/marketplace/actions/cache\">GitHub Marketplace</a>를 참고 바랍니다.</p>\n<blockquote>\n<p>GitHub Actions 관련 포스팅은 <a href=\"/?tag=GitHubActions\">GitHub Actions 태그</a>를 통해서 쉽게 만나보세요!</p>\n</blockquote>","timeToRead":11,"fields":{"slug":"/github-actions-cache/","tags":["GitHub","GitHubActions","CI","CD"]},"frontmatter":{"title":"GitHub Actions의 캐시(Cache) 액션으로 패키지 설치 최적화하기","date":"May 1, 2022"}},"next":{"fields":{"slug":"/js-npm-config/"},"frontmatter":{"title":"npmrc 파일과 npm config 커맨드"}}}},"staticQueryHashes":["2168229929","2362167539","3056348342"]}