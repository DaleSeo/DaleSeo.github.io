{"componentChunkName":"component---src-templates-detail-template-jsx","path":"/github-actions-artifacts/","result":{"pageContext":{"previous":{"fields":{"slug":"/github-actions-triggers/"},"frontmatter":{"title":"GitHub Actions에서 워크플로우의 방아쇠를 설정하기"}},"node":{"html":"<p>이번 포스팅에서는 GitHub Actions의 아티팩트(Artifact) 기능을 활용하여 파일을 올리거나 내려받는 방법에 대해서 알아보겠습니다.</p>\n<h2 id=\"실습-프로젝트와-코드-저장소-생성\" style=\"position:relative;\"><a href=\"#%EC%8B%A4%EC%8A%B5-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8%EC%99%80-%EC%BD%94%EB%93%9C-%EC%A0%80%EC%9E%A5%EC%86%8C-%EC%83%9D%EC%84%B1\" aria-label=\"실습 프로젝트와 코드 저장소 생성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>실습 프로젝트와 코드 저장소 생성</h2>\n<p>간단한 실습을 위해서 Create React App을 통해 간단한 자바스크립트 프로젝트를 하나 생성하겠습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ npx create-react-app github-actions-artifacts\n\nCreating a new React app <span class=\"token keyword\">in</span> /Users/daleseo/temp/github-actions-artifacts.\n\nInstalling packages. This might take a couple of minutes.\nInstalling react, react-dom, and react-scripts with cra-template<span class=\"token punctuation\">..</span>.\n\n<span class=\"token punctuation\">(</span><span class=\"token punctuation\">..</span>. 생략 <span class=\"token punctuation\">..</span>.<span class=\"token punctuation\">)</span>\n\nWe suggest that you begin by typing:\n\n  <span class=\"token builtin class-name\">cd</span> github-actions-artifacts\n  <span class=\"token function\">npm</span> start\n\nHappy hacking<span class=\"token operator\">!</span></code></pre></div>\n<p>그 다음 본인 GitHub에 계정에 새로운 코드 저장소(repository)를 하나를 만들고 위에서 생성한 프로젝트의 코드를 올립니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token builtin class-name\">cd</span> github-actions-artifacts\n$ <span class=\"token function\">git</span> remote <span class=\"token function\">add</span> origin https://github.com/DaleSchool/github-actions-artifacts.git\n$ <span class=\"token function\">git</span> branch -M main\n$ <span class=\"token function\">git</span> push -u origin main\nEnumerating objects: <span class=\"token number\">32</span>, done.\nCounting objects: <span class=\"token number\">100</span>% <span class=\"token punctuation\">(</span><span class=\"token number\">32</span>/32<span class=\"token punctuation\">)</span>, done.\nDelta compression using up to <span class=\"token number\">8</span> threads\nCompressing objects: <span class=\"token number\">100</span>% <span class=\"token punctuation\">(</span><span class=\"token number\">28</span>/28<span class=\"token punctuation\">)</span>, done.\nWriting objects: <span class=\"token number\">100</span>% <span class=\"token punctuation\">(</span><span class=\"token number\">32</span>/32<span class=\"token punctuation\">)</span>, <span class=\"token number\">173.48</span> KiB <span class=\"token operator\">|</span> <span class=\"token number\">11.57</span> MiB/s, done.\nTotal <span class=\"token number\">32</span> <span class=\"token punctuation\">(</span>delta <span class=\"token number\">3</span><span class=\"token punctuation\">)</span>, reused <span class=\"token number\">0</span> <span class=\"token punctuation\">(</span>delta <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>, pack-reused <span class=\"token number\">0</span>\nremote: Resolving deltas: <span class=\"token number\">100</span>% <span class=\"token punctuation\">(</span><span class=\"token number\">3</span>/3<span class=\"token punctuation\">)</span>, done.\nTo https://github.com/DaleSchool/github-actions-artifacts.git\n * <span class=\"token punctuation\">[</span>new branch<span class=\"token punctuation\">]</span>      main -<span class=\"token operator\">></span> main\nbranch <span class=\"token string\">'main'</span> <span class=\"token builtin class-name\">set</span> up to track <span class=\"token string\">'origin/main'</span><span class=\"token builtin class-name\">.</span></code></pre></div>\n<p>저장소의 이름은 원하는대로 지으시면 되며 저는 프로젝트 명과 동일한 <code>github-actions-artifacts</code>이라는 이름으로 실습 코드 저장소를 만들었습니다.</p>\n<h2 id=\"폴더-업로드-하기\" style=\"position:relative;\"><a href=\"#%ED%8F%B4%EB%8D%94-%EC%97%85%EB%A1%9C%EB%93%9C-%ED%95%98%EA%B8%B0\" aria-label=\"폴더 업로드 하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>폴더 업로드 하기</h2>\n<p>GitHub Actions에서 빌드(build)나 테스트(test)를 돌리면 보통 CI 서버 내에 결과물이 생성이 되는데요.</p>\n<p>예를 들어, React 앱의 경우 빌드의 결과물로 <code>build</code> 폴더에 웹 서버에 배포할 파일들이 생성되고요.\nJest로 테스트를 실행하면 <code>coverage</code> 폴더에 리포트 파일들이 생성되지요.</p>\n<p>만약에 이렇게 CI 서버의 특정 폴더에 저장된 파일들을 로컬로 내려받아서 확인해보고 싶다면 Artifact 기능을 활용</p>\n<p>간단한 실습을 위해서 <code>.github/workflows</code> 디렉토리에 <code>artifacts1.yml</code>을 생성하고\n다음과 같이 <code>build</code>와 <code>test</code>, 이렇게 두 개의 작업(job)으로 이루어진 워크플로우를 작성해보겠습니다.</p>\n<div class=\"gatsby-code-title\">.github/workflows/artifacts1.yml</div>\n<div class=\"gatsby-highlight\" data-language=\"yml\"><pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Our Artifacts 1\n<span class=\"token key atrule\">on</span><span class=\"token punctuation\">:</span> push\n<span class=\"token key atrule\">jobs</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">build</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">runs-on</span><span class=\"token punctuation\">:</span> ubuntu<span class=\"token punctuation\">-</span>latest\n    <span class=\"token key atrule\">steps</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/checkout@v3\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> npm ci\n<span class=\"gatsby-highlight-code-line\">      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> npm run build</span><span class=\"gatsby-highlight-code-line\">      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/upload<span class=\"token punctuation\">-</span>artifact@v3</span><span class=\"gatsby-highlight-code-line\">        <span class=\"token key atrule\">with</span><span class=\"token punctuation\">:</span></span><span class=\"gatsby-highlight-code-line\">          <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> build</span><span class=\"gatsby-highlight-code-line\">          <span class=\"token key atrule\">path</span><span class=\"token punctuation\">:</span> build</span>  <span class=\"token key atrule\">test</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">runs-on</span><span class=\"token punctuation\">:</span> ubuntu<span class=\"token punctuation\">-</span>latest\n    <span class=\"token key atrule\">steps</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/checkout@v3\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> npm ci\n<span class=\"gatsby-highlight-code-line\">      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> npm test <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span> <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>coverage</span><span class=\"gatsby-highlight-code-line\">      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/upload<span class=\"token punctuation\">-</span>artifact@v3</span><span class=\"gatsby-highlight-code-line\">        <span class=\"token key atrule\">with</span><span class=\"token punctuation\">:</span></span><span class=\"gatsby-highlight-code-line\">          <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> coverage</span><span class=\"gatsby-highlight-code-line\">          <span class=\"token key atrule\">path</span><span class=\"token punctuation\">:</span> coverage</span></code></pre></div>\n<p>두 개의 작업에서 공통적으로 <code>actions/upload-artifact@v3</code> 액션을 사용하고 있는데요.\n<code>with</code> 키를 통해서 Artifact로 이름을 나타내는 <code>name</code> 옵션과 Artifact로 경로를 나타내는 <code>path</code> 옵션을 명시해주고 있습니다.</p>\n<p>따라서 첫 번째 <code>build</code> 작업의 경우 <code>build</code> 폴더를 <code>build</code>라는 이름의 Artifact로 업로드하고,\n두 번째 <code>test</code> 작업의 경우 <code>coverage</code> 폴더를 <code>coverage</code>라는 이름의 Artifact로 업로드하는 것이지요.</p>\n<blockquote>\n<p>GitHub 저장소로 부터 코드를 내려받기 위해서 사용된 <code>actions/checkout@v3</code> 액션에 대해서는 <a href=\"/github-actions-checkout/\">별도 포스팅</a>에서 자세히 다루고 있으니 참고 바랍니다.</p>\n</blockquote>\n<p><code>artifacts1.yml</code> 파일을 GitHub 저장소로 올린 후 <code>Actions</code> 탭에 들어가면 워크플로우가 실행될텐데요.\n그 중에 <code>build</code> 작업에 들어가보면 다음과 같은 실행 로그가 확인될 겁니다.</p>\n<div class=\"gatsby-code-title\">Log(build)</div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">☑️ Set up Job\n☑️ Run actions/checkout@v3\n☑️ Run <span class=\"token function\">npm</span> ci\n☑️ Run <span class=\"token function\">npm</span> run build\n☑️ Run actions/upload-artifact@v3\n☑️ Post Run actions/checkout@v3\n☑️ Complete Job</code></pre></div>\n<p>이 중 <code>Run actions/upload-artifact@v3</code> 항목을 열어보시면 15개의 파일이 총 크기가 558KB인데 187KB로 압축되어 Artifact로 업로드되었다고 나올 것입니다.</p>\n<div class=\"gatsby-code-title\">Log(build)</div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">Run actions/upload-artifact@v3\n  with:\n    name: build\n    path: build\n    if-no-files-found: warn\nWith the provided path, there will be <span class=\"token number\">15</span> files uploaded\nStarting artifact upload\nFor <span class=\"token function\">more</span> detailed logs during the artifact upload process, <span class=\"token builtin class-name\">enable</span> step-debugging: https://docs.github.com/actions/monitoring-and-troubleshooting-workflows/enabling-debug-logging<span class=\"token comment\">#enabling-step-debug-logging</span>\nArtifact name is valid<span class=\"token operator\">!</span>\nContainer <span class=\"token keyword\">for</span> artifact <span class=\"token string\">\"build\"</span> successfully created. Starting upload of file<span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span>\nTotal size of all the files uploaded is <span class=\"token number\">187368</span> bytes\nFile upload process has finished. Finalizing the artifact upload\nArtifact has been finalized. All files have been successfully uploaded<span class=\"token operator\">!</span>\n\nThe raw size of all the files that were specified <span class=\"token keyword\">for</span> upload is <span class=\"token number\">559325</span> bytes\nThe size of all the files that were uploaded is <span class=\"token number\">187368</span> bytes. This takes into account any <span class=\"token function\">gzip</span> compression used to reduce the upload size, <span class=\"token function\">time</span> and storage\n\nNote: The size of downloaded zips can differ significantly from the reported size. For <span class=\"token function\">more</span> information see: https://github.com/actions/upload-artifact<span class=\"token comment\">#zipped-artifact-downloads</span>\n\nArtifact build has been successfully uploaded<span class=\"token operator\">!</span></code></pre></div>\n<p>이번에는 <code>test</code> 작업에 들어가보면 유사한 실행 로그가 보일텐데요.</p>\n<div class=\"gatsby-code-title\">Log(test)</div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">☑️ Set up Job\n☑️ Run actions/checkout@v3\n☑️ Run <span class=\"token function\">npm</span> ci\n☑️ Run <span class=\"token function\">npm</span> <span class=\"token builtin class-name\">test</span> -- --coverage\n☑️ Run actions/upload-artifact@v3\n☑️ Post Run actions/checkout@v3\n☑️ Complete Job</code></pre></div>\n<p>마찬가지로 <code>Run actions/upload-artifact@v3</code> 항목을 열어보시면 14개의 파일이 총 크기가 60KB인데 20KB로 압축되어 Artifact로 업로드되었다고 나올 것입니다.</p>\n<div class=\"gatsby-code-title\">Log(test)</div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">Run actions/upload-artifact@v3\n  with:\n    name: coverage\n    path: coverage\n    if-no-files-found: warn\nWith the provided path, there will be <span class=\"token number\">14</span> files uploaded\nStarting artifact upload\nFor <span class=\"token function\">more</span> detailed logs during the artifact upload process, <span class=\"token builtin class-name\">enable</span> step-debugging: https://docs.github.com/actions/monitoring-and-troubleshooting-workflows/enabling-debug-logging<span class=\"token comment\">#enabling-step-debug-logging</span>\nArtifact name is valid<span class=\"token operator\">!</span>\nContainer <span class=\"token keyword\">for</span> artifact <span class=\"token string\">\"coverage\"</span> successfully created. Starting upload of file<span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span>\nTotal size of all the files uploaded is <span class=\"token number\">19188</span> bytes\nFile upload process has finished. Finalizing the artifact upload\nArtifact has been finalized. All files have been successfully uploaded<span class=\"token operator\">!</span>\n\nThe raw size of all the files that were specified <span class=\"token keyword\">for</span> upload is <span class=\"token number\">60023</span> bytes\nThe size of all the files that were uploaded is <span class=\"token number\">19188</span> bytes. This takes into account any <span class=\"token function\">gzip</span> compression used to reduce the upload size, <span class=\"token function\">time</span> and storage\n\nNote: The size of downloaded zips can differ significantly from the reported size. For <span class=\"token function\">more</span> information see: https://github.com/actions/upload-artifact<span class=\"token comment\">#zipped-artifact-downloads</span>\n\nArtifact coverage has been successfully uploaded<span class=\"token operator\">!</span></code></pre></div>\n<p>두 개의 작업이 실행이 끝나면 워크플로우 화면의 하단에서 2개의 Artifact를 다운로드 받을 수 있는 링크가 보일 것입니다.\n링크를 클릭하시면 해당 Artifact를 zip 압축 파일로 로컬로 내려받을 수 있습니다.</p>\n<p><img src=\"https://res.cloudinary.com/daleseo/image/upload/v1686969149/github-actions-artifacts.png\" alt=\"github-actions-artifacts\"></p>\n<h2 id=\"작업-간-파일-공유\" style=\"position:relative;\"><a href=\"#%EC%9E%91%EC%97%85-%EA%B0%84-%ED%8C%8C%EC%9D%BC-%EA%B3%B5%EC%9C%A0\" aria-label=\"작업 간 파일 공유 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>작업 간 파일 공유</h2>\n<p>GitHub Actions에서 작업(job)은 독립된 CI 서버에서 완전히 격리되어 실행되기 때문에 기본적으로 데이터 공유되지 않는데요.\nArtifact로 파일을 한 작업에서 올리고 다른 작업에서 내려받으면 서로 다른 작업 간에 데이터를 공유가 가능해집니다.</p>\n<p>이번에는 저장소의 <code>.github/workflows</code> 디렉토리에 <code>artifacts2.yml</code>을 생성하고\n<code>up</code>와 <code>down</code> 작업으로 이루어진 워크플로우를 작성해볼께요.</p>\n<div class=\"gatsby-highlight\" data-language=\"yml\"><pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Our Artifacts 2\n<span class=\"token key atrule\">on</span><span class=\"token punctuation\">:</span> push\n<span class=\"token key atrule\">jobs</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">up</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">runs-on</span><span class=\"token punctuation\">:</span> ubuntu<span class=\"token punctuation\">-</span>latest\n    <span class=\"token key atrule\">steps</span><span class=\"token punctuation\">:</span>\n<span class=\"gatsby-highlight-code-line\">      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> echo \"Hello<span class=\"token punctuation\">,</span> GitHub Actions<span class=\"token tag\">!</span>\" <span class=\"token punctuation\">></span> hello.txt</span><span class=\"gatsby-highlight-code-line\">      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/upload<span class=\"token punctuation\">-</span>artifact@v3</span><span class=\"gatsby-highlight-code-line\">        <span class=\"token key atrule\">with</span><span class=\"token punctuation\">:</span></span><span class=\"gatsby-highlight-code-line\">          <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> hello</span><span class=\"gatsby-highlight-code-line\">          <span class=\"token key atrule\">path</span><span class=\"token punctuation\">:</span> hello.txt</span>  <span class=\"token key atrule\">down</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">runs-on</span><span class=\"token punctuation\">:</span> ubuntu<span class=\"token punctuation\">-</span>latest\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token key atrule\">needs</span><span class=\"token punctuation\">:</span> up</span>    <span class=\"token key atrule\">steps</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> cat hello.txt\n        <span class=\"token key atrule\">continue-on-error</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n<span class=\"gatsby-highlight-code-line\">      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/download<span class=\"token punctuation\">-</span>artifact@v3</span><span class=\"gatsby-highlight-code-line\">        <span class=\"token key atrule\">with</span><span class=\"token punctuation\">:</span></span><span class=\"gatsby-highlight-code-line\">          <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> hello</span><span class=\"gatsby-highlight-code-line\">      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> cat hello.txt</span></code></pre></div>\n<p><code>up</code> 작업에서는 <code>Hello, GitHub Actions!</code>라는 내용이 들어있는 <code>hello.txt</code> 파일을 만들고 <code>hello</code>라는 이름의 Artifact로 올리고 있습니다.\n그리고 <code>down</code> 작업에서는 <code>hello</code>라는 이름의 Artifact를 내려받기 전과 후에 한 번씩, 총 2번 <code>hello.txt</code> 파일 콘솔에 출력하고 있는데요.\n첫 번째 출력할 때는 <code>continue-on-error</code> 옵션을 <code>true</code>로 설정하여 <code>hello.txt</code> 파일이 없어서 오류가 발생하더라도 작업 실행이 멈추지 않도록 하였습니다.</p>\n<blockquote>\n<p>GitHub Actions의 단계(step)의 실패를 무시할 때 사용하는 <code>continue-on-error</code> 옵션에 대해서는 <a href=\"/github-actions-steps/\">별도 포스팅</a>에서 자세히 다루고 있으니 참고 바랍니다.</p>\n</blockquote>\n<p>여기서 중요한 부분이 <code>needs</code> 속성을 사용해서 <code>down</code> 작업이 <code>up</code> 작업에 의존하도록 설정해주고 있다는 건데요.\n이렇게 해주지 않으면 두 개의 작업이 동시에 시작되기 때문에 <code>down</code> 작업에서 Artifact를 다운받으려는 시점에 아직 <code>up</code> 작업에서 Artifact의 업로드가 끝나지 않았을 수도 있으니 주의 바랍니다.</p>\n<blockquote>\n<p>GitHub Actions의 작업(job) 간의 의존 관계를 설정할 때 사용하는 <code>needs</code> 속성에 대해서는 <a href=\"/github-actions-jobs/\">별도 포스팅</a>에서 자세히 다루고 있으니 참고 바랍니다.</p>\n</blockquote>\n<p>자 이제 그럼, <code>artifacts2.yml</code> 파일을 GitHub의 코드 저장소로 올린 후 <code>Actions</code> 탭에서 <code>up</code> 작업에 들어가볼까요?\n아래와 같이 23 바이트의 파일 하나가 성공적으로 업로드된 것을 볼 수 있습니다.\n용량이 너무 작아서 그런지 이번에는 압축을 하지는 않네요.</p>\n<div class=\"gatsby-code-title\">Log(up)</div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">☑️ Set up Job\n☑️ Run <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"Hello, GitHub Actions!\"</span> <span class=\"token operator\">></span> hello.txt\n☑️ Run actions/upload-artifact@v3\nRun actions/upload-artifact@v3\n  with:\n    name: hello\n    path: hello.txt\n    if-no-files-found: warn\nWith the provided path, there will be <span class=\"token number\">1</span> <span class=\"token function\">file</span> uploaded\nStarting artifact upload\nFor <span class=\"token function\">more</span> detailed logs during the artifact upload process, <span class=\"token builtin class-name\">enable</span> step-debugging: https://docs.github.com/actions/monitoring-and-troubleshooting-workflows/enabling-debug-logging<span class=\"token comment\">#enabling-step-debug-logging</span>\nArtifact name is valid<span class=\"token operator\">!</span>\nContainer <span class=\"token keyword\">for</span> artifact <span class=\"token string\">\"hello\"</span> successfully created. Starting upload of file<span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span>\nTotal size of all the files uploaded is <span class=\"token number\">23</span> bytes\nFile upload process has finished. Finalizing the artifact upload\nArtifact has been finalized. All files have been successfully uploaded<span class=\"token operator\">!</span>\n\nThe raw size of all the files that were specified <span class=\"token keyword\">for</span> upload is <span class=\"token number\">23</span> bytes\nThe size of all the files that were uploaded is <span class=\"token number\">23</span> bytes. This takes into account any <span class=\"token function\">gzip</span> compression used to reduce the upload size, <span class=\"token function\">time</span> and storage\n\nNote: The size of downloaded zips can differ significantly from the reported size. For <span class=\"token function\">more</span> information see: https://github.com/actions/upload-artifact<span class=\"token comment\">#zipped-artifact-downloads</span>\n\nArtifact hello has been successfully uploaded<span class=\"token operator\">!</span>\n☑️ Complete Job</code></pre></div>\n<p>이 번에는 <code>down</code> 작업의 실행 로그를 확인해볼까요?</p>\n<p>처음 <code>hello.text</code>를 콘솔에 출력하려고 할 때는 CI 서버에 파일이 없어서 오류가 나는데요.\n하지만 <code>hello</code>라는 이름의 Artifact를 내려받은 후에는 <code>hello.text</code>의 내용이 콘솔에 정확히 출력되는 것을 볼 수 있습니다.</p>\n<div class=\"gatsby-code-title\">Log(down)</div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">☑️ Set up Job\n☑️ Run <span class=\"token function\">cat</span> hello.txt\n<span class=\"gatsby-highlight-code-line\">Run <span class=\"token function\">cat</span> hello.txt</span><span class=\"gatsby-highlight-code-line\">cat: hello.txt: No such <span class=\"token function\">file</span> or directory</span>Error: Process completed with <span class=\"token builtin class-name\">exit</span> code <span class=\"token number\">1</span>.\n☑️ Run actions/download-artifact@v3\nRun actions/download-artifact@v3\n  with:\n    name: hello\n<span class=\"gatsby-highlight-code-line\">Starting download <span class=\"token keyword\">for</span> hello</span><span class=\"gatsby-highlight-code-line\">Directory structure has been setup <span class=\"token keyword\">for</span> the artifact</span><span class=\"gatsby-highlight-code-line\">Total number of files that will be downloaded: <span class=\"token number\">1</span></span><span class=\"gatsby-highlight-code-line\">Artifact hello was downloaded to /home/runner/work/github-actions-artifacts/github-actions-artifacts</span><span class=\"gatsby-highlight-code-line\">Artifact download has finished successfully</span>☑️ Run <span class=\"token function\">cat</span> hello.txt\n<span class=\"gatsby-highlight-code-line\">Run <span class=\"token function\">cat</span> hello.txt</span><span class=\"gatsby-highlight-code-line\">Hello, GitHub Actions<span class=\"token operator\">!</span></span>☑️ Complete Job</code></pre></div>\n<h2 id=\"실습-코드\" style=\"position:relative;\"><a href=\"#%EC%8B%A4%EC%8A%B5-%EC%BD%94%EB%93%9C\" aria-label=\"실습 코드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>실습 코드</h2>\n<p>본 포스팅에서 작성한 YAML 파일과 워크플로우 실행 결과는 아래 코드 저장소에서 확인하실 수 있습니다.</p>\n<ul>\n<li>Code: <a href=\"https://github.com/DaleSchool/github-actions-artifacts\">https://github.com/DaleSchool/github-actions-artifacts</a></li>\n<li>Actions: <a href=\"https://github.com/DaleSchool/github-actions-artifacts/actions\">https://github.com/DaleSchool/github-actions-artifacts/actions</a></li>\n</ul>\n<h2 id=\"마치면서\" style=\"position:relative;\"><a href=\"#%EB%A7%88%EC%B9%98%EB%A9%B4%EC%84%9C\" aria-label=\"마치면서 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>마치면서</h2>\n<p>지금까지 GitHub Actions에서 파일이나 폴더를 업로드하거나 다운로드 할 때 유용하게 사용할 수 있는 Artifact 기능에 대해서 살펴보았습니다.\n업로드/다운로드 Artifact에 액션에 대한 좀 더 자세한 내용은 아래 2개의 GitHub Marketplace 링크를 참고 바랍니다.</p>\n<ul>\n<li><a href=\"https://github.com/marketplace/actions/upload-a-build-artifact\">https://github.com/marketplace/actions/upload-a-build-artifact</a></li>\n<li><a href=\"https://github.com/marketplace/actions/download-a-build-artifact\">https://github.com/marketplace/actions/download-a-build-artifact</a></li>\n</ul>\n<blockquote>\n<p>GitHub Actions 관련 포스팅은 <a href=\"/?tag=GitHubActions\">GitHub Actions 태그</a>를 통해서 쉽게 만나보세요!</p>\n</blockquote>","timeToRead":8,"fields":{"slug":"/github-actions-artifacts/","tags":["GitHub","GitHubActions","CI","CD"]},"frontmatter":{"title":"GitHub Actions의 아티팩트(Artifact)로 파일 올리거나 내려받기","date":"Jun 16, 2023"}},"next":{"fields":{"slug":"/zod-transformation/"},"frontmatter":{"title":"Zod로 입출력 간 데이터 변환하기"}}}},"staticQueryHashes":["2168229929","2362167539","3056348342"]}