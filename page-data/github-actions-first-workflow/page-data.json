{"componentChunkName":"component---src-templates-detail-template-jsx","path":"/github-actions-first-workflow/","result":{"pageContext":{"previous":null,"node":{"html":"<p><a href=\"/github-actions-basics/\">지난 포스팅</a>에서 GitHub Actions를 이해하기 위해서 필요한 핵심 개념에 대해서 알아보았습니다.\n이번 포스팅에서는 실제로 GitHub의 저장소에 매우 간단한 워크플로우를 하나 추가하고 함께 테스트를 해보겠습니다.</p>\n<h2 id=\"github-저장소-생성\" style=\"position:relative;\"><a href=\"#github-%EC%A0%80%EC%9E%A5%EC%86%8C-%EC%83%9D%EC%84%B1\" aria-label=\"github 저장소 생성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>GitHub 저장소 생성</h2>\n<p>GitHub 계정이 있으시다면 누구나 무료로 GitHub 워크플로우를 사용해볼 수 있습니다 🤗\n실습을 위해서 본인 GitHub에 계정에 <code>github-actions-first-workflow</code>라는 이름으로 새로운 코드 저장소(repository)를 하나를 만들고 시작하겠습니다.</p>\n<h2 id=\"워크플로우-파일-생성\" style=\"position:relative;\"><a href=\"#%EC%9B%8C%ED%81%AC%ED%94%8C%EB%A1%9C%EC%9A%B0-%ED%8C%8C%EC%9D%BC-%EC%83%9D%EC%84%B1\" aria-label=\"워크플로우 파일 생성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>워크플로우 파일 생성</h2>\n<p>워크플로우는 YAML 파일을 통해 설정하는데요.\n반드시 <code>.github/workflows</code> 폴더 아래에 YAML 파일이 위치해야 GitHub에서 워크플로우로 인식을 하도록 약속이 되어 있습니다.</p>\n<p>따라서 실습을 위해서 생성한 저장소에 <code>.github/workflows</code>라는 폴더를 만든 후, 그 안에 <code>first.yml</code>라는 이름의 YAML 파일을 하나 생성합니다.\n그리고 YAML 파일 제일 위에 <code>name</code> 키를 통해서 해당 워크플로우의 이름을 설정해주겠습니다.</p>\n<div class=\"gatsby-code-title\">.github/workflows/first.yml</div>\n<div class=\"gatsby-highlight\" data-language=\"yml\"><pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"gatsby-highlight-code-line\"><span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Our First Workflow</span></code></pre></div>\n<p><code>name</code> 키를 생략하면 파일 경로가 워크플로우 이름으로 사용되기 때문에 반드시 설정해줘야하는 것은 아니지만 <code>name</code>키를 명시하여 워크플로우에 알맞은 이름을 부여해주는 것이 일반적입니다.\n왜냐하면 하나의 코드 저장소에는 여러 개의 워크플로우를 추가할 수 있어서 워크플로우의 이름이 모호하면 여러 워크플로우를 빠르게 식별하기가 어렵기 때문입니다.</p>\n<h2 id=\"워크플로우-실행-조건-설정\" style=\"position:relative;\"><a href=\"#%EC%9B%8C%ED%81%AC%ED%94%8C%EB%A1%9C%EC%9A%B0-%EC%8B%A4%ED%96%89-%EC%A1%B0%EA%B1%B4-%EC%84%A4%EC%A0%95\" aria-label=\"워크플로우 실행 조건 설정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>워크플로우 실행 조건 설정</h2>\n<p>다음으로 필수 항목인 <code>on</code> 키를 통해서 워크플로우가 언제 실행되야할지 설정해줘야 합니다.</p>\n<p>수동으로 워크플로우를 실행할 수도 있지만 일반적으로 코드 저장소에서 어떤 이벤트가 발생할 때 마다 워크플로우를 자동으로 촉발(trigger)하도록 설정하는 경우가 대부분입니다.</p>\n<p>실습에서는 가장 많이 사용되는 이벤트 중 하나인 <code>push</code> 이벤트를 사용해보겠습니다.</p>\n<div class=\"gatsby-code-title\">.github/workflows/first.yml</div>\n<div class=\"gatsby-highlight\" data-language=\"yml\"><pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Our First Workflow\n<span class=\"gatsby-highlight-code-line\"><span class=\"token key atrule\">on</span><span class=\"token punctuation\">:</span> push</span></code></pre></div>\n<p>이렇게 설정을 해주면 누군가가 코드 저장소에 변경 사항을 푸시(push)하거나, pull request가 머지(merge)될 때 마다 해당 워크플로우가 자동으로 실행되게 됩니다.</p>\n<h2 id=\"워크플로우-작업-내용-명시\" style=\"position:relative;\"><a href=\"#%EC%9B%8C%ED%81%AC%ED%94%8C%EB%A1%9C%EC%9A%B0-%EC%9E%91%EC%97%85-%EB%82%B4%EC%9A%A9-%EB%AA%85%EC%8B%9C\" aria-label=\"워크플로우 작업 내용 명시 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>워크플로우 작업 내용 명시</h2>\n<p>워크플로우에서 어떤 작업들을 수행할지는 <code>jobs</code> 키를 통해서 설정하는데요.\n<code>jobs</code> 키에는 여러 개의 작업을 작업 식별자(ID)와 작업 세부 내용 간의 맵핑(mapping) 형태로 표시를 합니다.</p>\n<p>예를 들어, 콘솔에 <code>Hello, GitHub Actions!</code>를 출력하는 <code>echo</code>라는 식별자를 가진 작업을 하나 추가해보겠습니다.</p>\n<div class=\"gatsby-code-title\">.github/workflows/first.yml</div>\n<div class=\"gatsby-highlight\" data-language=\"yml\"><pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Our First Workflow\n<span class=\"token key atrule\">on</span><span class=\"token punctuation\">:</span> push\n<span class=\"gatsby-highlight-code-line\"><span class=\"token key atrule\">jobs</span><span class=\"token punctuation\">:</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token key atrule\">echo</span><span class=\"token punctuation\">:</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token key atrule\">runs-on</span><span class=\"token punctuation\">:</span> ubuntu<span class=\"token punctuation\">-</span>latest</span><span class=\"gatsby-highlight-code-line\">    <span class=\"token key atrule\">steps</span><span class=\"token punctuation\">:</span></span><span class=\"gatsby-highlight-code-line\">      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> echo 'Hello<span class=\"token punctuation\">,</span> GitHub Actions<span class=\"token tag\">!'</span></span></code></pre></div>\n<p>작업 세부 내용에는 필수적으로 <code>runs-on</code> 키를 통해 해당 작업이 어느 환경에서 돌아가는지, 그리고 <code>step</code> 키를 통해 순차적인 수행할 작업 단계를 적어도 하나는 명시해야합니다.\n따라서 위 설정 내용을 해석해보면 “최신 우분투 서버에서 <code>echo 'Hello, GitHub Actions!'</code> 명령어를 실행하라”가 됩니다.</p>\n<h2 id=\"워크플로우-테스트\" style=\"position:relative;\"><a href=\"#%EC%9B%8C%ED%81%AC%ED%94%8C%EB%A1%9C%EC%9A%B0-%ED%85%8C%EC%8A%A4%ED%8A%B8\" aria-label=\"워크플로우 테스트 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>워크플로우 테스트</h2>\n<p>지금까지 작성한 <code>.github/workflows/first.yml</code> 파일을 코드 저장소에 푸시(push)하면 GitHub는 해당 워크플로우를 자동으로 즉시 실행할 것입니다.</p>\n<p>이제 GitHub의 코드 저장소 화면에서 <code>Actions</code> 탭을 클릭하면 <code>Our First Workflow</code>라는 워크플로우의 실행 결과를 바로 확인할 수 있을텐데요.</p>\n<div class=\"gatsby-code-title\">Jobs</div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">✅ <span class=\"token builtin class-name\">echo</span></code></pre></div>\n<p>(경우에 따라 워크플로우가 아직 실행 중일 수도 있지만 금방 실행이 끝날 것입니다.)</p>\n<p>여기서 실행 결과를 선택한 후 <code>echo</code> 작업을 선택해보면 다음과 같이 로그가 나올 것입니다.</p>\n<div class=\"gatsby-code-title\">Log</div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">☑️ Set up Job\n☑️ Run <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">'Hello, GitHub Actions!'</span>\n☑️ Complete Job</code></pre></div>\n<p>이 화면에서 두 번째 단계를 클릭해보시면 다음과 같이 콘솔에 원하던 내용이 출력된 것을 확인하실 수 있으실 겁니다.</p>\n<div class=\"gatsby-code-title\">Log</div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">☑️ Set up Job\n☑️ Run <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">'Hello, GitHub Actions!'</span>\n<span class=\"gatsby-highlight-code-line\">▶ Run <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">'Hello, GitHub Actions!'</span></span><span class=\"gatsby-highlight-code-line\">Hello, GitHub Actions<span class=\"token operator\">!</span></span>☑️ Complete Job</code></pre></div>\n<h2 id=\"워크플로우-추가-작업-명시\" style=\"position:relative;\"><a href=\"#%EC%9B%8C%ED%81%AC%ED%94%8C%EB%A1%9C%EC%9A%B0-%EC%B6%94%EA%B0%80-%EC%9E%91%EC%97%85-%EB%AA%85%EC%8B%9C\" aria-label=\"워크플로우 추가 작업 명시 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>워크플로우 추가 작업 명시</h2>\n<p>하나의 워크플로우에서 여러 개의 작업이 동시에 또는 순차적으로 처리되도록 설정할 수가 있는데요.</p>\n<p>기존 작업 아래에 <code>pwd-ls</code>라는 작업 식별자를 갖는 새로운 작업을 추가해볼까요?\n이번에는 현재 작업 디렉토리의 경로를 출력한 후 그 경로 내 파일들을 나열해보겠습니다.</p>\n<div class=\"gatsby-code-title\">.github/workflows/first.yml</div>\n<div class=\"gatsby-highlight\" data-language=\"yml\"><pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Our First Workflow\n<span class=\"token key atrule\">on</span><span class=\"token punctuation\">:</span> push\n<span class=\"token key atrule\">jobs</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">echo</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">runs-on</span><span class=\"token punctuation\">:</span> ubuntu<span class=\"token punctuation\">-</span>latest\n    <span class=\"token key atrule\">steps</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> echo 'Hello<span class=\"token punctuation\">,</span> GitHub Actions<span class=\"token tag\">!'</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token key atrule\">pwd-ls</span><span class=\"token punctuation\">:</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> PWD &amp; LS</span><span class=\"gatsby-highlight-code-line\">    <span class=\"token key atrule\">runs-on</span><span class=\"token punctuation\">:</span> ubuntu<span class=\"token punctuation\">-</span>latest</span><span class=\"gatsby-highlight-code-line\">    <span class=\"token key atrule\">steps</span><span class=\"token punctuation\">:</span></span><span class=\"gatsby-highlight-code-line\">      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Print working directory</span><span class=\"gatsby-highlight-code-line\">        <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> pwd</span><span class=\"gatsby-highlight-code-line\">      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> List files</span><span class=\"gatsby-highlight-code-line\">        <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> ls <span class=\"token punctuation\">-</span>al</span></code></pre></div>\n<p>이번에는 <code>name</code> 키도 사용하여 작업(job)의 이름과 각 작업 단계(step)에 이름을 부여해보았습니다.\n마찬가지로 필수 설정은 아니지만 워크플로우가 복잡해지면 도움이 되겠죠?</p>\n<p>이제 <code>Actions</code> 탭에 가서 방금 실행된 워크플로우를 선택하면 기존에 <code>echo</code> 작업뿐만이 아니라 <code>PWD &#x26; LS</code> 작업이 추가로 보일 것입니다.</p>\n<div class=\"gatsby-code-title\">Jobs</div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">✅ <span class=\"token builtin class-name\">echo</span>\n<span class=\"gatsby-highlight-code-line\">✅ <span class=\"token environment constant\">PWD</span> <span class=\"token operator\">&amp;</span> LS</span></code></pre></div>\n<p>이 추가된 작업을 선택하면 다음과 같은 로그가 나올 것입니다.\n명령어 대신에 우리가 직접 부여한 이름이 작업 단계의 이름으로 표시되는 것을 확인할 수 있죠? 😉</p>\n<div class=\"gatsby-code-title\">Log</div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">☑️ Set up Job\n☑️ Print working directory\n☑️ List files\n☑️ Complete Job</code></pre></div>\n<p>여기서 각 작업 단계를 선택해보면 어떤 명령어가 수행되었고 콘솔에 무엇이 출력이 되었는지 확인할 수 있습니다.</p>\n<div class=\"gatsby-code-title\">Log</div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">☑️ Set up Job\n☑️ Print working directory\n<span class=\"gatsby-highlight-code-line\">▶ Run <span class=\"token builtin class-name\">pwd</span></span><span class=\"gatsby-highlight-code-line\">/home/runner/work/github-actions-workflows/github-actions-workflows</span>☑️ List files\n<span class=\"gatsby-highlight-code-line\">▶ Run <span class=\"token function\">ls</span> -al</span><span class=\"gatsby-highlight-code-line\">total <span class=\"token number\">8</span></span><span class=\"gatsby-highlight-code-line\">drwxr-xr-x <span class=\"token number\">2</span> runner docker <span class=\"token number\">4096</span> Apr <span class=\"token number\">18</span> <span class=\"token number\">21</span>:20 <span class=\"token builtin class-name\">.</span></span><span class=\"gatsby-highlight-code-line\">drwxr-xr-x <span class=\"token number\">3</span> runner docker <span class=\"token number\">4096</span> Apr <span class=\"token number\">18</span> <span class=\"token number\">21</span>:20 <span class=\"token punctuation\">..</span></span>☑️ Complete Job</code></pre></div>\n<h2 id=\"실습-코드-저장소\" style=\"position:relative;\"><a href=\"#%EC%8B%A4%EC%8A%B5-%EC%BD%94%EB%93%9C-%EC%A0%80%EC%9E%A5%EC%86%8C\" aria-label=\"실습 코드 저장소 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>실습 코드 저장소</h2>\n<p>본 포스팅에서 작성한 YAML 파일과 워크플로우 실행 결과는 아래 코드 저장소에서 확인하실 수 있습니다.</p>\n<ul>\n<li>Code: <a href=\"https://github.com/DaleSchool/github-actions-first-workflow\">https://github.com/DaleSchool/github-actions-first-workflow</a></li>\n<li>Actions: <a href=\"https://github.com/DaleSchool/github-actions-first-workflow/actions\">https://github.com/DaleSchool/github-actions-first-workflow/actions</a></li>\n</ul>\n<h2 id=\"마치면서\" style=\"position:relative;\"><a href=\"#%EB%A7%88%EC%B9%98%EB%A9%B4%EC%84%9C\" aria-label=\"마치면서 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>마치면서</h2>\n<p>이상으로 정말 간단한 GitHub Actions의 워크플로우를 하나 작성하고 함께 실습 코드 저장소에서 테스트해 보았습니다.\n다음 포스팅에서는 이 기초적인 워크플로우의 골격에 살을 더 붙여나가면서 좀 더 복잡한 워크플로우를 만들어보겠습니다.</p>","timeToRead":5,"fields":{"slug":"/github-actions-first-workflow/","tags":["GitHub","GitHub Actions","CI","CD"]},"frontmatter":{"title":"GitHub Actions 첫 워크플로우 생성해보기","date":"Apr 16, 2022"}},"next":{"fields":{"slug":"/github-actions-basics/"},"frontmatter":{"title":"GitHub Actions의 소개와 핵심 개념"}}}},"staticQueryHashes":["2168229929","2362167539","3056348342"]}