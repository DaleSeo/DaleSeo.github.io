{"componentChunkName":"component---src-templates-detail-template-jsx","path":"/tailwind-preflight/","result":{"pageContext":{"previous":null,"node":{"html":"<h2 id=\"preflight란\" style=\"position:relative;\"><a href=\"#preflight%EB%9E%80\" aria-label=\"preflight란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Preflight란?</h2>\n<p>Preflight는 Tailwind에서 가장 근간이 되는 기본 스타일시트(stylesheet)이며 Tailwind로 스타일한 웹 페이지가 어느 브라우저에서 열든 일관적으로 보이게 도와줍니다.\nTailwind를 사용하는 것을 “비행”이라고 비유하여 Tailwind를 쓰기 전에 꼭 필요한 도구라는 것을 나타내기 위해서 Preflight라는 재밌는 이름을 붙이지 않았을까 싶습니다.</p>\n<p>크롬이든 사파리든 파이어폭스든 우리가 사용하는 대부분의 브라우저는 자체적인 스타일시트을 내장하고 있어서 (이를 소위 User Agent Stylesheet라고 하죠?) 스타일링이 전혀 되어 있지 않은 웹 페이지도 어느 정도 HTML 요소를 육안으로 구분할 수 있습니다.\n예를 들어 <code>&#x3C;h1></code> 요소는 <code>&#x3C;h2></code> 요소보다 커 보이고, <code>&#x3C;a></code> 요소는 자동으로 밑줄이 그어지며, <code>&#x3C;button></code> 요소는 테두리가 생기게 되죠.</p>\n<blockquote>\n<p>브라우저의 내장 스타일로 인해 부작용을 최소화하기 위한 두 가지 대표적인 접근 방법인 CSS Normalize와 CSS Reset에 대해서는 <a href=\"/css-normalize-reset/\">별도 포스팅</a>에서 자세히 다루고 있으니 참고 바랍니다.</p>\n</blockquote>\n<p>그런데 이렇게 편의를 위해서 브라우저가 기본적으로 적용해주는 스타일이 Tailwind를 사용할 때는 자질구질한 걸림돌이 될 수 있는데요.\n예를 들어, 크롬 브라우저의 경우 기본적으로 <code>&#x3C;h1></code> 요소의 위 아래로 <code>21.44px</code>의 margin을 추가해주는데요.\nTailwind에서는 요소에 여백을 줄 때 <code>my-1</code>나 <code>px-2</code>처럼 단위 없이 <code>4px</code>을 기준으로 하는 숫자를 사용합니다.</p>\n<p>따라서 Tailwind로는 여백 사용자화 설정을 하지 않고서는 <code>21.44px</code>라는 margin을 만들어 낼 수 없습니다.\n만약에 브라우저의 내장 스타일이 암묵적으로 적용된 <code>&#x3C;h1></code> 요소가 Tailwind로 명시적으로 스타일된 <code>&#x3C;h1></code> 요소와 한 페이지에서 공존하면 UI 일관성을 해칠 수 있죠.</p>\n<p>하지만 Tailwind가 제공하는 Preflight를 사용하면 Tailwind를 사용할 때 문제가 되지 않도록 브라우저 수준에서 기본 적용된 CSS 스타일을 적절히 초기화를 시켜줍니다.\n이를 통해 스타일링을 누락한 부분이 쉽게 눈에 띄어 의도치 않게 브라우저의 내장 스타일에 의존하는 것을 방지해주며 결과적으로 여러 브라우저에서 동일한 결과물을 얻을 수 있습니다.</p>\n<h2 id=\"preflight의-css-초기화\" style=\"position:relative;\"><a href=\"#preflight%EC%9D%98-css-%EC%B4%88%EA%B8%B0%ED%99%94\" aria-label=\"preflight의 css 초기화 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Preflight의 CSS 초기화</h2>\n<p>Preflight는 다른 CSS Normalize/CSS Reset 라이브러리에서도 공통적으로 사용되는 많은 스타일을 포함하고 있는데요.\n대표적인 예로 모든 HTML 요소의 <code>box-sizing</code> 속성을 <code>border-box</code>로 설정해주는 것을 들 수 있겠습니다.</p>\n<p>뿐만 아니라 Tailwind의 특성을 감안하여 포함된 다소 특이한 스타일도 볼 수 있는데요.\n대략적으로 다음과 같이 정리해볼 수 있겠습니다.</p>\n<ul>\n<li>모든 HTML 요소에 적용된<code>margin</code> 속성을 일괄 제거</li>\n<li><code>&#x3C;h1></code>, <code>&#x3C;h2></code>, <code>&#x3C;h3></code>와 같은 헤딩(heading) 요소에 적용된 기본 스타일을 제거</li>\n<li><code>&#x3C;ul></code>, <code>&#x3C;ol></code>와 같은 리스트(list) 요소에 적용된 기본 스타일 제거</li>\n<li><code>&#x3C;img></code>, <code>&#x3C;svg></code>와 같은 멀티미디어 요소의 <code>display</code> 속성을 <code>block</code>으로 설정</li>\n<li><code>&#x3C;img></code>, <code>&#x3C;video></code>와 같은 멀티미디어 요소가 부모 요소를 삐져나갈 수 없도록 너비를 제한</li>\n<li>모든 HTML 요소의 테두리 속성을 Tailwind 방식으로 초기화</li>\n</ul>\n<p>참고로 전체 스타일시트는 <a href=\"https://unpkg.com/tailwindcss@%5E3/src/css/preflight.css\">여기</a>에서 확인해보실 수 있습니다.</p>\n<p>Preflight를 통해 CSS 초기화가 되면 아래와 같이 육안으로 다른 요소를 구분을 할 수 없는 완전한 백지 상태가 됩니다.\n이를 통해서 브라우저의 내장 스타일의 영향을 받지 않고 Tailwind로만 스타일링을 할 수 있게 되는 것입니다.</p>\n<iframe height=\"300\" style=\"width: 100%;\" scrolling=\"no\" title=\"tailwind-preflight\" src=\"https://codepen.io/daleseo/embed/ExdEdrm?default-tab=html%2Cresult\" frameborder=\"no\" loading=\"lazy\" allowtransparency=\"true\" allowfullscreen=\"true\">\n  See the Pen <a href=\"https://codepen.io/daleseo/pen/ExdEdrm\">\n  tailwind-preflight</a> by Dale Seo (<a href=\"https://codepen.io/daleseo\">@daleseo</a>)\n  on <a href=\"https://codepen.io\">CodePen</a>.\n</iframe>\n<h2 id=\"preflight-설정\" style=\"position:relative;\"><a href=\"#preflight-%EC%84%A4%EC%A0%95\" aria-label=\"preflight 설정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Preflight 설정</h2>\n<p>Tailwind에서 일관적인 스타일을 위해서 Preflight를 사용하는 것을 권장하고 있으며 따라서 기본적으로 활성화가 되어 있습니다.</p>\n<p>만약에 어떤 이유로든 Tailwind를 사용하는 프로젝트에서 이러한 권고를 무시하고 Preflight를 비활성화시켜야 한다면 다음과 같이 설정하시면 됩니다.</p>\n<div class=\"gatsby-code-title\">tailwind.config.js</div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">/** @type {import('tailwindcss').Config} */</span>\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  corePlugins<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    preflight<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>만약에 일부 HTML 요소를 상대로 완전히 CSS를 초기화 후에 약간의 스타일링이 필요하다면 다음과 같이 <code>@layer base</code> 지시자를 통해서 Preflight를 확장할 수도 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token atrule\"><span class=\"token rule\">@tailwind</span> base<span class=\"token punctuation\">;</span></span>\n\n<span class=\"token atrule\"><span class=\"token rule\">@layer</span> base</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token selector\">h1</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token atrule\"><span class=\"token rule\">@apply</span> text-2xl<span class=\"token punctuation\">;</span></span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token selector\">h2</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token atrule\"><span class=\"token rule\">@apply</span> text-xl<span class=\"token punctuation\">;</span></span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token selector\">h3</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token atrule\"><span class=\"token rule\">@apply</span> text-lg<span class=\"token punctuation\">;</span></span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token selector\">p</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token atrule\"><span class=\"token rule\">@apply</span> text-red-600<span class=\"token punctuation\">;</span></span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token selector\">ul</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token atrule\"><span class=\"token rule\">@apply</span> list-inside list-disc <span class=\"token property\">marker</span><span class=\"token punctuation\">:</span>text-sky-500<span class=\"token punctuation\">;</span></span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token selector\">a</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token atrule\"><span class=\"token rule\">@apply</span> text-sky-500 <span class=\"token property\">hover</span><span class=\"token punctuation\">:</span>text-sky-600<span class=\"token punctuation\">;</span></span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token atrule\"><span class=\"token rule\">@tailwind</span> components<span class=\"token punctuation\">;</span></span>\n\n<span class=\"token atrule\"><span class=\"token rule\">@tailwind</span> utilities<span class=\"token punctuation\">;</span></span></code></pre></div>\n<p>위에서 작성했던 동일한 웹 페이지가 이번에는 약간의 기본 스타일이 적용되는 것을 볼 수 있습니다.</p>\n<iframe height=\"300\" style=\"width: 100%;\" scrolling=\"no\" title=\"tailwind-preflight-extend\" src=\"https://codepen.io/daleseo/embed/WNazYaR?default-tab=html%2Cresult\" frameborder=\"no\" loading=\"lazy\" allowtransparency=\"true\" allowfullscreen=\"true\">\n  See the Pen <a href=\"https://codepen.io/daleseo/pen/WNazYaR\">\n  tailwind-preflight-extend</a> by Dale Seo (<a href=\"https://codepen.io/daleseo\">@daleseo</a>)\n  on <a href=\"https://codepen.io\">CodePen</a>.\n</iframe>\n<h2 id=\"마치면서\" style=\"position:relative;\"><a href=\"#%EB%A7%88%EC%B9%98%EB%A9%B4%EC%84%9C\" aria-label=\"마치면서 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>마치면서</h2>\n<p>이상으로 Tailwind가 제공하는 CSS 초기화 방법인 Preflight에 대해서 살펴보았습니다.\nTailwind를 사용하면 이렇게 별다른 노력없이 브라우저에 구애받지 않고 일관성있는 스타일이 가능합니다.</p>\n<blockquote>\n<p>Tailwind에 관련 포스팅은 <a href=\"http://localhost:8000/?tag=Tailwind\">Tailwind에 태그</a>를 통해서 쉽게 만나보세요!</p>\n</blockquote>","timeToRead":3,"fields":{"slug":"/tailwind-preflight/","tags":["CSS","HTML","normalize","reset","framework","Tailwind"]},"frontmatter":{"title":"Preflight: Tailwind의 CSS 초기화(Reset)","date":"May 11, 2023"}},"next":{"fields":{"slug":"/tailwind-play/"},"frontmatter":{"title":"Play CDN으로 간편하게 Tailwind 시작하기"}}}},"staticQueryHashes":["2168229929","2362167539","3056348342"]}