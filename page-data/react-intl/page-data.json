{
    "componentChunkName": "component---src-templates-detail-template-jsx",
    "path": "/react-intl/",
    "result": {"pageContext":{"previous":{"fields":{"slug":"/create-react-app/"},"frontmatter":{"title":"Create React App: 손쉽게 프로젝트 만들기"}},"node":{"html":"<p>국내 많은 서비스들이 당장 다국어 지원의 요구가 없더라도 향후 해외 진출을 염두해두고 개발 초기부터 애플리케이션을 국제화(internalization)하는 사례가 늘고 있습니다.\n이번 포스팅에서는 React Intl 라이브러리를 이용해서 다국어를 지원하는 방법에 대해서 알아보겠습니다.</p>\n<h2 id=\"react-intl-설치\" style=\"position:relative;\"><a href=\"#react-intl-%EC%84%A4%EC%B9%98\" aria-label=\"react intl 설치 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>React Intl 설치</h2>\n<p>React Intl 라이브러리는 Node.js 패키지 매니저인 npm으로 설치할 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">npm</span> i react-intl</code></pre></div>\n<h2 id=\"locale-language--region\" style=\"position:relative;\"><a href=\"#locale-language--region\" aria-label=\"locale language  region permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Locale: Language &#x26; Region</h2>\n<p>국제화(internalization)된 애플리케이션은 다양한 언어로 서비스를 할 수 있습니다.\n그러기 위해서는 사용자의 언어/지역을 자동으로 감지하거나 사용자가 직접 선택할 수 있도록 합니다.</p>\n<p>사용자의 언어/지역 정보를 플랫폼이나 프로그래밍 언어에 구애받지 않고 사용할 수 있도록 표준화 시킨 코드를 locale이라고 부르는데요.\nlocale 코드는 필수적으로 2자리로 언어를 표시하고, 선택적으로 여기에 2자리를 더해 지역까지 표시할 수 있습니다.</p>\n<p>예를 들어, 한국어는 한국에서만 사용되기 때문에 <code>ko</code>를 사용하고, 여러 지역에서 사용되는 영어의 경우, 미국 영어는 <code>en-US</code>, 영국 영어는 <code>en_GB</code>를 사용합니다.</p>\n<p>브라우저에서 돌아가는 웹 애플리케이션의 경우 언어/지역 설정을 <code>navigator.language</code> 또는 <code>navigator.languages</code>으로부터 읽어올 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> locale <span class=\"token operator\">=</span> navigator<span class=\"token punctuation\">.</span>language<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 또는 `navigator.languages[0]`</span></code></pre></div>\n<p>애플리케이션 수준에서 사용자가 직접 선택한 언어/지역을 선택하게 하고 <code>localStorage</code>와 같은 곳에 저장해두고 읽어와서 사용할 수도 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> locale <span class=\"token operator\">=</span> localStorage<span class=\"token punctuation\">.</span><span class=\"token function\">getItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"locale\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">??</span> <span class=\"token string\">\"ko\"</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>본 포스팅에서는 브라우저 설정 변경없이 간단하게 언어/지역을 바꿔볼 수 있도록 2번째 방법을 사용하여 예제 애플리케이션을 구현해보겠습니다.</p>\n<h2 id=\"메시지-관리\" style=\"position:relative;\"><a href=\"#%EB%A9%94%EC%8B%9C%EC%A7%80-%EA%B4%80%EB%A6%AC\" aria-label=\"메시지 관리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>메시지 관리</h2>\n<p>다국어를 지원하려면 지원하는 언어 별로 메시지를 관리해야 합니다.\n일반적으로는 locale 별로 JSON 파일에 필요한 모든 메시지 데이터를 객체 형태로 저장합니다.\n객체의 속성은 메시지의 식별자(ID)가 되고 값은 해당 locale에서 사용할 메시지의 템플릿이 됩니다.</p>\n<div class=\"gatsby-code-title\">lang/en-US.json</div>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"title\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"React Intl\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"info\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"The current language is {locale}.\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"label\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Language\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"button\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Save\"</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gatsby-code-title\">lang/ko.json</div>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"title\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"리액트 Intl\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"info\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"현재 언어는 {locale}입니다.\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"label\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"언어\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"button\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"저장\"</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gatsby-code-title\">lang/zh.json</div>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"label\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"语\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"button\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"节省\"</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>이렇게 지원하는 모든 locale 별로 메시지 데이터를 JSON 파일에 저장해두고 불러올 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> enUsMsg <span class=\"token keyword\">from</span> <span class=\"token string\">\"./lang/en-US.json\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> koMsg <span class=\"token keyword\">from</span> <span class=\"token string\">\"./lang/ko.json\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> zhMsg <span class=\"token keyword\">from</span> <span class=\"token string\">\"./lang/zh.json\"</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"intlprovider-컴포넌트\" style=\"position:relative;\"><a href=\"#intlprovider-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8\" aria-label=\"intlprovider 컴포넌트 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>IntlProvider 컴포넌트</h2>\n<p>다국어 지원은 일반적으로 애플리케이션의 특정 부분에서만 일어나는 것이 아니라 전역에서 일어납니다.\nReact Intl 라이브러리는 내부적으로 <code>intl</code>이라는 객체를 이용해서 메시지를 포멧팅하는데요.\n따라서 반드시 <code>&#x3C;IntlProvider/></code> 컴포넌트로 애플리케이션의 최상위 컴포넌트를 감싸서 <code>intl</code> 객체가 모든 하위 컴포넌트에서 접근 가능하도록 만들어줘야 합니다.</p>\n<div class=\"gatsby-code-title\">App.jsx</div>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> IntlProvider <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react-intl\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> enUsMsg <span class=\"token keyword\">from</span> <span class=\"token string\">\"./lang/en-US.json\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> koMsg <span class=\"token keyword\">from</span> <span class=\"token string\">\"./lang/ko.json\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> zhMsg <span class=\"token keyword\">from</span> <span class=\"token string\">\"./lang/zh.json\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> Page <span class=\"token keyword\">from</span> <span class=\"token string\">\"./Page\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> locale <span class=\"token operator\">=</span> localStorage<span class=\"token punctuation\">.</span><span class=\"token function\">getItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"locale\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">??</span> <span class=\"token string\">\"ko\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> messages <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token string-property property\">\"en-US\"</span><span class=\"token operator\">:</span> enUsMsg<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">ko</span><span class=\"token operator\">:</span> koMsg<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">zh</span><span class=\"token operator\">:</span> zhMsg <span class=\"token punctuation\">}</span><span class=\"token punctuation\">[</span>locale<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">App</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">IntlProvider</span></span> <span class=\"token attr-name\">locale</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>locale<span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">messages</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>messages<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Page</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">IntlProvider</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> App<span class=\"token punctuation\">;</span></code></pre></div>\n<p><code>&#x3C;IntlProvider/></code> 컴포넌트는 <code>locale</code>과 <code>messages</code>를 prop으로 받는데요.\n<code>locale</code> prop에는 사용자의 지역/언어에 해당하는 locale 코드를 <code>messages</code> prop에는 이 locale 코드에 해당하는 메시지 데이터를 넘김니다.</p>\n<h2 id=\"formattedmessage-컴포넌트\" style=\"position:relative;\"><a href=\"#formattedmessage-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8\" aria-label=\"formattedmessage 컴포넌트 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>FormattedMessage 컴포넌트</h2>\n<p>먼저, 로컬 스토리지에 저장되어 있는 locale 코드에 부합하는 메시지를 보여주는 <code>&#x3C;Page/></code> 컴포넌트를 구현해보겠습니다.</p>\n<p>React Intl 라이브러리는 JSX로 다국어 메시지를 보여줄 수 있도록 <code>&#x3C;FormattedMessage/></code> 컴포넌트를 제공하고 있습니다.\n<code>&#x3C;FormattedMessage/></code> 컴포넌트에 <code>id</code> prop으로 메시지 식별자를 넘기면, 위에서 <code>&#x3C;IntlProvider/></code> 컴포넌트의 <code>message</code> prop으로 넘겼던 객체로 부터 메시지를 찾습니다.</p>\n<div class=\"gatsby-code-title\">Page.jsx</div>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> FormattedMessage <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react-intl\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> Form <span class=\"token keyword\">from</span> <span class=\"token string\">\"./Form\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">Page</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>main</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">FormattedMessage</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>title<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">FormattedMessage</span></span>\n          <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>info<span class=\"token punctuation\">\"</span></span>\n          <span class=\"token attr-name\">defaultMessage</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>메시지를 찾을 수 없습니다. (locale: {locale})<span class=\"token punctuation\">\"</span></span>\n          <span class=\"token attr-name\">values</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">locale</span><span class=\"token operator\">:</span> localStorage<span class=\"token punctuation\">.</span><span class=\"token function\">getItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"locale\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span>\n        <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Form</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>main</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> Page<span class=\"token punctuation\">;</span></code></pre></div>\n<p>만약에 메시지 객체에 해당 메시지 식별자(ID)에 대한 메시지가 존재하지 않는다면 이 메시지 식별자를 자체를 메시지 문자열 대신에 화면에 보여지게 됩니다.\n예를 들어, 중국어 메시지 객체에는 <code>title</code>이라는 메시지 식별자에 해당하는 중국어 메시지가 존재하지 않기 때문에, locale이 <code>zh</code>일 때, <code>id</code> prop으로 넘겼던 <code>title</code> 자체가 메시지로 쓰이게 됩니다.</p>\n<p>대부분의 경우, 메시지 식별자가 메시지 문자열 대신에 사용되는 것을 원하지 않기 때문에, <code>defaultMessage</code> prop을 사용해서 이를 방지하기 것이 권장됩니다.\n예를 들어, 두 번째로 <code>&#x3C;FormattedMessage/></code> 컴포넌트가 사용된 부분을 보면 <code>defaultMessage</code> prop에 <code>메시지를 찾을 수 없습니다. (locale: {locale})</code>을 넘기고 있습니다.\n따라서, locale이 <code>zh</code>일 때, 중국어 메시지 객체에 <code>info</code> 메시지 식별자에 대한 메시지가 누락되어 있더라도, <code>메시지를 찾을 수 없습니다. (locale: zh)</code>가 화면에 보여지게 되는 것입니다.</p>\n<p>마지막으로 사용된 <code>values</code> prop은 메시지 템플릿 안에 사용된 변수에 대입할 값을 넘기기 위해서 사용되었습니다.</p>\n<h2 id=\"useintl--formatmessage\" style=\"position:relative;\"><a href=\"#useintl--formatmessage\" aria-label=\"useintl  formatmessage permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>useIntl() &#x26; formatMessage()</h2>\n<p>이제, 로컬 스토리지에 저장되어 있는 locale 값을 변경할 수 있는 <code>&#x3C;Form/></code> 컴포넌트를 구현해보겠습니다.\n선택란(select)을 통해서 다른 locale을 선택하고 저장 버튼(button)을 클릭하면 해당 locale 코드에 부합하는 메시지가 화면에 나타나도록 하겠습니다.</p>\n<p>저장 버튼이 아이콘으로 되어 있기 때문에 웹 접근성 향상을 위해서 <code>aria-label</code> 속성을 통해 버튼 이름을 설정해주려고 하는데요.\nHTML 속성으로는 문자열만 사용할 수 있기 때문에 <code>&#x3C;FormattedMessage/></code> 컴포넌트를 사용할 수 없는 문제가 발생합니다.</p>\n<p>이럴 경우에는, React Intl 라이브러리에서 제공하는 <code>useIntl()</code> 훅(hook)을 통해 우선 <code>intl</code> 객체를 얻습니다.\n그 다음에 <code>intl</code> 객체의 <code>formatMessage()</code> 함수를 호출하면 얻은 메시지 문자열을 <code>aria-label</code> 속성에 세팅해주면 됩니다.</p>\n<div class=\"gatsby-code-title\">Form.jsx</div>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> useState <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> FormattedMessage<span class=\"token punctuation\">,</span> useIntl <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react-intl\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">Form</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>locale<span class=\"token punctuation\">,</span> setLocale<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span>localStorage<span class=\"token punctuation\">.</span><span class=\"token function\">getItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"locale\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">??</span> <span class=\"token string\">\"ko\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> intl <span class=\"token operator\">=</span> <span class=\"token function\">useIntl</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>form</span> <span class=\"token attr-name\">onSubmit</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> localStorage<span class=\"token punctuation\">.</span><span class=\"token function\">setItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"locale\"</span><span class=\"token punctuation\">,</span> locale<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span> <span class=\"token attr-name\">htmlFor</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>locale<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">FormattedMessage</span></span>\n          <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>label<span class=\"token punctuation\">\"</span></span>\n          <span class=\"token attr-name\">defaultMessage</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Language (default message)<span class=\"token punctuation\">\"</span></span>\n        <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>select</span>\n        <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>locale<span class=\"token punctuation\">\"</span></span>\n        <span class=\"token attr-name\">value</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>locale<span class=\"token punctuation\">}</span></span>\n        <span class=\"token attr-name\">onChange</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">target</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> value <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">setLocale</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span>\n      <span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>option</span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>ko<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">ko</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>option</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>option</span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>en-US<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">en-US</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>option</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>option</span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>zh<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">zh</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>option</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>select</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span>\n        <span class=\"token attr-name\">aria-label</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>intl<span class=\"token punctuation\">.</span><span class=\"token function\">formatMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n          <span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span> <span class=\"token string\">\"button\"</span><span class=\"token punctuation\">,</span>\n          <span class=\"token literal-property property\">defaultMessage</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Save\"</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span>\n      <span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>svg</span>\n          <span class=\"token attr-name\">xmlns</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://www.w3.org/2000/svg<span class=\"token punctuation\">\"</span></span>\n          <span class=\"token attr-name\">width</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>24<span class=\"token punctuation\">\"</span></span>\n          <span class=\"token attr-name\">height</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>24<span class=\"token punctuation\">\"</span></span>\n          <span class=\"token attr-name\">viewBox</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>0 0 24 24<span class=\"token punctuation\">\"</span></span>\n          <span class=\"token attr-name\">fill</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>none<span class=\"token punctuation\">\"</span></span>\n          <span class=\"token attr-name\">stroke</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>currentColor<span class=\"token punctuation\">\"</span></span>\n          <span class=\"token attr-name\">strokeWidth</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>2<span class=\"token punctuation\">\"</span></span>\n          <span class=\"token attr-name\">strokeLinecap</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>round<span class=\"token punctuation\">\"</span></span>\n          <span class=\"token attr-name\">strokeLinejoin</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>round<span class=\"token punctuation\">\"</span></span>\n          <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>feather feather-save<span class=\"token punctuation\">\"</span></span>\n        <span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n          </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>path</span> <span class=\"token attr-name\">d</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>M19 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h11l5 5v11a2 2 0 0 1-2 2z<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>path</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n          </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>polyline</span> <span class=\"token attr-name\">points</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>17 21 17 13 7 13 7 21<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>polyline</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n          </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>polyline</span> <span class=\"token attr-name\">points</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>7 3 7 8 15 8<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>polyline</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>svg</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>form</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> Form<span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"전체-코드\" style=\"position:relative;\"><a href=\"#%EC%A0%84%EC%B2%B4-%EC%BD%94%EB%93%9C\" aria-label=\"전체 코드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>전체 코드</h2>\n<p>본 포스팅에서 작성한 코드는 아래에서 확인하고 직접 실행해보실 수 있습니다.\n(locale 코드를 선택한 후에 저장 아이콘을 클릭해보세요.)</p>\n<iframe src=\"https://codesandbox.io/embed/react-intl-08h1h?fontsize=14&hidenavigation=1&module=%2Fsrc%2FApp.jsx&theme=dark\"\n     style=\"width:100%; height:500px; border:0; border-radius: 4px; overflow:hidden;\"\n     title=\"react-intl\"\n     allow=\"accelerometer; ambient-light-sensor; camera; encrypted-media; geolocation; gyroscope; hid; microphone; midi; payment; usb; vr; xr-spatial-tracking\"\n     sandbox=\"allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts\"\n   ></iframe>\n<h2 id=\"마치면서\" style=\"position:relative;\"><a href=\"#%EB%A7%88%EC%B9%98%EB%A9%B4%EC%84%9C\" aria-label=\"마치면서 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>마치면서</h2>\n<p>지금까지 React Intl 라이브러리를 이용해서 React 애플리케이션에서 다국어 지원을 하는 방법에 대해서 간단히 살펴보았습니다.\n정리를 해보면 <code>&#x3C;IntlProvider/></code> 컴포넌트를 통해 애플리케이션 최상위에서 사용자의 언어/지역(locale) 코드와 메시지 데이터를 설정해주면,\n<code>&#x3C;FormattedMessage/></code> 컴포넌트 또는 <code>intl.formatMessage()</code> 함수를 통해서 해당 언어/지역에 부합하는 메시지를 화면에 보여줄 수 있습니다.</p>","timeToRead":6,"fields":{"slug":"/react-intl/","tags":["JavaScript","React","library","i18n"]},"frontmatter":{"title":"React Intl로 다국어 지원하기 (국제화)","date":"Sep 18, 2021"}},"next":{"fields":{"slug":"/react-hooks-testing-library/"},"frontmatter":{"title":"React Hooks Testing Library 사용법"}}}},
    "staticQueryHashes": ["2168229929","2362167539","3056348342"]}