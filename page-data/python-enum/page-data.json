{"componentChunkName":"component---src-templates-detail-template-jsx","path":"/python-enum/","result":{"pageContext":{"previous":{"fields":{"slug":"/python-datetime/"},"frontmatter":{"title":"[파이썬] datetime 모듈로 날짜/시간 처리하기"}},"node":{"html":"<p>파이썬은 버전 3.4부터 다른 언어들 처럼 enum(enumeration, 이넘) 타입을 지원하고 있습니다.\nenum은 일반적으로 서로 관련이 있는 여러 개의 상수의 집합을 정의할 때 사용되는데요.\nenum 클래스를 사용하면 인스턴스의 종류를 제한할 수 있기 때문에 견고한 프로그램을 작성하는데 도움이 됩니다.</p>\n<h2 id=\"클래스-타입-정의\" style=\"position:relative;\"><a href=\"#%ED%81%B4%EB%9E%98%EC%8A%A4-%ED%83%80%EC%9E%85-%EC%A0%95%EC%9D%98\" aria-label=\"클래스 타입 정의 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>클래스 타입 정의</h2>\n<p>간단한 예로, 웹에서 사용되는 대표적인 3개의 기술(HTML, CSS, JS)을 나타내는 enum 클래스를 작성해보겠습니다.\n<code>enum</code> 내장 모듈로 부터 불러온 <code>Enum</code> 클래스를 확장하여 <code>Skill</code> 타입을 만들었습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token keyword\">from</span> enum <span class=\"token keyword\">import</span> Enum\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Skill</span><span class=\"token punctuation\">(</span>Enum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    HTML <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n    CSS <span class=\"token operator\">=</span> <span class=\"token number\">2</span>\n    JS <span class=\"token operator\">=</span> <span class=\"token number\">3</span></code></pre></div>\n<p>enum 타입의 상수 인스턴스는 기본적으로 이름(<code>name</code>)과 값(<code>value</code>)을 속성을 가집니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> Skill<span class=\"token punctuation\">.</span>HTML\n<span class=\"token operator\">&lt;</span>Skill<span class=\"token punctuation\">.</span>HTML<span class=\"token punctuation\">:</span> <span class=\"token string\">'HTML'</span><span class=\"token operator\">></span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> Skill<span class=\"token punctuation\">.</span>HTML<span class=\"token punctuation\">.</span>name\n<span class=\"token string\">'HTML'</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> Skill<span class=\"token punctuation\">.</span>HTML<span class=\"token punctuation\">.</span>value\n<span class=\"token number\">1</span></code></pre></div>\n<p>enum 타입은 순회가 가능하기 때문에 <code>for</code> 문으로 모든 상수를 쉽게 확인할 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">for</span> skill <span class=\"token keyword\">in</span> Skill<span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>skill<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\nSkill<span class=\"token punctuation\">.</span>HTML\nSkill<span class=\"token punctuation\">.</span>CSS\nSkill<span class=\"token punctuation\">.</span>JS</code></pre></div>\n<h2 id=\"함수형-타입-정의\" style=\"position:relative;\"><a href=\"#%ED%95%A8%EC%88%98%ED%98%95-%ED%83%80%EC%9E%85-%EC%A0%95%EC%9D%98\" aria-label=\"함수형 타입 정의 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>함수형 타입 정의</h2>\n<p>자주 쓰이는 방법은 아니지만 <code>Enum</code> 클래스를 확장하는 대신에 일반 함수처럼 호출을 해서 enum 타입을 정의할 수도 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> Skill <span class=\"token operator\">=</span> Enum<span class=\"token punctuation\">(</span><span class=\"token string\">\"Skill\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"HTML CSS JS\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span>Skill<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">[</span><span class=\"token operator\">&lt;</span>Skill<span class=\"token punctuation\">.</span>HTML<span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token operator\">></span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&lt;</span>Skill<span class=\"token punctuation\">.</span>CSS<span class=\"token punctuation\">:</span> <span class=\"token number\">2</span><span class=\"token operator\">></span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&lt;</span>Skill<span class=\"token punctuation\">.</span>JS<span class=\"token punctuation\">:</span> <span class=\"token number\">3</span><span class=\"token operator\">></span><span class=\"token punctuation\">]</span></code></pre></div>\n<h2 id=\"값-자동-할당\" style=\"position:relative;\"><a href=\"#%EA%B0%92-%EC%9E%90%EB%8F%99-%ED%95%A0%EB%8B%B9\" aria-label=\"값 자동 할당 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>값 자동 할당</h2>\n<p>enum을 사용할 때, 많은 경우 값(<code>value</code>)이 무언인지는 크게 중요하지 않습니다.\n이럴 때는 <code>enum</code> 모듈의 <code>auto()</code> helper 함수를 사용하면, 첫번째 상수에 1, 두번째 상수에 2, 이렇게 1씩 증가시키면서 모든 상수에 유일한 숫자를 값으로 할당해줍니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token keyword\">from</span> enum <span class=\"token keyword\">import</span> Enum<span class=\"token punctuation\">,</span> auto\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Skill</span><span class=\"token punctuation\">(</span>Enum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    HTML <span class=\"token operator\">=</span> auto<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    CSS <span class=\"token operator\">=</span> auto<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    JS <span class=\"token operator\">=</span> auto<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span>Skill<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">[</span><span class=\"token operator\">&lt;</span>Skill<span class=\"token punctuation\">.</span>HTML<span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token operator\">></span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&lt;</span>Skill<span class=\"token punctuation\">.</span>CSS<span class=\"token punctuation\">:</span> <span class=\"token number\">2</span><span class=\"token operator\">></span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&lt;</span>Skill<span class=\"token punctuation\">.</span>JS<span class=\"token punctuation\">:</span> <span class=\"token number\">3</span><span class=\"token operator\">></span><span class=\"token punctuation\">]</span></code></pre></div>\n<p><code>auto()</code> 함수를 사용하면 기존 상수에 어떤 숫자가 할당해놨었는지 구애 받지 않고 새로운 상수를 추가할 수 있는 장점도 있습니다.</p>\n<p>뿐만 아니라, <code>Enum</code> 클래스의 <code>_generate_next_value_()</code> 메서드를 오버라이드(override)하면 숫자가 아닌 다른 값을 자동 할당할 수 있습니다.\n예를 들어, 상수의 이름과 동일한 문자열을 상수의 값으로 자동 할당할 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token keyword\">from</span> enum <span class=\"token keyword\">import</span> Enum<span class=\"token punctuation\">,</span> auto\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Skill</span><span class=\"token punctuation\">(</span>Enum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">_generate_next_value_</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">,</span> start<span class=\"token punctuation\">,</span> count<span class=\"token punctuation\">,</span> last_values<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> name\n\n    HTML <span class=\"token operator\">=</span> auto<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    CSS <span class=\"token operator\">=</span> auto<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    JS <span class=\"token operator\">=</span> auto<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span>Skill<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">[</span><span class=\"token operator\">&lt;</span>Skill<span class=\"token punctuation\">.</span>HTML<span class=\"token punctuation\">:</span> <span class=\"token string\">'HTML'</span><span class=\"token operator\">></span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&lt;</span>Skill<span class=\"token punctuation\">.</span>CSS<span class=\"token punctuation\">:</span> <span class=\"token string\">'CSS'</span><span class=\"token operator\">></span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&lt;</span>Skill<span class=\"token punctuation\">.</span>JS<span class=\"token punctuation\">:</span> <span class=\"token string\">'JS'</span><span class=\"token operator\">></span><span class=\"token punctuation\">]</span></code></pre></div>\n<h2 id=\"enum-mixin\" style=\"position:relative;\"><a href=\"#enum-mixin\" aria-label=\"enum mixin permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>enum mixin</h2>\n<p>enum 타입을 사용할 때 한 가지 불편할 수 있는 점은 상수의 이름이나 값에 접근할 때 <code>name</code>이나 <code>value</code> 속성을 사용해야 한다는 것입니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> Skill<span class=\"token punctuation\">.</span>HTML<span class=\"token punctuation\">.</span>name <span class=\"token operator\">==</span> <span class=\"token string\">'HTML'</span>\n<span class=\"token boolean\">True</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> Skill<span class=\"token punctuation\">.</span>HTML<span class=\"token punctuation\">.</span>value <span class=\"token operator\">==</span> <span class=\"token number\">1</span>\n<span class=\"token boolean\">True</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> Skill<span class=\"token punctuation\">.</span>HTML <span class=\"token operator\">==</span> <span class=\"token string\">'HTML'</span>\n<span class=\"token boolean\">False</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>Skill<span class=\"token punctuation\">.</span>HTML<span class=\"token punctuation\">)</span>\n<span class=\"token operator\">&lt;</span>enum <span class=\"token string\">'Skill'</span><span class=\"token operator\">></span></code></pre></div>\n<p>왜냐하면 모든 상수는 결국 해당 enum 타입의 인스턴스이기 때문입니다.\n하지만 enum 타입을 사용해서 코딩을 하다보면, 매번 <code>name</code>이나 <code>value</code>를 사용하는 것이 귀찮고 까먹기도 싶습니다.</p>\n<p>이럴 때는 enum mixin(믹스인) 기법을 활용하여 <code>str</code>을 확장하는 enum 클래스를 작성합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">StrEnum</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">,</span> Enum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">_generate_next_value_</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">,</span> start<span class=\"token punctuation\">,</span> count<span class=\"token punctuation\">,</span> last_values<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> name\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__repr__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>name\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__str__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>name</code></pre></div>\n<p>그 다음, 이 클래스를 확장하여 enum 클래스를 정의하면 됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Skill</span><span class=\"token punctuation\">(</span>StrEnum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    HTML <span class=\"token operator\">=</span> auto<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    CSS <span class=\"token operator\">=</span> auto<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    JS <span class=\"token operator\">=</span> auto<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>이제 <code>Skill</code> 타입이 담고 있는 상수는 완벽하게 문자열로 취급기 때문에 좀 더 편하게 사용할 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> Skill<span class=\"token punctuation\">.</span>HTML <span class=\"token operator\">==</span> <span class=\"token string\">'HTML'</span>\n<span class=\"token boolean\">True</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token builtin\">isinstance</span><span class=\"token punctuation\">(</span>Skill<span class=\"token punctuation\">.</span>HTML<span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">)</span>\n<span class=\"token boolean\">True</span></code></pre></div>\n<h2 id=\"enum-확장\" style=\"position:relative;\"><a href=\"#enum-%ED%99%95%EC%9E%A5\" aria-label=\"enum 확장 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Enum 확장</h2>\n<p><code>Enum</code> 클래스는 다른 일반 클래스처럼 다양하게 확장해서 활용할 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token keyword\">from</span> enum <span class=\"token keyword\">import</span> Enum\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Skill</span><span class=\"token punctuation\">(</span>Enum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    HTML <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"HTML\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Hypertext Markup Language\"</span><span class=\"token punctuation\">)</span>\n    CSS <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"CSS\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Cascading Style Sheets\"</span><span class=\"token punctuation\">)</span>\n    JS <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"JS\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"JavaScript\"</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> title<span class=\"token punctuation\">,</span> description<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>title <span class=\"token operator\">=</span> title\n        self<span class=\"token punctuation\">.</span>description <span class=\"token operator\">=</span> description\n\n    <span class=\"token decorator annotation punctuation\">@classmethod</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">get_most_popular</span><span class=\"token punctuation\">(</span>cls<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> cls<span class=\"token punctuation\">.</span>JS\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">lower_title</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">.</span>lower<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> Skill<span class=\"token punctuation\">.</span>HTML<span class=\"token punctuation\">.</span>value\n<span class=\"token punctuation\">(</span><span class=\"token string\">'HTML'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Hypertext Markup Language'</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> Skill<span class=\"token punctuation\">.</span>HTML<span class=\"token punctuation\">.</span>title\n<span class=\"token string\">'HTML'</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> Skill<span class=\"token punctuation\">.</span>HTML<span class=\"token punctuation\">.</span>description\n<span class=\"token string\">'Hypertext Markup Language'</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> Skill<span class=\"token punctuation\">.</span>get_most_popular<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">&lt;</span>Skill<span class=\"token punctuation\">.</span>JS<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'JS'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'JavaScript'</span><span class=\"token punctuation\">)</span><span class=\"token operator\">></span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> Skill<span class=\"token punctuation\">.</span>CSS<span class=\"token punctuation\">.</span>lower_title<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token string\">'css'</span></code></pre></div>\n<h2 id=\"마치면서\" style=\"position:relative;\"><a href=\"#%EB%A7%88%EC%B9%98%EB%A9%B4%EC%84%9C\" aria-label=\"마치면서 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>마치면서</h2>\n<p>이상으로 파이썬에서 <code>enum</code> 내장 모듈을 이용해서 enum 타입을 정의하고 사용하는 방법에 대해서 알아보았습니다.\n파이썬의 <code>enum</code> 내장 모듈에 대한 자세한 내용은 아래 파이썬 공식 레퍼런스를 참고 바랍니다.</p>\n<ul>\n<li>enum — Support for enumerations: <a href=\"https://docs.python.org/3/library/enum.html\">https://docs.python.org/3/library/enum.html</a></li>\n</ul>","timeToRead":4,"fields":{"slug":"/python-enum/","tags":["Python","enum"]},"frontmatter":{"title":"파이썬 enum 타입 사용법","date":"Jul 11, 2020"}},"next":{"fields":{"slug":"/js-babel-resolver/"},"frontmatter":{"title":"Babel로 별칭 경로 설정하기 (Module Resolver)"}}}},"staticQueryHashes":["2168229929","2362167539","3056348342"]}