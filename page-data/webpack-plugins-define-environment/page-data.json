{"componentChunkName":"component---src-templates-detail-template-jsx","path":"/webpack-plugins-define-environment/","result":{"pageContext":{"previous":{"fields":{"slug":"/js-prettier/"},"frontmatter":{"title":"코드 포멧터 Prettier 소개"}},"node":{"html":"<p>웹팩에서 자주 사용되는 플러그인인 DefinePlugin과 EnvironmentPlugin에 대해서 알아보도록 하겠습니다.</p>\n<h2 id=\"관련-포스팅\" style=\"position:relative;\"><a href=\"#%EA%B4%80%EB%A0%A8-%ED%8F%AC%EC%8A%A4%ED%8C%85\" aria-label=\"관련 포스팅 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>관련 포스팅</h2>\n<p>웹팩에 대한 지식이나 경험이 전혀 없으신 분들을 아래 포스팅를 먼저 읽어보시면 따라오시기가 좀 더 수월하실 겁니다.</p>\n<ul>\n<li><a href=\"/webpack-basics\">웹팩(Webpack) 기본 사용법 (CLI)</a></li>\n<li><a href=\"/webpack-config\">웹팩(Webpack) 기본 설정법 (Entry/Output/Loader/Plugins)</a></li>\n<li><a href=\"/webpack-webpack-development\">웹팩(Webpack) 개발 편의 기능</a></li>\n</ul>\n<h2 id=\"실습-프로젝트-셋업\" style=\"position:relative;\"><a href=\"#%EC%8B%A4%EC%8A%B5-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EC%85%8B%EC%97%85\" aria-label=\"실습 프로젝트 셋업 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>실습 프로젝트 셋업</h2>\n<p>먼저 실습 프로젝트를 만들겠습니다. 새로운 디렉터리에 NPN 프로젝트를 만든 후, 웹팩과 웹팩 CLI 패키지를 설치합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">mkdir</span> webpack-plugins\n$ <span class=\"token builtin class-name\">cd</span> webpack-plugins\n$ <span class=\"token function\">npm</span> init -y\n$ <span class=\"token function\">npm</span> i -D webpack webpack-cli</code></pre></div>\n<p>그 다음, <code>package.json</code> 파일에 웹팩 빌드 스크립트를 추가합니다.</p>\n<ul>\n<li>package.json</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">  <span class=\"token string\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">\"build\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"webpack\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span></code></pre></div>\n<p>그 다음, 기본적인 웹팩 설정을 위해서 <code>webpack.config.js</code> 파일을 생성합니다.</p>\n<ul>\n<li>webpack.config.js</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>그 다음, <code>src/index.js</code> 파일에 다음과 같은 자바스크립트 소스 코드를 작성합니다.</p>\n<ul>\n<li>src/index.js</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> message <span class=\"token operator\">=</span> <span class=\"token string\">\"The app is running.\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> textNode <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createTextNode</span><span class=\"token punctuation\">(</span>message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ndocument<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>textNode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>이제, 터미널에서 <code>npm run build</code> 커맨드를 실행시키면 위에서 작성한 자바스크립트 코드가 빌드되어 <code>dist/main.js</code> 파일이 생성됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">npm</span> run build\n\n<span class=\"token operator\">></span> webpack-plugins@1.0.0 build /temp/webpack-plugins\n<span class=\"token operator\">></span> webpack\n\nHash: 59cbce35117625b54844\nVersion: webpack <span class=\"token number\">4.41</span>.0\nTime: 63ms\nBuilt at: 09/25/2019 <span class=\"token number\">9</span>:48:53 PM\n  Asset     Size  Chunks             Chunk Names\nmain.js  <span class=\"token number\">3.9</span> KiB    main  <span class=\"token punctuation\">[</span>emitted<span class=\"token punctuation\">]</span>  main\nEntrypoint main <span class=\"token operator\">=</span> main.js\n<span class=\"token punctuation\">[</span>./src/index.js<span class=\"token punctuation\">]</span> <span class=\"token number\">127</span> bytes <span class=\"token punctuation\">{</span>main<span class=\"token punctuation\">}</span> <span class=\"token punctuation\">[</span>built<span class=\"token punctuation\">]</span></code></pre></div>\n<p>마지막으로, 웹팩으로 빌드한 자바스크립트 코드를 로딩하는 <code>index.html</code> 파일을 작성합니다.</p>\n<ul>\n<li>index.html</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">html</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span>Webpack Plugins<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>./dist/main.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>이제, 브라우저에서 <code>index.html</code> 파일을 열어보면 화면에 <code>The app is running.</code>이라고 표시가 될 것입니다.</p>\n<p>참고로 실습 프로젝트가 제대로 만들어졌다면 다음과 같은 디렉터리 구조를 가지게 될 것입니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">.</span>\n├── dist\n│   └── main.js\n├── index.html\n├── node_modules\n├── package-lock.json\n├── package.json\n├── src\n│   └── index.js\n└── webpack.config.js</code></pre></div>\n<h2 id=\"defineplugin\" style=\"position:relative;\"><a href=\"#defineplugin\" aria-label=\"defineplugin permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>DefinePlugin</h2>\n<p>웹팩에서 제공하는 DefinePlugin은 모든 자바스크립트 코드에서 접근이 가능한 전역 변수를 선언하기 위해서 사용되는 플러그인입니다.</p>\n<blockquote>\n<p>이렇게 접근이 용이한 전역 변수를 지나치게 사용하면 글로벌 네임스페이스가 너무 많은 변수들로 오염되어 유지보수성 저해하게 되므로 전역 변수를 반드시 필요한 상황에서만 사용하시기 바랍니다.</p>\n</blockquote>\n<p>DefinePlugin을 사용하는 방법은 <code>webpack.DefinePlugin</code> 생성자에 선언하고 싶은 전역 변수를 객체 형태로 넘긴 다음, 웹팩 설정에서 <code>plugins</code> 옵션으로 추가해주면 됩니다.\n예를 들어, 다음과 같이 웹팩 설정하면 <code>APP_NAME</code>이라는 전역 변수에 <code>My app</code>이라는 값을 할당하고, <code>VERSION</code>이라는 전역 변수에 <code>v0.1</code>이라는 값이 할당이 됩니다.</p>\n<ul>\n<li>webpack.config.js</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> webpack <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"webpack\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  plugins<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token keyword\">new</span> <span class=\"token class-name\">webpack<span class=\"token punctuation\">.</span>DefinePlugin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      <span class=\"token constant\">APP_NAME</span><span class=\"token operator\">:</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"My app\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      <span class=\"token constant\">VERSION</span><span class=\"token operator\">:</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"v0.1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>여기서 전역 변수의 값을 <code>JSON.stringify()</code> 함수로 문자열 값을 감싸줘야 한다는 것에 주의바랍니다.</p>\n<p>그 다음, 이렇게 선언한 전역 변수를 사용하도록 자바스크립트 소스 코드를 다음과 같이 수정한 후에 다시 웹팩 빌드를 돌립니다.</p>\n<ul>\n<li>src/index.js</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> message <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token constant\">APP_NAME</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> is running. (version: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token constant\">VERSION</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">)</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> textNode <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createTextNode</span><span class=\"token punctuation\">(</span>message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ndocument<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>textNode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>자 이제, 브라우저에서 <code>index.html</code> 파일을 열어보면 화면에 <code>My app is running. (version: v0.1)</code>이라고 표시가 될 것입니다.</p>\n<h3 id=\"많이-하는-실수\" style=\"position:relative;\"><a href=\"#%EB%A7%8E%EC%9D%B4-%ED%95%98%EB%8A%94-%EC%8B%A4%EC%88%98\" aria-label=\"많이 하는 실수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>많이 하는 실수</h3>\n<p>DefinePlugin을 사용하시면서 많이 하는 실수가 브라우저의 콘솔에 선언한 전역 변수를 <code>console.log(APP_NAME)</code>와 같이 출력하시려다가 다음과 같은 오류를 만나시는 겁니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">Uncaught ReferenceError: APP_NAME is not defined\n    at <span class=\"token operator\">&lt;</span>anonymous<span class=\"token operator\">></span>:1:13</code></pre></div>\n<p>DefinePlugin으로 선언한 전역 변수는 어디까지나 웹팩이 소스 코드를 빌드하는 동안에만 사용되기 때문에 이런 식으로 브라우저 런타임에는 접근이 불가능합니다.\n실제로 <code>dist/main.js</code> 파일을 열어 웹팩이 빌드한 자바스크립트 코드를 보면, 이미 전역 변수들이 할당한 값으로 대체되었음을 알 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> message <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>\\\"My app\\\"<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> is running. (version: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>\\\"v0<span class=\"token punctuation\">.</span><span class=\"token number\">1</span>\\\"<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">)</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>따라서 브라우저로 이미 빌드된 파일을 사용하는 <code>index.html</code>을 열고, 아무리 콘솔에 전역 변수를 출력해보려고 해도 되지 않는 것입니다.</p>\n<h2 id=\"environmentplugin\" style=\"position:relative;\"><a href=\"#environmentplugin\" aria-label=\"environmentplugin permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>EnvironmentPlugin</h2>\n<p>웹팩에서 제공하는 EnvironmentPlugin은 노드 런타임(Node runtime)에서 <code>process.env</code>에 저장되는 환경 변수를 전역 변수로 등록하기 위한 플러그인입니다.\n환경 변수는 일반적으로 애플리케이션의 배포 환경에 따라의 설정값을 다르게 설정하기 위해서 사용합니다.\n대표적인 예로, 개발 환경에서 상용 환경보다 더 많은 로그를 남기고 싶은 경우를 들 수 있습니다.</p>\n<p>EnvironmentPlugin은 사용하는 방법은 <code>webpack.EnvironmentPlugin</code> 생성자에 필요한 환경 변수를 배열 형태로 넘긴 다음, 웹팩 설정의 <code>plugins</code> 옵션으로 추가해주면 됩니다.\n예를 들어, 다음과 같이 웹팩 설정을 하면 <code>DEBUG</code>라는 환경 변수의 값이 <code>process.env.DEBUG</code>라는 전역 변수에 할당이 됩니다.</p>\n<ul>\n<li>webpack.config.js</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> webpack <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"webpack\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  plugins<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token keyword\">new</span> <span class=\"token class-name\">webpack<span class=\"token punctuation\">.</span>DefinePlugin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      <span class=\"token constant\">APP_NAME</span><span class=\"token operator\">:</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"My app\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      <span class=\"token constant\">VERSION</span><span class=\"token operator\">:</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"v0.1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">new</span> <span class=\"token class-name\">webpack<span class=\"token punctuation\">.</span>EnvironmentPlugin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"DEBUG\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>그 다음, 이렇게 등록된 <code>DEBUG</code> 환경 변수의 값이 <code>on</code> 경우에만 콘솔에 로그를 찍도록 자바스크립트 소스 코드를 다음과 같이 수정합니다.</p>\n<ul>\n<li>src/index.js</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">DEBUG</span> <span class=\"token operator\">===</span> <span class=\"token string\">\"on\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">APP_NAME:</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token constant\">APP_NAME</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">VERSION:</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token constant\">VERSION</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">const</span> message <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">The app is running.</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> textNode <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createTextNode</span><span class=\"token punctuation\">(</span>message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ndocument<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>textNode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>자, 이제 빌드를 할 때 <code>DEBUG</code> 환경 변수의 값을 뭐로 주느냐에 따라 로그가 찍힐 수도 있고 안 찍힐 수도 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">$ <span class=\"token constant\">DEBUG</span><span class=\"token operator\">=</span>on npm run build</code></pre></div>\n<p>위와 같이 빌드 커맨드 앞에 <code>DEBUG=on</code>를 붙여서 실행을 하면, 브라우저 콘솔에 다음과 같이 위에서 DefinePlugin으로 선언했던 전역 변수들이 출력될 것입니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">APP_NAME: My app\nindex.js:3 VERSION: v0.1</code></pre></div>\n<p>반대로 아래와 같이 빌드 커맨드 앞에 <code>DEBUG=off</code>를 붙이거나 아무 것도 안 붙이고 실행을 하면, 브라우저 콘솔에는 아무것도 출력되지 않을 것입니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">$ <span class=\"token constant\">DEBUG</span><span class=\"token operator\">=</span>off npm run build</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">$ npm run build</code></pre></div>\n<h3 id=\"기본값을-설정하고-싶다면\" style=\"position:relative;\"><a href=\"#%EA%B8%B0%EB%B3%B8%EA%B0%92%EC%9D%84-%EC%84%A4%EC%A0%95%ED%95%98%EA%B3%A0-%EC%8B%B6%EB%8B%A4%EB%A9%B4\" aria-label=\"기본값을 설정하고 싶다면 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>기본값을 설정하고 싶다면?</h3>\n<p>만약에 디폴트로 로그가 출력되고, 명시적으로 <code>DEBUG</code> 환경 변수를 <code>off</code>로 설정했을 때만 로그가 출력되지 않게 하고 싶을 때는 어떻게 해야할까요?\n그럴 때는, <code>webpack.EnvironmentPlugin</code> 생성자의 인자로 배열이 아닌 객체의 형태로 기본값을 설정해주면 됩니다.</p>\n<ul>\n<li>webpack.config.js</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> webpack <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"webpack\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  plugins<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token keyword\">new</span> <span class=\"token class-name\">webpack<span class=\"token punctuation\">.</span>DefinePlugin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      <span class=\"token constant\">APP_NAME</span><span class=\"token operator\">:</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"My app\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      <span class=\"token constant\">VERSION</span><span class=\"token operator\">:</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"v0.1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">new</span> <span class=\"token class-name\">webpack<span class=\"token punctuation\">.</span>EnvironmentPlugin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token constant\">DEBUG</span><span class=\"token operator\">:</span> <span class=\"token string\">\"on\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>이렇게 웹팩 설정을 해주면, 환경 변수 없이 그냥 <code>npm run build</code> 커맨드를 실행했을 때, <code>process.env.DEBUG</code> 전역 변수의 값이 <code>on</code>이 되기 때문에 로그가 찍히게 됩니다.\n로그를 찍기 싶지 않은 경우에만 명시적으로 환경 변수를 앞에 붙여서 <code>DEBUG=off npm run build</code> 커맨드를 실행하면 됩니다.</p>\n<h2 id=\"마치면서\" style=\"position:relative;\"><a href=\"#%EB%A7%88%EC%B9%98%EB%A9%B4%EC%84%9C\" aria-label=\"마치면서 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>마치면서</h2>\n<p>DefinePlugin과 EnvironmentPlugin이 햇갈리시는 분들은 EnvironmentPlugin을 환경 변수 전용 DefinePlugin이라고 생각하시면 이해가 쉬우실 것 같습니다.\n따라서 DefinePlugin를 이용해서 EnvironmentPlugin로 할 수 있는 모든 설정을 할 수가 있으며, 단지 EnvironmentPlugin를 사용하는 이유는 설정을 좀 더 간편하게 하기 위함입니다.</p>\n<p>예를 들어, 위 실습 예제에서 EnvironmentPlugin로 작성한 아래 설정은</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">new</span> <span class=\"token class-name\">webpack<span class=\"token punctuation\">.</span>EnvironmentPlugin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"DEBUG\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">new</span> <span class=\"token class-name\">webpack<span class=\"token punctuation\">.</span>EnvironmentPlugin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token constant\">DEBUG</span><span class=\"token operator\">:</span> <span class=\"token string\">\"on\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>DefinePlugin를 이용해서 다음과 같이 각각 대체할 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">new</span> <span class=\"token class-name\">webpack<span class=\"token punctuation\">.</span>DefinePlugin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token string\">\"process.env.DEBUG\"</span><span class=\"token operator\">:</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">DEBUG</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">new</span> <span class=\"token class-name\">webpack<span class=\"token punctuation\">.</span>DefinePlugin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token string\">\"process.env.DEBUG\"</span><span class=\"token operator\">:</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">DEBUG</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token string\">\"on\"</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>본 포스팅에서 다룬 2개의 플러그인에 더 세부적인 사항은 아래 공식 웹팩 레퍼런스를 참고 바라겠습니다.</p>\n<ul>\n<li><a href=\"https://webpack.js.org/plugins/define-plugin/\">https://webpack.js.org/plugins/define-plugin/</a></li>\n<li><a href=\"https://webpack.js.org/plugins/environment-plugin/\">https://webpack.js.org/plugins/environment-plugin/</a></li>\n</ul>","timeToRead":6,"fields":{"slug":"/webpack-plugins-define-environment/","tags":["JavaScript","자바스크립트","Webpack","웹팩","webpack-dev-server"]},"frontmatter":{"title":"웹팩(Webpack) DefinePlugin, EnvironmentPlugin 사용법","date":"Sep 28, 2019"}},"next":{"fields":{"slug":"/js-eslint/"},"frontmatter":{"title":"[자바스크립트] ESLint로 소스 코드의 문제 찾기"}}}},"staticQueryHashes":["2168229929","2362167539","3056348342"]}