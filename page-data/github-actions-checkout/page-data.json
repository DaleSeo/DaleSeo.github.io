{"componentChunkName":"component---src-templates-detail-template-jsx","path":"/github-actions-checkout/","result":{"pageContext":{"previous":null,"node":{"html":"<p>GitHub Actions에서 가장 많이 사용되는 액션(Action)은 무엇일까요?\n바로 저장소로 부터 코드를 내려받기 위한 체크아웃(Checkout) 액션인데요.\n이번 포스팅에서는 GitHub Actions를 사용할 때 거의 필수적으로 필요한 체크아웃 액션을 한 번 같이 사용해보겠습니다.</p>\n<h2 id=\"github-actions의-액션action이란\" style=\"position:relative;\"><a href=\"#github-actions%EC%9D%98-%EC%95%A1%EC%85%98action%EC%9D%B4%EB%9E%80\" aria-label=\"github actions의 액션action이란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>GitHub Actions의 액션(Action)이란?</h2>\n<p>먼저 GitHub Actions에서 액션(Action)이 무엇을 의미하는지 간단하게 짚고 넘어가겠습니다.\nGitHub Actions는 일반적으로 CI(Continuous Integration, 지속 통합) 또는 CD(Continuous Deployment, 지속 배포)와 같은 자동화를 위해서 사용되는데요.\n이를 위해 워크플로우(workflow)를 구성하다보면 거의 필연적으로 여러 작업(job)에서 반복적으로 처리되야 할 일들이 생겨나기 마련입니다.</p>\n<p>액션(Action)은 이렇게 빈번하게 필요한 반복 단계를 재사용하기 용이하도록 GitHub Actions에서 제공되는 일종의 작업 공유 매커니즘인데요.\n이 액션은 하나의 코드 저장소 범위 내에서 여러 워크플로우 간에서 공유를 할 수 있을 뿐만 아니라, 공개 코드 저장소를 통해 액션을 공유하면 GitHub 상의 모든 코드 저장소에서 사용이 가능해집니다.</p>\n<p>누구나 <a href=\"https://github.com/marketplace?type=actions\">GitHub Marketplace</a>를 통해 GitHub 뿐만 아니라 다양한 써드 파티 업체들이 공개해놓은 액션을 쉽게 검색하고 써볼 수 있습니다.</p>\n<blockquote>\n<p>GitHub Actions에 대한 소개와 핵심 개념은 별도로 정리해 두었으니 <a href=\"/github-actions-basics/\">관련 포스트</a>를 참고 바랍니다.</p>\n</blockquote>\n<h2 id=\"git의-체크아웃checkout이란\" style=\"position:relative;\"><a href=\"#git%EC%9D%98-%EC%B2%B4%ED%81%AC%EC%95%84%EC%9B%83checkout%EC%9D%B4%EB%9E%80\" aria-label=\"git의 체크아웃checkout이란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Git의 체크아웃(Checkout)이란?</h2>\n<p>다음으로 Git이라는 버전 관리 시스템에서 체크아웃(Checkout)이 어떤 개념인지 가볍게 짚고 넘어가겠습니다.\nGit에서 체크아웃이라는 행위는 일반적으로 코드 저장소(repository)에서 특정 브랜치(branch)로 전환하는 작업을 뜻하는데요.\n이 작업을 위해서는 우선 원격 저장소에 올려둔 코드를 로컬 컴퓨터로 내려받는 작업이 반드시 선행이 되어야 합니다.</p>\n<h2 id=\"github-actions의-체크아웃-액션\" style=\"position:relative;\"><a href=\"#github-actions%EC%9D%98-%EC%B2%B4%ED%81%AC%EC%95%84%EC%9B%83-%EC%95%A1%EC%85%98\" aria-label=\"github actions의 체크아웃 액션 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>GitHub Actions의 체크아웃 액션</h2>\n<p>Git의 체크아웃을 GitHub Actions 입장에서 바라보면 GitHub의 코드 저장소에 올려둔 코드를 CI 서버로 내려받은 후에 특정 브랜치로 전환하는 행위라고 볼 수 있습니다.\n이렇게 자주 필요한 체크아웃 작업 단계를 모든 워크플로우에서 매번 쉘 스크립트로 작성하려면 매우 번거롭겠죠?\n뿐만 아니라 CI 서버와 코드 저장소 간에 인증과 같은 까다로운 절차도 신경을 써줘야 할 것입니다.</p>\n<p>GitHub Actions에서 처리되는 모든 작업은 이 체크아웃 단계부터 시작한다고 해도 과언이 아닌데요.\n그래서 GitHub에서는 체크아웃에 필요한 일련의 과정을 묶어서 액션으로 제공하고 있습니다.\n이 GitHub Actions의 Checkout 액션을 사용하면 매우 간편하게 코드 저장소로 부터 CI 서버로 코드를 내려받도록 워크플로우를 구성할 수 있습니다.</p>\n<p>지금부터 실습 저장소에 GitHub Actions에 간단한 워크플로우를 구성하고 GitHub에서 제공하는 체크아웃 액션을 사용해보겠습니다.</p>\n<h2 id=\"실습-워크플로우-생성\" style=\"position:relative;\"><a href=\"#%EC%8B%A4%EC%8A%B5-%EC%9B%8C%ED%81%AC%ED%94%8C%EB%A1%9C%EC%9A%B0-%EC%83%9D%EC%84%B1\" aria-label=\"실습 워크플로우 생성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>실습 워크플로우 생성</h2>\n<p>GitHub 계정이 있으시다면 누구나 무료로 GitHub Actions를 사용해볼 수 있습니다.\n실습을 위해서 본인 GitHub에 계정에 새로운 코드 저장소(repository)를 하나를 만드시길 바랍니다.\n(저는 <code>github-actions-checkout</code>이라는 이름으로 실습 코드 저장소를 만들겠습니다.)\n그 다음 저장소에 <code>.github/workflows/</code>라는 폴더를 만든 후, 그 안에 <code>checkout.yml</code>이라는 이름의 YAML 파일을 하나 생성합니다.</p>\n<p><code>checkout.yml</code> 파일에는 아래와 같은 기본 템플릿을 복사해서 붙여넣고 실습을 시작해보겠습니다.</p>\n<div class=\"gatsby-code-title\">.github/workflows/checkout.yml</div>\n<div class=\"gatsby-highlight\" data-language=\"yml\"><pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Our Workflow\n<span class=\"token key atrule\">on</span><span class=\"token punctuation\">:</span> push\n<span class=\"token key atrule\">jobs</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">checkout</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">runs-on</span><span class=\"token punctuation\">:</span> ubuntu<span class=\"token punctuation\">-</span>latest\n    <span class=\"token key atrule\">steps</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> ls <span class=\"token punctuation\">-</span>al</code></pre></div>\n<blockquote>\n<p>워크플로우를 만드는 방법은 <a href=\"/github-actions-first-workflow/\">별도 포스트</a>에서 자세히 다루었으니 참고 바랍니다.</p>\n</blockquote>\n<p>이 파일을 저장 후 GitHub의 코드 저장소로 올린(push) 후 <code>Actions</code> 탭에 들어가면 다음과 같은 워크플로우 실행 로그를 확인할 수 있을 것입니다.</p>\n<div class=\"gatsby-code-title\">Log</div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">☑️ Set up Job\n☑️ Run <span class=\"token function\">ls</span> -al\n<span class=\"gatsby-highlight-code-line\">▶ Run <span class=\"token function\">ls</span> -al</span><span class=\"gatsby-highlight-code-line\">total <span class=\"token number\">8</span></span><span class=\"gatsby-highlight-code-line\">drwxr-xr-x <span class=\"token number\">2</span> runner docker <span class=\"token number\">4096</span> Apr <span class=\"token number\">23</span> 01:33 <span class=\"token builtin class-name\">.</span></span><span class=\"gatsby-highlight-code-line\">drwxr-xr-x <span class=\"token number\">3</span> runner docker <span class=\"token number\">4096</span> Apr <span class=\"token number\">23</span> 01:33 <span class=\"token punctuation\">..</span></span>☑️ Complete Job</code></pre></div>\n<p>아직 GitHub의 저장소로 부터 CI 서버로 코드를 한 번도 내려받은 적이 없기 때문에 <code>ls -al</code> 명령어의 실행결과로 비어있는 디렉토리를 확인되는 것을 볼 수 있습니다.</p>\n<h2 id=\"체크아웃-액션-사용\" style=\"position:relative;\"><a href=\"#%EC%B2%B4%ED%81%AC%EC%95%84%EC%9B%83-%EC%95%A1%EC%85%98-%EC%82%AC%EC%9A%A9\" aria-label=\"체크아웃 액션 사용 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>체크아웃 액션 사용</h2>\n<p>워크플로우 YAML 파일에서는 <code>steps</code> 키 하위의 <code>uses</code> 키에 사용하고자 하는 액션의 위치를 <code>{소유자}/{저장소명}@{참조자}</code>의 형태로 명시하는데요.\nGitHub에서 제공하는 체크아웃 액션의 소유자는 <code>actions</code>이고, 저장소 이름은 <code>checkout</code>이며 현재 포스팅 시점에서 사용 가능한 최신 버전은 <code>v3</code>입니다.</p>\n<p>따라서 실습 워크플로우에 체크아웃 액션을 추가하려면 다음과 같이 <code>checkout.yml</code>을 수정해줍니다.</p>\n<div class=\"gatsby-code-title\">.github/workflows/checkout.yml</div>\n<div class=\"gatsby-highlight\" data-language=\"yml\"><pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Our Workflow\n<span class=\"token key atrule\">on</span><span class=\"token punctuation\">:</span> push\n<span class=\"token key atrule\">jobs</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">checkout</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">runs-on</span><span class=\"token punctuation\">:</span> ubuntu<span class=\"token punctuation\">-</span>latest\n    <span class=\"token key atrule\">steps</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> ls <span class=\"token punctuation\">-</span>al\n<span class=\"gatsby-highlight-code-line\">      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/checkout@v3</span></code></pre></div>\n<p>이제 다시 <code>Actions</code> 탭에 들어가보면 워크플로우 실행 로그에 체크아웃 액션 관련 부분이 추가되어 있는 것을 볼 수 있습니다.</p>\n<div class=\"gatsby-code-title\">Log</div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">☑️ Set up Job\n☑️ Run <span class=\"token function\">ls</span> -al\n☑️ Run actions/checkout@v3\n☑️ Post Run actions/checkout@v3\n☑️ Complete Job</code></pre></div>\n<p><code>Run actions/checkout@v3</code> 항목을 열어보시면 CI 서버에서 어떻게 저장소로부터 코드를 내려받는지 알 수가 있는데요.\n대강 훑어보시면 다음과 같은 Git 명령어들이 실행되고 있는 것을 보실 수 있으실 것입니다.</p>\n<ul>\n<li><code>git init</code> 명령어를 통해 작업 디렉토리를 로컬 저장소로 만든다.</li>\n<li><code>git config</code> 명령어를 통해 각종 인증 관련 정보를 설정한다</li>\n<li><code>git fetch</code> 명령어를 통해 원격 저장소로 부터 코드를 받아온다.</li>\n<li><code>git checkout</code> 명령어를 통해 주(main) 브랜치로 전환한다.</li>\n<li><code>git log</code> 명령어로 마지막 커밋(commit)의 해시값을 확인한다.</li>\n</ul>\n<p>GitHub에서 체크아웃 액션을 제공해주지 않았다면 다 우리가 스스로 해야했던 일이겠죠? 😥</p>\n<h2 id=\"내려받은-코드-확인\" style=\"position:relative;\"><a href=\"#%EB%82%B4%EB%A0%A4%EB%B0%9B%EC%9D%80-%EC%BD%94%EB%93%9C-%ED%99%95%EC%9D%B8\" aria-label=\"내려받은 코드 확인 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>내려받은 코드 확인</h2>\n<p>정말로 저장소에 올려둔 코드가 CI 서버로 잘 내려받아졌는지 확인해볼까요?\n우리가 현재 작성 중인 <code>checkout.yml</code> 자체도 GitHub의 코드 저정소에 올려져있기 때문에 작업 디렉토리 내에서 해당 파일이 존재하는지 확인해보면 되겠네요.</p>\n<p>체크아웃 액션의 다음 단계로 두 개의 명령어를 추가해보겠습니다.\n첫 번째는 작업 디렉토리 내의 파일을 나열하기 위함이고, 두 번째는 워크플로우 YAML 파일의 내용을 출력하기 위함입니다.</p>\n<div class=\"gatsby-code-title\">.github/workflows/checkout.yml</div>\n<div class=\"gatsby-highlight\" data-language=\"yml\"><pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Our Workflow\n<span class=\"token key atrule\">on</span><span class=\"token punctuation\">:</span> push\n<span class=\"token key atrule\">jobs</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">checkout</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">runs-on</span><span class=\"token punctuation\">:</span> ubuntu<span class=\"token punctuation\">-</span>latest\n    <span class=\"token key atrule\">steps</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> ls <span class=\"token punctuation\">-</span>al\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/checkout@v3\n<span class=\"gatsby-highlight-code-line\">      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> ls <span class=\"token punctuation\">-</span>al</span><span class=\"gatsby-highlight-code-line\">      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> cat .github/workflows/checkout.yml</span></code></pre></div>\n<p>이제 다시 Actions 탭에서 워크플로우 실행 로그를 확인해보면 체크아웃을 액션을 사용하기 전 단계에서는 CI 서버의 작업 디렉토리가 분명 비어있는데\n체크아웃 액션을 사용한 다음 단계에서는 <code>README.md</code> 파일을 포함한 저장소 내의 코드가 CI 서버의 작업 디렉토리 내로 그대로 복사된 것을 볼 수 있습니다.\n워크플로우 YAML 파일인 <code>checkout.yml</code>도 <code>.github/workflows/</code> 폴더 아래에 존재하며 우리가 작성한 그대로 설정 내용이 출력이 됩니다.</p>\n<div class=\"gatsby-code-title\">Log</div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">☑️ Set up Job\n☑️ Run <span class=\"token function\">ls</span> -al\n▶ Run <span class=\"token function\">ls</span> -al\ntotal <span class=\"token number\">8</span>\ndrwxr-xr-x <span class=\"token number\">2</span> runner docker <span class=\"token number\">4096</span> Apr <span class=\"token number\">23</span> 01:33 <span class=\"token builtin class-name\">.</span>\ndrwxr-xr-x <span class=\"token number\">3</span> runner docker <span class=\"token number\">4096</span> Apr <span class=\"token number\">23</span> 01:33 <span class=\"token punctuation\">..</span>\n☑️ Run actions/checkout@v3\n☑️ Run <span class=\"token function\">ls</span> -al\n<span class=\"gatsby-highlight-code-line\">▶ Run <span class=\"token function\">ls</span> -al</span><span class=\"gatsby-highlight-code-line\">total <span class=\"token number\">20</span></span><span class=\"gatsby-highlight-code-line\">drwxr-xr-x <span class=\"token number\">4</span> runner docker <span class=\"token number\">4096</span> Apr <span class=\"token number\">23</span> 01:33 <span class=\"token builtin class-name\">.</span></span><span class=\"gatsby-highlight-code-line\">drwxr-xr-x <span class=\"token number\">3</span> runner docker <span class=\"token number\">4096</span> Apr <span class=\"token number\">23</span> 01:33 <span class=\"token punctuation\">..</span></span><span class=\"gatsby-highlight-code-line\">drwxr-xr-x <span class=\"token number\">8</span> runner docker <span class=\"token number\">4096</span> Apr <span class=\"token number\">23</span> 01:33 .git</span><span class=\"gatsby-highlight-code-line\">drwxr-xr-x <span class=\"token number\">3</span> runner docker <span class=\"token number\">4096</span> Apr <span class=\"token number\">23</span> 01:33 .github</span><span class=\"gatsby-highlight-code-line\">-rwxr-xr-x <span class=\"token number\">1</span> runner docker  <span class=\"token number\">876</span> Apr <span class=\"token number\">23</span> 01:33 README.md</span>☑️ Run <span class=\"token function\">cat</span> .github/workflows/checkout.yml\n<span class=\"gatsby-highlight-code-line\">▶ Run <span class=\"token function\">cat</span> .github/workflows/checkout.yml</span><span class=\"gatsby-highlight-code-line\">name: Our Checkout Workflow</span><span class=\"gatsby-highlight-code-line\">on: push</span><span class=\"gatsby-highlight-code-line\">jobs:</span><span class=\"gatsby-highlight-code-line\">  checkout:</span><span class=\"gatsby-highlight-code-line\">    runs-on: ubuntu-latest</span><span class=\"gatsby-highlight-code-line\">    steps:</span><span class=\"gatsby-highlight-code-line\">      - run: <span class=\"token function\">ls</span> -al</span><span class=\"gatsby-highlight-code-line\">      - uses: actions/checkout@v3</span><span class=\"gatsby-highlight-code-line\">      - run: <span class=\"token function\">ls</span> -al</span><span class=\"gatsby-highlight-code-line\">      - run: <span class=\"token function\">cat</span> .github/workflows/checkout.yml</span>☑️ Post Run actions/checkout@v3\n☑️ Complete Job</code></pre></div>\n<h2 id=\"다른-경로에-코드-내려받기\" style=\"position:relative;\"><a href=\"#%EB%8B%A4%EB%A5%B8-%EA%B2%BD%EB%A1%9C%EC%97%90-%EC%BD%94%EB%93%9C-%EB%82%B4%EB%A0%A4%EB%B0%9B%EA%B8%B0\" aria-label=\"다른 경로에 코드 내려받기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>다른 경로에 코드 내려받기</h2>\n<p>CI 서버의 최상위 작업 디렉토리 대신에 그 하위에 있는 다른 폴더로 코드를 내려받고 싶다면 체크아웃 액션의 <code>path</code> 옵션을 사용할 수 있습니다.</p>\n<p>워크플로우 YAML 파일에서 어떤 액션에 입력 파라미터를 넘길 때는 <code>with</code> 키를 사용하는데요.\n파라미터의 이름과 값의 맵핑을 지정해주면 됩니다.</p>\n<p>실습 워크플로우에서는 <code>our-source</code>라는 폴더에 코드를 내려받도록 한번 설정해볼께요.</p>\n<div class=\"gatsby-code-title\">.github/workflows/checkout.yml</div>\n<div class=\"gatsby-highlight\" data-language=\"yml\"><pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Our Checkout Workflow\n<span class=\"token key atrule\">on</span><span class=\"token punctuation\">:</span> push\n<span class=\"token key atrule\">jobs</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">checkout</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">runs-on</span><span class=\"token punctuation\">:</span> ubuntu<span class=\"token punctuation\">-</span>latest\n    <span class=\"token key atrule\">steps</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/checkout@v3\n<span class=\"gatsby-highlight-code-line\">        <span class=\"token key atrule\">with</span><span class=\"token punctuation\">:</span></span><span class=\"gatsby-highlight-code-line\">          <span class=\"token key atrule\">path</span><span class=\"token punctuation\">:</span> our<span class=\"token punctuation\">-</span>source</span>      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> ls <span class=\"token punctuation\">-</span>al\n<span class=\"gatsby-highlight-code-line\">      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> ls <span class=\"token punctuation\">-</span>al our<span class=\"token punctuation\">-</span>source</span></code></pre></div>\n<p>이제 다시 Actions 탭에서 워크플로우 실행 로그를 확인해보면 작업 디렉토리에는 <code>our-source</code>라는 폴더가 생겼고, 이 폴더 안에 저장소로 부터 내려받은 코드가 위치할 것입니다.</p>\n<div class=\"gatsby-code-title\">Log</div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">☑️ Set up Job\n☑️ Run actions/checkout@v3\n<span class=\"gatsby-highlight-code-line\">▶ Run <span class=\"token function\">ls</span> -al</span><span class=\"gatsby-highlight-code-line\">total <span class=\"token number\">12</span></span><span class=\"gatsby-highlight-code-line\">drwxr-xr-x <span class=\"token number\">3</span> runner docker <span class=\"token number\">4096</span> Apr <span class=\"token number\">23</span> 02:03 <span class=\"token builtin class-name\">.</span></span><span class=\"gatsby-highlight-code-line\">drwxr-xr-x <span class=\"token number\">3</span> runner docker <span class=\"token number\">4096</span> Apr <span class=\"token number\">23</span> 02:03 <span class=\"token punctuation\">..</span></span><span class=\"gatsby-highlight-code-line\">drwxr-xr-x <span class=\"token number\">4</span> runner docker <span class=\"token number\">4096</span> Apr <span class=\"token number\">23</span> 02:03 our-source</span>☑️ Run <span class=\"token function\">ls</span> -al our-source\n<span class=\"gatsby-highlight-code-line\">▶ Run <span class=\"token function\">ls</span> -al our-source</span><span class=\"gatsby-highlight-code-line\">total <span class=\"token number\">20</span></span><span class=\"gatsby-highlight-code-line\">drwxr-xr-x <span class=\"token number\">4</span> runner docker <span class=\"token number\">4096</span> Apr <span class=\"token number\">23</span> 02:03 <span class=\"token builtin class-name\">.</span></span><span class=\"gatsby-highlight-code-line\">drwxr-xr-x <span class=\"token number\">3</span> runner docker <span class=\"token number\">4096</span> Apr <span class=\"token number\">23</span> 02:03 <span class=\"token punctuation\">..</span></span><span class=\"gatsby-highlight-code-line\">drwxr-xr-x <span class=\"token number\">8</span> runner docker <span class=\"token number\">4096</span> Apr <span class=\"token number\">23</span> 02:03 .git</span><span class=\"gatsby-highlight-code-line\">drwxr-xr-x <span class=\"token number\">3</span> runner docker <span class=\"token number\">4096</span> Apr <span class=\"token number\">23</span> 02:03 .github</span><span class=\"gatsby-highlight-code-line\">-rw-r--r-- <span class=\"token number\">1</span> runner docker   <span class=\"token number\">25</span> Apr <span class=\"token number\">23</span> 02:03 README.md</span>☑️ Post Run actions/checkout@v3\n☑️ Complete Job</code></pre></div>\n<h2 id=\"과거-변경-이력도-불러오기\" style=\"position:relative;\"><a href=\"#%EA%B3%BC%EA%B1%B0-%EB%B3%80%EA%B2%BD-%EC%9D%B4%EB%A0%A5%EB%8F%84-%EB%B6%88%EB%9F%AC%EC%98%A4%EA%B8%B0\" aria-label=\"과거 변경 이력도 불러오기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>과거 변경 이력도 불러오기</h2>\n<p>체크아웃 액션은 기본적으로 저장소로 부터 최신 상태의 코드만을 내려받는데요.\n대부분의 CI/CD 작업에서 마지막 커밋(commit)만 있으면 충분하고 성능 측면에서도 마지막 커밋만 가져오는 것이 유리하기 때문입니다.\n만약에 과거 변경내역이 필요한 경우라면 <code>fetch-depth</code> 옵션을 사용하여 최근 몇개의 커밋을 불러오기 싶은지 설정할 수 있습니다.\n기본값은 <code>1</code>이며, <code>0</code>으로 설정하면 전체 변경 이력을 불러옵니다.</p>\n<p>실습에서는 최근 3개의 변경이력을 불러온 후, 바로 다음 단계에서 <code>git log</code> 명령어를 이용해서 변경 이력을 출력해보겠습니다.</p>\n<div class=\"gatsby-code-title\">.github/workflows/checkout.yml</div>\n<div class=\"gatsby-highlight\" data-language=\"yml\"><pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Our Checkout Workflow\n<span class=\"token key atrule\">on</span><span class=\"token punctuation\">:</span> push\n<span class=\"token key atrule\">jobs</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">checkout</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">runs-on</span><span class=\"token punctuation\">:</span> ubuntu<span class=\"token punctuation\">-</span>latest\n    <span class=\"token key atrule\">steps</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/checkout@v3\n<span class=\"gatsby-highlight-code-line\">        <span class=\"token key atrule\">with</span><span class=\"token punctuation\">:</span></span><span class=\"gatsby-highlight-code-line\">          <span class=\"token key atrule\">fetch-depth</span><span class=\"token punctuation\">:</span> <span class=\"token number\">3</span></span><span class=\"gatsby-highlight-code-line\">      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> git log <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>pretty=oneline</span></code></pre></div>\n<p>다시 Actions 탭에서 워크플로우 실행 로그를 확인해보면 3개의 변경 이력이 잘 확인될 것입니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">☑️ Set up Job\n☑️ Run actions/checkout@v3\n☑️ Run <span class=\"token function\">git</span> log --pretty<span class=\"token operator\">=</span>oneline\n<span class=\"gatsby-highlight-code-line\">Run <span class=\"token function\">git</span> log --pretty<span class=\"token operator\">=</span>oneline</span><span class=\"gatsby-highlight-code-line\">4325676aa19f300a441cca95b6a8d4fde8b9dca4 Update checkout.yml</span><span class=\"gatsby-highlight-code-line\">a9cb009eec4d44d135f027c5432997b2a544afab Update checkout.yml</span><span class=\"gatsby-highlight-code-line\">f09c8dad47aa7f4427bc4b45016d3b7153373f44 Update checkout.yml</span>☑️ Post Run actions/checkout@v3\n☑️ Complete Job</code></pre></div>\n<h2 id=\"다른-저장소의-코드-내려받기\" style=\"position:relative;\"><a href=\"#%EB%8B%A4%EB%A5%B8-%EC%A0%80%EC%9E%A5%EC%86%8C%EC%9D%98-%EC%BD%94%EB%93%9C-%EB%82%B4%EB%A0%A4%EB%B0%9B%EA%B8%B0\" aria-label=\"다른 저장소의 코드 내려받기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>다른 저장소의 코드 내려받기</h2>\n<p>체크아웃 액션은 비단 GitHub Actions 워크플로우가 위치하고 있는 현재 저장소뿐만 아니라 공개된 저장소라면 다른 저장소의 코드를 내려받을 때도 사용할 수 있습니다.\n<code>repository</code> 옵션으로 <code>{소유자}/{저장소명}</code> 형태로 저장소를 지정해주고, <code>ref</code> 옵션으로 브랜치명이나 태크명 또는 커밋 해시값을 지정해주면 됩니다.</p>\n<p>재밌는 예로 체크아웃 액션 자체의 소스 코드를 담고 있는 저장소로 부터 코드를 한 번 내려받도록 워크플로우를 설정해보겠습니다.</p>\n<div class=\"gatsby-code-title\">.github/workflows/checkout.yml</div>\n<div class=\"gatsby-highlight\" data-language=\"yml\"><pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Our Checkout Workflow\n<span class=\"token key atrule\">on</span><span class=\"token punctuation\">:</span> push\n<span class=\"token key atrule\">jobs</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">checkout</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">runs-on</span><span class=\"token punctuation\">:</span> ubuntu<span class=\"token punctuation\">-</span>latest\n    <span class=\"token key atrule\">steps</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/checkout@v3\n<span class=\"gatsby-highlight-code-line\">        <span class=\"token key atrule\">with</span><span class=\"token punctuation\">:</span></span><span class=\"gatsby-highlight-code-line\">          <span class=\"token key atrule\">repository</span><span class=\"token punctuation\">:</span> actions/checkout</span><span class=\"gatsby-highlight-code-line\">          <span class=\"token key atrule\">ref</span><span class=\"token punctuation\">:</span> v3</span><span class=\"gatsby-highlight-code-line\">      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> ls</span></code></pre></div>\n<p>액션에 대한 메타 정보를 담고 있는 <code>action.yml</code> 파일이 확인되는 걸로 봐서 해당 저장소가 CI 서버로 잘 내려받진 것 같습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">☑️ Set up Job\n☑️ Run actions/checkout@v3\n☑️ Run <span class=\"token function\">ls</span>\n<span class=\"gatsby-highlight-code-line\">Run <span class=\"token function\">ls</span></span><span class=\"gatsby-highlight-code-line\">CHANGELOG.md</span><span class=\"gatsby-highlight-code-line\">CODEOWNERS</span><span class=\"gatsby-highlight-code-line\">LICENSE</span><span class=\"gatsby-highlight-code-line\">README.md</span><span class=\"gatsby-highlight-code-line\">__test__</span><span class=\"gatsby-highlight-code-line\">action.yml</span><span class=\"gatsby-highlight-code-line\">adrs</span><span class=\"gatsby-highlight-code-line\">dist</span><span class=\"gatsby-highlight-code-line\">jest.config.js</span><span class=\"gatsby-highlight-code-line\">package-lock.json</span><span class=\"gatsby-highlight-code-line\">package.json</span><span class=\"gatsby-highlight-code-line\">src</span><span class=\"gatsby-highlight-code-line\">tsconfig.json</span>☑️ Post Run actions/checkout@v3\n☑️ Complete Job</code></pre></div>\n<p>참고로 <code>repository</code> 옵션을 생략하고 <code>ref</code> 옵션만 사용하면 현재 저장소 내의 다른 태그나 브랜치, 커밋 해시의 코드를 내려받을 수 있습니다.</p>\n<h2 id=\"실습-코드\" style=\"position:relative;\"><a href=\"#%EC%8B%A4%EC%8A%B5-%EC%BD%94%EB%93%9C\" aria-label=\"실습 코드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>실습 코드</h2>\n<p>본 포스팅에서 작성한 YAML 파일과 워크플로우 실행 결과는 아래 코드 저장소에서 확인하실 수 있습니다.</p>\n<ul>\n<li>Code: <a href=\"https://github.com/DaleSchool/github-actions-checkout\">https://github.com/DaleSchool/github-actions-checkout</a></li>\n<li>Actions: <a href=\"https://github.com/DaleSchool/github-actions-checkout/actions\">https://github.com/DaleSchool/github-actions-checkout/actions</a></li>\n</ul>\n<h2 id=\"마치면서\" style=\"position:relative;\"><a href=\"#%EB%A7%88%EC%B9%98%EB%A9%B4%EC%84%9C\" aria-label=\"마치면서 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>마치면서</h2>\n<p>지금까지 GitHub Actions에서 가장 많이 사용되는 Checkout 액션을 워크플로우에 어떻게 설정하고 사용하는지에 대해서 살펴보았습니다.\nCheckout 액션에 대한 좀 더 자세한 내용은 <a href=\"https://github.com/marketplace/actions/checkout\">GitHub Marketplace</a>를 참고 바랍니다.</p>","timeToRead":9,"fields":{"slug":"/github-actions-checkout/","tags":["GitHub","GitHub Actions","CI","CD"]},"frontmatter":{"title":"GitHub Actions의 체크아웃(Checkout) 액션으로 코드 내려받기","date":"Apr 23, 2022"}},"next":{"fields":{"slug":"/github-actions-first-workflow/"},"frontmatter":{"title":"GitHub Actions 첫 워크플로우 생성해보기"}}}},"staticQueryHashes":["2168229929","2362167539","3056348342"]}