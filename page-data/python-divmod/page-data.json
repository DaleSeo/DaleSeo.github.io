{"componentChunkName":"component---src-templates-detail-template-jsx","path":"/python-divmod/","result":{"pageContext":{"previous":{"fields":{"slug":"/css-img-extra-space/"},"frontmatter":{"title":"이미지 주변에 생기는 불필요한 공백 제거하기"}},"node":{"html":"<div class=\"gatsby-resp-iframe-wrapper\" style=\"padding-bottom: 56.25%; position: relative; height: 0; overflow: hidden; \" > <iframe src=\"https://www.youtube.com/embed/Q_rBHHXl4Gg\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"\" style=\" position: absolute; top: 0; left: 0; width: 100%; height: 100%; \"></iframe> </div>\n<p>이번 포스팅에서는 파이썬에서 연산자를 이용해서 나눗셈을 하는 방법에 대해서 간단히 알아보고, 몫과 나머지를 동시에 구할 때 사용하는 <code>divmod()</code> 내장 함수에 대해서도 알아보겠습니다.</p>\n<h2 id=\"나누기-연산자\" style=\"position:relative;\"><a href=\"#%EB%82%98%EB%88%84%EA%B8%B0-%EC%97%B0%EC%82%B0%EC%9E%90\" aria-label=\"나누기 연산자 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>나누기 연산자</h2>\n<p>파이썬은 특이하게도 2가지 나누기 연산자를 제공하는데요.\n첫 번째는 실수 나누기 연산자인 <code>/</code>이고, 두 번째는 정수 나누기 연산자인 <code>//</code>입니다.</p>\n<p>이 두 종의 나누기 연산자는 나머지가 없는 경우에는 동일한 값을 반환하는데요.</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token number\">8</span> <span class=\"token operator\">/</span> <span class=\"token number\">2</span>\n<span class=\"token number\">4.0</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token number\">8</span> <span class=\"token operator\">//</span> <span class=\"token number\">2</span>\n<span class=\"token number\">4</span></code></pre></div>\n<p>하지만 엄밀히 얘기하면 이 두 값의 자료형(data type)은 각각 실수와 정수로 차이가 있습니다.</p>\n<p>그럼 나눗셈 결과에 나머지가 있는 경우에는 어떨까요?</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token number\">8</span> <span class=\"token operator\">/</span> <span class=\"token number\">3</span>\n<span class=\"token number\">2.6666666666666665</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token number\">8</span> <span class=\"token operator\">//</span> <span class=\"token number\">3</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token number\">2</span></code></pre></div>\n<p>이번에는 자료형 뿐만 아니라 반환값에도 매우 유의미한 차이를 볼 수가 있는데요.</p>\n<p><strong><code>/</code> 연산자는 실수로 나누기를 하여 소수부를 보존하는 반면에 <code>//</code> 연산자는 정수로 나누기를 하여 소수부를 날려 버리고 정수부만 반환하는 것을 볼 수 있습니다.</strong></p>\n<p>실제 응용 프로그램에서 나눗셈을 할 때는 이 두 가지 연산자 중에서 어떤 것을 써야할지 명확히 알고 있어야 하겟죠?\n이 둘을 무분별하게 혼용한다면 특히 금융권 시스템에서는 매우 곤란한 일이 발생할 수도 있을 것입니다.</p>\n<h2 id=\"나머지-연산자\" style=\"position:relative;\"><a href=\"#%EB%82%98%EB%A8%B8%EC%A7%80-%EC%97%B0%EC%82%B0%EC%9E%90\" aria-label=\"나머지 연산자 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>나머지 연산자</h2>\n<p>파이썬에서 나머지를 구할 때는 다른 프로그래밍 언어와 비슷하게 흔히 모듈로(modulo) 연산자라고 불리는 <code>%</code>를 사용합니다.</p>\n<p>예를 들어, <code>8</code>을 <code>2</code>로 나눈 나머지는 <code>0</code>이 되겠죠?</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token number\">8</span> <span class=\"token operator\">%</span> <span class=\"token number\">2</span>\n<span class=\"token number\">0</span></code></pre></div>\n<p><code>8</code>을 <code>3</code>으로 나눈 나머지는 <code>2</code>가 될 것입니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token number\">8</span> <span class=\"token operator\">%</span> <span class=\"token number\">3</span>\n<span class=\"token number\">2</span></code></pre></div>\n<h2 id=\"divmod-함수\" style=\"position:relative;\"><a href=\"#divmod-%ED%95%A8%EC%88%98\" aria-label=\"divmod 함수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>divmod() 함수</h2>\n<p>나눗셈을 하다보면 간혹 몫과 나머지를 동시에 구하고 싶을 때가 있는데요.\n이럴 때 흔히 생각할 수 있는 방법이 동일한 두 개의 수를 대상으로 <code>//</code> 연산자와 <code>%</code> 연산자를 각각 호출하는 것입니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token punctuation\">(</span><span class=\"token number\">8</span> <span class=\"token operator\">//</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span> <span class=\"token operator\">%</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token punctuation\">(</span><span class=\"token number\">8</span> <span class=\"token operator\">//</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span> <span class=\"token operator\">%</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>하지만 파이썬에 내장된 <code>divmod()</code> 함수를 사용하면 한 방에 이 두 개의 작업을 진행할 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token builtin\">divmod</span><span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token builtin\">divmod</span><span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p><code>divmod()</code> 함수는 두 개의 숫자를 인자로 받아, 첫번 째 숫자를 두번 째 숫자로 나눈 몫과 나머지를 튜플(tuple) 형태로 반환하는데요.\n결국 <code>divmod()</code> 함수가 하는 일은 다음과 같이 일반 연산자를 사용하여 나타낼 수 있겠습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token builtin\">divmod</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>x <span class=\"token operator\">//</span> y<span class=\"token punctuation\">,</span> x <span class=\"token operator\">%</span> y<span class=\"token punctuation\">)</span></code></pre></div>\n<h2 id=\"전체코드\" style=\"position:relative;\"><a href=\"#%EC%A0%84%EC%B2%B4%EC%BD%94%EB%93%9C\" aria-label=\"전체코드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>전체코드</h2>\n<p>본 포스팅에서 제가 작성한 전체 코드는 아래에서 직접 확인하고 실행해보실 수 있습니다.</p>\n<p><a href=\"https://dales.link/8ld\">https://dales.link/8ld</a></p>\n<h2 id=\"마치면서\" style=\"position:relative;\"><a href=\"#%EB%A7%88%EC%B9%98%EB%A9%B4%EC%84%9C\" aria-label=\"마치면서 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>마치면서</h2>\n<p>이상으로 파이썬의 나누기 연산자와 나머지 연산자, 그리고 <code>divmod()</code> 내장 함수에 대해서 살펴보았습니다.\n파이썬으로 나눗셈이 필요하실 때 유용하게 활용하실 수 있으셨으면 좋겠습니다.</p>","timeToRead":2,"fields":{"slug":"/python-divmod/","tags":["Python","BIF","divmod"]},"frontmatter":{"title":"파이썬의 divmod() 내장 함수로 나눗셈하기","date":"Nov 6, 2022"}},"next":{"fields":{"slug":"/css-html-ul-ol-li/"},"frontmatter":{"title":"CSS 리스트 스타일링 가이드 (HTML <ul>, <ol>, <li> 요소)"}}}},"staticQueryHashes":["2168229929","2362167539","3056348342"]}