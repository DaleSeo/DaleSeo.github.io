{
    "componentChunkName": "component---src-templates-detail-template-jsx",
    "path": "/css-flexbox/",
    "result": {"pageContext":{"previous":{"fields":{"slug":"/js-babel-node/"},"frontmatter":{"title":"Node.js로 ES6 코드 실행하기 (Babel)"}},"node":{"html":"<p>Flexbox(플렉스박스)를 이용한 반응형 웹디자인이 대중화되면서 CSS에서 Flexbox의 존재감이 점점 커지고 있습니다.\n이번 포스팅에서는 Flexbox를 이해하기 위해서 꼭 필요한 핵심 개념과 자주 사용되는 속성에 대해서 살펴보겠습니다.</p>\n<h2 id=\"flexbox-구성-요소\" style=\"position:relative;\"><a href=\"#flexbox-%EA%B5%AC%EC%84%B1-%EC%9A%94%EC%86%8C\" aria-label=\"flexbox 구성 요소 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Flexbox 구성 요소</h2>\n<p>Flexbox는 일반적으로 하나의 Flex container와 여러 개의 Flex item으로 구성됩니다.\n따라서, Flexbox를 사용할 때 마크업과 스타일은 대략 다음과 같은 형태를 띠게 됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>container<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>item<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>A<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>item<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>B<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>item<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>C<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.container</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> flex<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.item</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">flex</span><span class=\"token punctuation\">:</span> 1<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>여러 개의 내부 엘리먼트를 담고 있는 외부 엘리먼트에 <code>display: flex;</code> 스타일을 적용하면, 외부 엘리먼트는 flex container가 되고, 내부 엘리먼트는 자동으로 flex item가 됩니다.</p>\n<p>이것이 왜 중요하냐면, flex container와 flex item에는 서로 적용할 수 있는 CSS 속성이 다르기 때문입니다.\n예를 들어, flex container에는 <code>flex-direction</code>, <code>justify-content</code>, <code>align-items</code>와 같은 속성을 적용할 수 있는 반면에, flex item에는 <code>flex</code>, <code>align-self</code>, <code>order</code>와 같은 속성을 적용할 수 있습니다.</p>\n<h2 id=\"maincross-axis\" style=\"position:relative;\"><a href=\"#maincross-axis\" aria-label=\"maincross axis permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Main/Cross Axis</h2>\n<p>Flexbox를 원하는대로 제어하려면 axis(축)의 개념에 대해서 정확히 이해하고 있어야 합니다.\nmain axis와 cross axis에 따라 CSS 속성이 좌우로 적용될 수도 있고, 상하로 적용될 수도 있기 때문입니다.\nmain axis는 여러 개의 flex item이 순서대로 배치되는 방향이며, cross axis는 main axis와 수직을 이루는 방향입니다.</p>\n<p><img src=\"https://developer.mozilla.org/files/3739/flex_terms.png\" alt=\"Flexbox\"></p>\n<p>기본적으로 main axis는 flex container의 <code>flex-direction</code> 속성에 의해서 결정되며 기본값은 <code>row</code> 입니다.\n따라서 flex container 내의 flex item은 왼쪽부터 오른쪽 방향으로 배치되며, 이 방향이 main axis가 됩니다.\n반면에 <code>flex-direction</code> 속성을 <code>column</code>으로 설정해주면 main axis는 위에서 아래로 내려오는 방향이 됩니다.</p>\n<p>Flexbox를 사용할 때 많은 분들이 가장 햇갈려하는 부분이 바로 flex item을 어떻게 정렬하느냐는 것일 것입니다.\nflex item을 담고 있는 flex container에 <code>justify-content</code> 또는 <code>align-items</code> 속성을 정렬 방향을 고려하여 적용해야 하는데요.\n<code>justify-content</code> 속성은 main axis를 기준으로 정렬하며, <code>align-items</code> cross axis를 기준으로 정렬합니다.</p>\n<h2 id=\"justify-content\" style=\"position:relative;\"><a href=\"#justify-content\" aria-label=\"justify content permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>justify-content</h2>\n<p>Flexbox를 사용할 때 자주 접하게 되는 속성인 <code>justify-content</code> 속성은 flex item을 main axis를 기준으로 어떻게 정렬할지를 결정합니다.</p>\n<p>기본값은 <code>flex-start</code>인데, flex item을 main axis의 맨 앞으로 정렬해줍니다. 즉, <code>flex-direction</code> 속성이 <code>row</code>라면 좌측 정렬, <code>flex-direction</code> 속성이 <code>column</code>이라면 상단 정렬이 될 것입니다.</p>\n<p><code>justify-content</code> 속성값으로는 <code>flex-end</code>, <code>center</code>, <code>space-between</code>, <code>space-evenly</code>, <code>space-around</code> 등을 사용할 수 있습니다. <code>space-</code>로 시작하는 속성값을 잘 활용하면 상당히 유연한 레이아웃을 큰 노력없이 구성할 수 있습니다.</p>\n<iframe height=\"650\" style=\"width: 100%;\" scrolling=\"no\" title=\"css-flexbox-1\" src=\"https://codepen.io/daleseo/embed/RwrZeqa?height=648&theme-id=dark&default-tab=html,result\" frameborder=\"no\" allowtransparency=\"true\" allowfullscreen=\"true\">\n  See the Pen <a href='https://codepen.io/daleseo/pen/RwrZeqa'>css-flexbox-1</a> by Dale Seo\n  (<a href='https://codepen.io/daleseo'>@daleseo</a>) on <a href='https://codepen.io'>CodePen</a>.\n</iframe>\n<h2 id=\"align-items\" style=\"position:relative;\"><a href=\"#align-items\" aria-label=\"align items permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>align-items</h2>\n<p><code>justify-content</code> 속성과 더불어 Flexbox를 사용할 때 자주 접하게 되는 속성인 <code>align-items</code> 속성은 flex item을 cross axis를 기준으로 어떻게 정렬할지를 결정합니다.</p>\n<p>기본값은 <code>stretch</code>인데, flex item을 flex container의 높이 또는 너비만큼 늘려줍니다. <code>flex-direction</code> 속성이 <code>row</code>라면 높이 만큼 늘어나고, <code>flex-direction</code> 속성이 <code>column</code>이라면 너비만큼 늘어날 것입니다.\n한 가지 주의할 점은 <code>flex-direction</code> 속성이 <code>row</code>일 때는 상하로 공백이 생기도록 <code>height</code> 속성을 지정해주지 않으면 아무 효과가 나타나지 않을 수 있다는 것입니다.</p>\n<p><code>align-items</code> 속성값으로는 <code>center</code>, <code>flex-start</code>, <code>flex-end</code>, <code>baseline</code> 등을 사용할 수 있습니다.</p>\n<iframe height=\"800\" style=\"width: 100%;\" scrolling=\"no\" title=\"css-flexbox-2\" src=\"https://codepen.io/daleseo/embed/KKVXddB?height=795&theme-id=dark&default-tab=html,result\" frameborder=\"no\" allowtransparency=\"true\" allowfullscreen=\"true\">\n  See the Pen <a href='https://codepen.io/daleseo/pen/KKVXddB'>css-flexbox-2</a> by Dale Seo\n  (<a href='https://codepen.io/daleseo'>@daleseo</a>) on <a href='https://codepen.io'>CodePen</a>.\n</iframe>\n<h2 id=\"flex\" style=\"position:relative;\"><a href=\"#flex\" aria-label=\"flex permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>flex</h2>\n<p>마지막으로 살펴볼 속성은 flex container가 아닌 flex item에 적용하는 <code>flex</code> 속성이며 main axis 기준으로 공간 배분을 위해서 사용됩니다.</p>\n<p><code>flex</code> 속성은 <code>flex-grow</code>와 <code>flex-shrink</code>, <code>flex-basis</code> 속성을 한 번에 적용할 수 있도록 해줍니다.\n<code>flex-grow</code> 속성은 해당 flex item이 main axis 상에 공백이 있을 때, 이 공백을 얼마나 점유할지를 지정합니다.\n<code>flex-shrink</code> 속성은 해당 flex item이 main axis 상에 공간이 부족할 때, 얼마나 공간을 양보할지를 지정합니다.\n<code>flex-basis</code> 속성은 해당 flex item이 main axis 상에 공백이 있을 때, 최소 얼만큼의 공간을 점유할지를 지정합니다.</p>\n<p>예를 들어, flex item 중 하나에만 <code>flex: 1;</code> 스타일을 적용하면, 그 flex item이 모든 공백을 점유합니다.\n하지만 모든 flex item에 <code>flex: 1;</code> 스타일을 적용하면, 공백을 균등하게 나누어서 점유합니다.\n또한, <code>flex</code> 속성의 값을 서로 다르게 주면, 공백을 다른 비율로 점유하게 됩니다.</p>\n<iframe height=\"450\" style=\"width: 100%;\" scrolling=\"no\" title=\"css-flexbox-3\" src=\"https://codepen.io/daleseo/embed/qBbPOmb?height=265&theme-id=dark&default-tab=html,result\" frameborder=\"no\" allowtransparency=\"true\" allowfullscreen=\"true\">\n  See the Pen <a href='https://codepen.io/daleseo/pen/qBbPOmb'>css-flexbox-3</a> by Dale Seo\n  (<a href='https://codepen.io/daleseo'>@daleseo</a>) on <a href='https://codepen.io'>CodePen</a>.\n</iframe>\n<h2 id=\"마치면서\" style=\"position:relative;\"><a href=\"#%EB%A7%88%EC%B9%98%EB%A9%B4%EC%84%9C\" aria-label=\"마치면서 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>마치면서</h2>\n<p>이상으로 CSS Flexbox에 대한 기본 개념과 핵심 속성에 대해서 수박 겉햝기 수준으로 살펴보았습니다.\nFlexbox에는 이 밖에도 정말 많은 속성들이 있으며, 이 속성들을 조합해서 무궁무진한 방법으로 응용할 수 있습니다.</p>\n<p>Flexbox의 응용 방법에 대해서는 추후 기회가 되면 다른 포스팅에서 다뤄보도록 하겠습니다.\nFlexbox에 대한 좀 더 심도있게 공부하고 싶은 분들께는 아래 자료를 추천 드립니다.</p>\n<ul>\n<li><a href=\"https://css-tricks.com/snippets/css/a-guide-to-flexbox/\">A Complete Guide to Flexbox</a></li>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Learn/CSS/CSS_layout/Flexbox\">MDN Flexbox</a></li>\n</ul>","timeToRead":4,"fields":{"slug":"/css-flexbox/","tags":["CSS","Flexbox"]},"frontmatter":{"title":"CSS 플렉스박스(Flexbox) 이해하기","date":"Jun 28, 2020"}},"next":{"fields":{"slug":"/python-queue/"},"frontmatter":{"title":"파이썬에서 큐(queue) 자료구조 사용하기"}}}},
    "staticQueryHashes": ["2168229929","2362167539","3056348342"]}