{"componentChunkName":"component---src-templates-detail-template-jsx","path":"/css-position-fixed/","result":{"pageContext":{"previous":{"fields":{"slug":"/css-overflow/"},"frontmatter":{"title":"[CSS] overflow 속성 사용법"}},"node":{"html":"<p>이번 포스팅에서는 화면에 고정된 UI를 만들 때 사용되는 fixed positioning에 대해서 알아보도록 하겠습니다.</p>\n<h2 id=\"fixed-positioning\" style=\"position:relative;\"><a href=\"#fixed-positioning\" aria-label=\"fixed positioning permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Fixed Positioning</h2>\n<p>CSS의 fixed positioning은 브라우저의 전체 화면(viewport)을 기준으로 엘리먼트를 배치할 때 사용합니다.\nCSS의 <code>position</code> 속성은 엘리먼트가 어떻게 배치되는가를 결정하는데, 이 속성의 값을 <code>fixed</code>로 지정해주면 fixed positioning이 적용됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.fixed</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">position</span><span class=\"token punctuation\">:</span> fixed<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>fixed positioning이 적용된 엘리먼트는 부모 엘리먼트로 부터 완전히 독립되어 다른 엘리먼트의 구애받지 않고 화면에 어디든지 원하는 위치에 자유롭게 배치될 수 있습니다.\n또한, fixed positioning이 적용된 엘리먼트는 다른 엘리먼트들이 스크롤링(scrolling)되는 동안에도 지정된 자리에서 고정되어 움직이지 않는 특징을 가지고 있습니다.</p>\n<p>예를 들어, 아래 화면에서 하늘색 박스에는 fixed positioning이 적용되어 있습니다.\n스크롤링을 해보면 분홍색 박스는 상하로 움직이는 반면에 하늘색 박스는 제자리에 고정되어 있는 것을 확인할 수 있습니다.</p>\n<iframe height=\"294\" style=\"width: 100%;\" scrolling=\"no\" title=\"css-position-fixed\" src=\"https://codepen.io/daleseo/embed/ZELKMry?height=294&theme-id=dark&default-tab=html,result\" frameborder=\"no\" loading=\"lazy\" allowtransparency=\"true\" allowfullscreen=\"true\">\n  See the Pen <a href='https://codepen.io/daleseo/pen/ZELKMry'>css-position-fixed</a> by Dale Seo\n  (<a href='https://codepen.io/daleseo'>@daleseo</a>) on <a href='https://codepen.io'>CodePen</a>.\n</iframe>\n<h2 id=\"엘리먼트-위치-지정\" style=\"position:relative;\"><a href=\"#%EC%97%98%EB%A6%AC%EB%A8%BC%ED%8A%B8-%EC%9C%84%EC%B9%98-%EC%A7%80%EC%A0%95\" aria-label=\"엘리먼트 위치 지정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>엘리먼트 위치 지정</h2>\n<p>fixed positioning이 적용된 엘리먼트의 위치를 지정할 때는 CSS의 <code>top</code>, <code>left</code>, <code>bottom</code>, <code>right</code>와 같은 offset 속성을 이용합니다.\n예를 들어, <code>top</code> 속성을 <code>10px</code>로 설정하면, 해당 엘리먼트는 화면 상단에서 10px 떨어진 곳에 위치하게 됩니다.</p>\n<p>아래 화면을 보면 첫번째 박스는 좌상단에 고정되어 있고, 두번째 박스는 우하단에 고정되어 있습니다.</p>\n<iframe height=\"350\" style=\"width: 100%;\" scrolling=\"no\" title=\"css-position-fixed-offset\" src=\"https://codepen.io/daleseo/embed/eYgWLVE?height=329&theme-id=dark&default-tab=result\" frameborder=\"no\" loading=\"lazy\" allowtransparency=\"true\" allowfullscreen=\"true\">\n  See the Pen <a href='https://codepen.io/daleseo/pen/eYgWLVE'>css-position-fixed-offset</a> by Dale Seo\n  (<a href='https://codepen.io/daleseo'>@daleseo</a>) on <a href='https://codepen.io'>CodePen</a>.\n</iframe>\n<p>첫번째 박스는 <code>top</code>과 <code>left</code> 속성을 기준으로 위치가 지정되어 있고, 두번째 박스는 <code>bottom</code>과 <code>right</code> 속성 기준으로 위치가 지정되어 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.top-left</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">top</span><span class=\"token punctuation\">:</span> 10px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">left</span><span class=\"token punctuation\">:</span> 10px<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.bottom-right</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">bottom</span><span class=\"token punctuation\">:</span> 10px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">right</span><span class=\"token punctuation\">:</span> 10px<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"라이브-채팅-버튼-만들기\" style=\"position:relative;\"><a href=\"#%EB%9D%BC%EC%9D%B4%EB%B8%8C-%EC%B1%84%ED%8C%85-%EB%B2%84%ED%8A%BC-%EB%A7%8C%EB%93%A4%EA%B8%B0\" aria-label=\"라이브 채팅 버튼 만들기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>라이브 채팅 버튼 만들기</h2>\n<p>많은 웹사이트의 화면 우측 하단에서 흔히 볼 수 있는 라이브 채팅 버튼을 fixed positioning을 활용해서 간단하게 구현해보겠습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>live-chat<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>실시간 채팅 💬<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">#live-chat</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">position</span><span class=\"token punctuation\">:</span> fixed<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">bottom</span><span class=\"token punctuation\">:</span> 20px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">right</span><span class=\"token punctuation\">:</span> 20px<span class=\"token punctuation\">;</span>\n\n  <span class=\"token property\">border</span><span class=\"token punctuation\">:</span> none<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">border-radius</span><span class=\"token punctuation\">:</span> 16px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> royalblue<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> white<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> 12px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">font-weight</span><span class=\"token punctuation\">:</span> bold<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">box-shadow</span><span class=\"token punctuation\">:</span> <span class=\"token function\">rgba</span><span class=\"token punctuation\">(</span>0<span class=\"token punctuation\">,</span> 0<span class=\"token punctuation\">,</span> 0<span class=\"token punctuation\">,</span> 0.35<span class=\"token punctuation\">)</span> 0px 5px 15px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">cursor</span><span class=\"token punctuation\">:</span> pointer<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<iframe height=\"350\" style=\"width: 100%;\" scrolling=\"no\" title=\"css-position-fixed-live-chat\" src=\"https://codepen.io/daleseo/embed/PoWmBQB?height=265&theme-id=dark&default-tab=result\" frameborder=\"no\" loading=\"lazy\" allowtransparency=\"true\" allowfullscreen=\"true\">\n  See the Pen <a href='https://codepen.io/daleseo/pen/PoWmBQB'>css-position-fixed-live-chat</a> by Dale Seo\n  (<a href='https://codepen.io/daleseo'>@daleseo</a>) on <a href='https://codepen.io'>CodePen</a>.\n</iframe>\n<h2 id=\"마치면서\" style=\"position:relative;\"><a href=\"#%EB%A7%88%EC%B9%98%EB%A9%B4%EC%84%9C\" aria-label=\"마치면서 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>마치면서</h2>\n<p>이 밖에도 fixed positioning은 화면에 고정되야 하는 다양한 UI를 구현하는데 활용되고 있습니다.\n대표적인 사례로 상단에 고정된 메뉴바를 들 수 있는데요. 이 부분은 예전에 <a href=\"/css-position-fixed-navigation\">다른 포스팅</a>에서 다루었으니 참고 바랍니다.</p>","timeToRead":2,"fields":{"slug":"/css-position-fixed/","tags":["CSS","position","fixed"]},"frontmatter":{"title":"[CSS] Fixed Positioning","date":"Apr 3, 2021"}},"next":{"fields":{"slug":"/css-position-absolute-tooltip/"},"frontmatter":{"title":"[CSS] 툴팁(tooltip) 구현하기"}}}},"staticQueryHashes":["2168229929","2362167539","3056348342"]}