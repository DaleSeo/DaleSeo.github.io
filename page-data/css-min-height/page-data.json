{
    "componentChunkName": "component---src-templates-detail-template-jsx",
    "path": "/css-min-height/",
    "result": {"pageContext":{"previous":{"fields":{"slug":"/aws-iam/"},"frontmatter":{"title":"AWS IAM으로 배우는 접근 통제의 기본 개념"}},"node":{"html":"<p>이번 포스팅에서는 CSS에서 <code>height</code> 속성을 사용할 때 흔히 겪을 수 있는 문제점과 <code>min-height</code> 속성을 사용하여 이러한 문제를 쉽게 예방하는 방법에 대해서 살펴보았습니다.</p>\n<h2 id=\"height-속성의-기본값\" style=\"position:relative;\"><a href=\"#height-%EC%86%8D%EC%84%B1%EC%9D%98-%EA%B8%B0%EB%B3%B8%EA%B0%92\" aria-label=\"height 속성의 기본값 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>height 속성의 기본값</h2>\n<p><code>height</code> 속성을 명시해주지 않으면 <code>auto</code>라는 키워드가 기본값으로 사용이 되는데요.\n<code>height</code> 속성이 <code>auto</code>로 설정되어 있는 요소는 내부 컨텐츠를 해당 요소를 딱 맞게 담을 수 있을만큼 높이가 자동 결정됩니다.</p>\n<p>이 기본값 덕분에 우리가 <code>height</code> 속성을 별도로 명시해주지 않아도 요소의 높이는 화면 크기에 따라서 자동 조절됩니다.\n다시 말해 요소의 폭이 좁아지면 한 줄에 담을 수 있는 컨텐츠의 양이 적어지기 때문에 요소의 높이가 높아지게 되고,\n반대로 요소의 폭이 넓어지면 한 줄에 담을 수 있는 컨텐츠의 양이 늘어나서 요소의 높이가 자연스럽게 낮아지게 됩니다.</p>\n<iframe height=\"300\" style=\"width: 100%;\" scrolling=\"no\" title=\"css-min-height-1\" src=\"https://codepen.io/daleseo/embed/bGKxELG?default-tab=result\" frameborder=\"no\" loading=\"lazy\" allowtransparency=\"true\" allowfullscreen=\"true\">\n  See the Pen <a href=\"https://codepen.io/daleseo/pen/bGKxELG\">\n  css-min-height-1</a> by Dale Seo (<a href=\"https://codepen.io/daleseo\">@daleseo</a>)\n  on <a href=\"https://codepen.io\">CodePen</a>.\n</iframe>\n<h2 id=\"height-속성의-위험성\" style=\"position:relative;\"><a href=\"#height-%EC%86%8D%EC%84%B1%EC%9D%98-%EC%9C%84%ED%97%98%EC%84%B1\" aria-label=\"height 속성의 위험성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>height 속성의 위험성</h2>\n<p><code>height</code> 속성을 직접 설정해줄 때는 여러 가지 문제로 이어질 수 있으므로 각별한 주의가 필요한데요.</p>\n<p>대표적인 사례로 <code>height</code> 속성을 절대 픽셀값으로 설정해서 의도치 않게 컨텐츠가 요소 밖으로 삐져나오는 경우를 들 수 있습니다.</p>\n<iframe height=\"300\" style=\"width: 100%;\" scrolling=\"no\" title=\"css-min-height-2\" src=\"https://codepen.io/daleseo/embed/JjZaGxZ?default-tab=css%2Cresult\" frameborder=\"no\" loading=\"lazy\" allowtransparency=\"true\" allowfullscreen=\"true\">\n  See the Pen <a href=\"https://codepen.io/daleseo/pen/JjZaGxZ\">\n  css-min-height-2</a> by Dale Seo (<a href=\"https://codepen.io/daleseo\">@daleseo</a>)\n  on <a href=\"https://codepen.io\">CodePen</a>.\n</iframe>\n<p>위 화면에서 <code>&#x3C;div></code> 요소의 <code>height</code> 속성을 <code>100px</code>로 설정하였기 때문에, 두번째 요소의 컨텐츠가 요소 밖으로 밀려나오는 것을 볼 수 있습니다.</p>\n<blockquote>\n<p>CSS에서 컨텐츠가 넘칠 때 요소 밖으로 빠져나올지 말지는 결정하는 <code>overflow</code> 속성에 대해서는 별도의 <a href=\"/css-overflow/\">포스팅</a>에서 다루었으니 참고 바랍니다.</p>\n</blockquote>\n<p>이러한 현상은 비단 고정 폭의 요소 뿐만 아니라, <code>width</code> 속성이 퍼센트(%)와 같이 상대값으로 설정되어 있을 경우에도 쉽게 발생할 수 있습니다.\n특히, 디스플레이의 폭이 상대적으로 좁은 모바일 환경에서는 이것이 전체 웹페이지의 레이아웃을 어긋나게 하는 원인이 될 수 있으며, 데스크탑 환경에서도 사용자가 브라우저의 너비를 확 줄여버리면 비슷한 문제로 이어질 수 있어서 <code>width</code> 속성을 명시해줄 때는 각별한 주의가 필요하겠습니다.</p>\n<h2 id=\"대안-min-height-속성\" style=\"position:relative;\"><a href=\"#%EB%8C%80%EC%95%88-min-height-%EC%86%8D%EC%84%B1\" aria-label=\"대안 min height 속성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>대안: min-height 속성</h2>\n<p>그럼 어떻게 하면 컨텐츠가 요소 밖으로 밀려나오는 문제를 예방하면서 요소의 높이를 좀 더 안전하게 지정할 수 있을까요?\n바로 여기서 <code>width</code> 속성의 대안으로 <code>min-width</code> 속성을 활용할 수 있는데요.</p>\n<p><code>min-width</code> 속성을 사용하면 컨텐츠의 양이 적을 때는 설정값으로 높이가 고정되고, 컨텐츠 양이 많을 때는 넘치지 않고 요소의 높이가 자연스럽게 늘어나기 때문입니다.</p>\n<iframe height=\"300\" style=\"width: 100%;\" scrolling=\"no\" title=\"css-min-height-3\" src=\"https://codepen.io/daleseo/embed/PoadZer?default-tab=css%2Cresult\" frameborder=\"no\" loading=\"lazy\" allowtransparency=\"true\" allowfullscreen=\"true\">\n  See the Pen <a href=\"https://codepen.io/daleseo/pen/PoadZer\">\n  css-min-height-3</a> by Dale Seo (<a href=\"https://codepen.io/daleseo\">@daleseo</a>)\n  on <a href=\"https://codepen.io\">CodePen</a>.\n</iframe>\n<p>위 화면에서 보시면 <code>height</code> 속성 대신에 <code>min-height</code> 속성을 사용하여 첫 번째 요소의 높이는 <code>100px</code>이 유지되지만, 두 번째 요소의 높이는 늘어난 것을 확인할 수 있습니다.</p>\n<h2 id=\"마치면서\" style=\"position:relative;\"><a href=\"#%EB%A7%88%EC%B9%98%EB%A9%B4%EC%84%9C\" aria-label=\"마치면서 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>마치면서</h2>\n<p>CSS에서 <code>width</code> 속성은 워낙 자주 쓰이다보니 오히려 과소 평가하고 함부로 쓰기 쉬운 것 같습니다.\n저는 개인적으로 <code>height</code> 속성은 왠만하면 건들지 않으려고 노력하는데요.\n지금까지 함께 살펴본 것 처럼 높이 지정이 필요한 경우에는 <code>min-height</code> 속성을 우선적으로 쓰는 것이 바람직한 경우가 많기 때문입니다.</p>","timeToRead":2,"fields":{"slug":"/css-min-height/","tags":["CSS","HTML","height"]},"frontmatter":{"title":"CSS에서 height 속성 대신에 min-height 속성을 사용하는 이유","date":"Dec 1, 2022"}},"next":{"fields":{"slug":"/ts-object-iteration/"},"frontmatter":{"title":"객체를 순회하다가 발생하는 타입스크립트 오류 해결하기"}}}},
    "staticQueryHashes": ["2168229929","2362167539","3056348342"]}