{"componentChunkName":"component---src-templates-detail-template-jsx","path":"/python-logging/","result":{"pageContext":{"previous":{"fields":{"slug":"/python-unittest-mock/"},"frontmatter":{"title":"[파이썬] 테스트 모킹 - unittest.mock"}},"node":{"html":"<h2 id=\"logging-내장-모듈\" style=\"position:relative;\"><a href=\"#logging-%EB%82%B4%EC%9E%A5-%EB%AA%A8%EB%93%88\" aria-label=\"logging 내장 모듈 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>logging 내장 모듈</h2>\n<p>외부 라이브러리가 없더라도 대부분의 애플리케이션에서는 파이썬에 내장되어 있는 <code>logging</code> 모듈만으로도 충분히 로깅이 가능합니다.\n<code>logging</code> 내장 모듈은 파이썬만 설치되어 있다면 다음과 같이 인터프리터에서도 간단히 임포트해서 사용해볼 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">import</span> logging\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> logging<span class=\"token punctuation\">.</span>warning<span class=\"token punctuation\">(</span><span class=\"token string\">'경고!'</span><span class=\"token punctuation\">)</span>\nWARNING<span class=\"token punctuation\">:</span>root<span class=\"token punctuation\">:</span>경고!</code></pre></div>\n<h2 id=\"심각도-별-로깅\" style=\"position:relative;\"><a href=\"#%EC%8B%AC%EA%B0%81%EB%8F%84-%EB%B3%84-%EB%A1%9C%EA%B9%85\" aria-label=\"심각도 별 로깅 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>심각도 별 로깅</h2>\n<p><code>logging</code> 모듈은 5단계의 심각도 따라 다른 메서드를 제공하고 있습니다.\n기본적으로 이 중 하나의 메서드에 로깅할 메세지를 인자로 넘겨서 호출하면 로그가 남습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token keyword\">import</span> logging\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    logging<span class=\"token punctuation\">.</span>debug<span class=\"token punctuation\">(</span><span class=\"token string\">\"디버그\"</span><span class=\"token punctuation\">)</span>\n    logging<span class=\"token punctuation\">.</span>info<span class=\"token punctuation\">(</span><span class=\"token string\">\"정보\"</span><span class=\"token punctuation\">)</span>\n    logging<span class=\"token punctuation\">.</span>warning<span class=\"token punctuation\">(</span><span class=\"token string\">\"경고\"</span><span class=\"token punctuation\">)</span>\n    logging<span class=\"token punctuation\">.</span>error<span class=\"token punctuation\">(</span><span class=\"token string\">\"오류\"</span><span class=\"token punctuation\">)</span>\n    logging<span class=\"token punctuation\">.</span>critical<span class=\"token punctuation\">(</span><span class=\"token string\">\"심각\"</span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">\"__main__\"</span><span class=\"token punctuation\">:</span>\n    main<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>위 프로그램을 실행해보면 다음과 같이 <code>debug</code>와 <code>info</code>를 제외하고 로그가 출력되는 것을 알 수 있습니다.\n이는 추가 설정을 하지 않으면 기본 로깅 레벨인 <code>warning</code> 이상의 심각도에 대해서만 로그가 남기 때문입니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">WARNING:root:경고\nERROR:root:오류\nCRITICAL:root:심각</code></pre></div>\n<h2 id=\"로깅-레벨-변경\" style=\"position:relative;\"><a href=\"#%EB%A1%9C%EA%B9%85-%EB%A0%88%EB%B2%A8-%EB%B3%80%EA%B2%BD\" aria-label=\"로깅 레벨 변경 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>로깅 레벨 변경</h2>\n<p><code>basicConfig()</code> 메서드를 사용하면 간단하게 로깅 레벨을 바꿔줄 수 있습니다.\n다음과 같이 로깅 레벨을 <code>DEBUG</code>로 낮춰주면 모든 로그가 출력될 것 입니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token keyword\">import</span> logging\n\nlogging<span class=\"token punctuation\">.</span>basicConfig<span class=\"token punctuation\">(</span>level<span class=\"token operator\">=</span>logging<span class=\"token punctuation\">.</span>DEBUG<span class=\"token punctuation\">)</span>\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    logging<span class=\"token punctuation\">.</span>debug<span class=\"token punctuation\">(</span><span class=\"token string\">\"디버그\"</span><span class=\"token punctuation\">)</span>\n    logging<span class=\"token punctuation\">.</span>info<span class=\"token punctuation\">(</span><span class=\"token string\">\"정보\"</span><span class=\"token punctuation\">)</span>\n    logging<span class=\"token punctuation\">.</span>warning<span class=\"token punctuation\">(</span><span class=\"token string\">\"경고\"</span><span class=\"token punctuation\">)</span>\n    logging<span class=\"token punctuation\">.</span>error<span class=\"token punctuation\">(</span><span class=\"token string\">\"오류\"</span><span class=\"token punctuation\">)</span>\n    logging<span class=\"token punctuation\">.</span>critical<span class=\"token punctuation\">(</span><span class=\"token string\">\"심각\"</span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">\"__main__\"</span><span class=\"token punctuation\">:</span>\n    main<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">DEBUG:root:디버그\nINFO:root:정보\nWARNING:root:경고\nERROR:root:오류\nCRITICAL:root:심각</code></pre></div>\n<h2 id=\"로깅-포멧-변경\" style=\"position:relative;\"><a href=\"#%EB%A1%9C%EA%B9%85-%ED%8F%AC%EB%A9%A7-%EB%B3%80%EA%B2%BD\" aria-label=\"로깅 포멧 변경 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>로깅 포멧 변경</h2>\n<p>콘솔에 출력된 로그를 보면 인자로 넘긴 메세지 외에도 그 앞에 추가적인 정보(로깅 레벨, 로거 이름)가 포함되어 있는 것을 알 수 있습니다.\n이는 기본 로깅 포멧이 <code>%(levelname)s:%(name)s:%(message)s</code>이기 때문이며, 로깅 포멧도 <code>basicConfig()</code> 메서드를 이용해서 쉽게 변경이 가능합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token keyword\">import</span> logging\n\nlogging<span class=\"token punctuation\">.</span>basicConfig<span class=\"token punctuation\">(</span>level<span class=\"token operator\">=</span>logging<span class=\"token punctuation\">.</span>DEBUG<span class=\"token punctuation\">,</span> <span class=\"token builtin\">format</span><span class=\"token operator\">=</span><span class=\"token string\">\"'%(asctime)s - %(message)s'\"</span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    logging<span class=\"token punctuation\">.</span>debug<span class=\"token punctuation\">(</span><span class=\"token string\">\"디버그\"</span><span class=\"token punctuation\">)</span>\n    logging<span class=\"token punctuation\">.</span>info<span class=\"token punctuation\">(</span><span class=\"token string\">\"정보\"</span><span class=\"token punctuation\">)</span>\n    logging<span class=\"token punctuation\">.</span>warning<span class=\"token punctuation\">(</span><span class=\"token string\">\"경고\"</span><span class=\"token punctuation\">)</span>\n    logging<span class=\"token punctuation\">.</span>error<span class=\"token punctuation\">(</span><span class=\"token string\">\"오류\"</span><span class=\"token punctuation\">)</span>\n    logging<span class=\"token punctuation\">.</span>critical<span class=\"token punctuation\">(</span><span class=\"token string\">\"심각\"</span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">\"__main__\"</span><span class=\"token punctuation\">:</span>\n    main<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&#39;2020-02-02 15:48:17,420 - 디버그&#39;\n&#39;2020-02-02 15:48:17,420 - 정보&#39;\n&#39;2020-02-02 15:48:17,420 - 경고&#39;\n&#39;2020-02-02 15:48:17,421 - 오류&#39;\n&#39;2020-02-02 15:48:17,421 - 심각&#39;</code></pre></div>\n<p>이 밖에 자세한 로깅 포멧 문법에 대해서는 <a href=\"https://docs.python.org/3/library/logging.html#logrecord-attributes\">공식 레퍼런스</a>를 참고바랍니다.</p>\n<h2 id=\"예외-로깅\" style=\"position:relative;\"><a href=\"#%EC%98%88%EC%99%B8-%EB%A1%9C%EA%B9%85\" aria-label=\"예외 로깅 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>예외 로깅</h2>\n<p>예외가 발생한 경우에는 <code>exception()</code>를 사용하여 로그 메세지 뿐만 아니라 스택 트레이스에 대한 로그까지 남길 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token keyword\">import</span> logging\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">calc</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token number\">1</span> <span class=\"token operator\">/</span> <span class=\"token number\">0</span>\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n        calc<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">except</span> Exception<span class=\"token punctuation\">:</span>\n        logging<span class=\"token punctuation\">.</span>exception<span class=\"token punctuation\">(</span><span class=\"token string\">\"예외\"</span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">\"__main__\"</span><span class=\"token punctuation\">:</span>\n    main<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">ERROR:root:예외\nTraceback <span class=\"token punctuation\">(</span>most recent call last<span class=\"token punctuation\">)</span>:\n  File <span class=\"token string\">\"learn_logging.py\"</span>, line <span class=\"token number\">10</span>, <span class=\"token keyword\">in</span> main\n    calc<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  File <span class=\"token string\">\"learn_logging.py\"</span>, line <span class=\"token number\">5</span>, <span class=\"token keyword\">in</span> calc\n    <span class=\"token number\">1</span> / <span class=\"token number\">0</span>\nZeroDivisionError: division by zero</code></pre></div>\n<h2 id=\"유동적-로깅-레벨\" style=\"position:relative;\"><a href=\"#%EC%9C%A0%EB%8F%99%EC%A0%81-%EB%A1%9C%EA%B9%85-%EB%A0%88%EB%B2%A8\" aria-label=\"유동적 로깅 레벨 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>유동적 로깅 레벨</h2>\n<p>좀 더 범용적인 메서드인 <code>log()</code>를 사용하면, 좀 더 유용적으로 심각도 레벨을 지정할 수 있습니다.\n<code>log()</code> 메서드에 로깅 레벨을 인자로 넘길 수 있기 때문에, 다음과 같이 로깅 레벨을 런타임에 바꿀 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token keyword\">import</span> logging\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    level <span class=\"token operator\">=</span> logging<span class=\"token punctuation\">.</span>ERROR\n    logging<span class=\"token punctuation\">.</span>log<span class=\"token punctuation\">(</span>level<span class=\"token punctuation\">,</span> <span class=\"token string\">\"메세지\"</span><span class=\"token punctuation\">)</span>\n\n    level <span class=\"token operator\">=</span> logging<span class=\"token punctuation\">.</span>WARNING\n    logging<span class=\"token punctuation\">.</span>log<span class=\"token punctuation\">(</span>level<span class=\"token punctuation\">,</span> <span class=\"token string\">\"메세지\"</span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">\"__main__\"</span><span class=\"token punctuation\">:</span>\n    main<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">ERROR:root:메세지\nWARNING:root:메세지</code></pre></div>\n<h2 id=\"마치면서\" style=\"position:relative;\"><a href=\"#%EB%A7%88%EC%B9%98%EB%A9%B4%EC%84%9C\" aria-label=\"마치면서 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>마치면서</h2>\n<p>지금까지 파이썬의 <code>logging</code> 내장 모듈을 사용하여 정말 기본적인 로깅 방법에 대해서 살펴보았습니다.\n간단한 애플리케이션에서는 이와 같이 최상위 로거만 사용해도 크게 부족함이 없지만, 여러 개의 모듈로 이루어진 복잡한 애플리케이션에서는 모듈 단위로 계층적인 로깅을 고려해봐야 합니다.\n이 부분에 대해서는 추후 포스트를 통해 다루도록 하겠습니다.</p>","timeToRead":3,"fields":{"slug":"/python-logging/","tags":["Python","파이썬","logging","로깅"]},"frontmatter":{"title":"파이썬 기본 로깅 - logging 내장 모듈","date":"Feb 2, 2020"}},"next":{"fields":{"slug":"/python-pipenv/"},"frontmatter":{"title":"pipenv로 패키지 관리하기"}}}}}