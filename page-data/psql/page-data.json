{"componentChunkName":"component---src-templates-detail-template-jsx","path":"/psql/","result":{"pageContext":{"previous":{"fields":{"slug":"/python-global-nonlocal/"},"frontmatter":{"title":"파이썬의 global과 nonlocal 키워드 사용법"}},"node":{"html":"<p>PostgreSQL를 사용하실 때 일반적으로 데이터베이스를 보기 좋게 시각화하여 보여주는 GUI(그래픽 사용자 인터페이스) 기반 클라이언트를 이용하실텐데요.\n하지만 간혹 어떤 제약 사항 때문에 이렇게 무거운 프로그램을 설치하기 어려운 상황도 생기기 마련이죠?</p>\n<p>이런 경우 PostgreSQL에서 제공하는 CLI(명령 줄 인터페이스) 기반 클라이언트인 psql을 사용하면 매우 간편하게 터미널에서 데이터베이스에 접속할 수 있습니다.</p>\n<h2 id=\"psql-명령어-설치\" style=\"position:relative;\"><a href=\"#psql-%EB%AA%85%EB%A0%B9%EC%96%B4-%EC%84%A4%EC%B9%98\" aria-label=\"psql 명령어 설치 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>psql 명령어 설치</h2>\n<p>psql는 PostgreSQL 데이터베이스만 설치하면 기본적으로 딸려오는 CLI 도구입니다.\n만약에 컴퓨터에 PostgreSQL 데이터베이스가 이미 설치되어 있지 않으시다면 <a href=\"https://www.postgresql.org/download/\">여기</a>에서 본인 운영체제에 맞는 설치 파일을 내려받은 후 실행해주시면 됩니다.</p>\n<p>참고로 저처럼 MacOS를 사용하시는 분들은 Homebrew를 통해서 간편하게 터미널에서 설치할 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ brew <span class=\"token function\">install</span> postgresql@14</code></pre></div>\n<p>설치가 잘 되었는지 확인해보려면 터미널에서 도움말을 출력해보면 됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ psql --help</code></pre></div>\n<h2 id=\"데이터베이스-서버-접속\" style=\"position:relative;\"><a href=\"#%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B2%A0%EC%9D%B4%EC%8A%A4-%EC%84%9C%EB%B2%84-%EC%A0%91%EC%86%8D\" aria-label=\"데이터베이스 서버 접속 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>데이터베이스 서버 접속</h2>\n<p>이제 psql을 사용할 준비가 되었으니 PostgreSQL 서버에 접속해볼까요?</p>\n<p>PostgreSQL 서버가 현재 본인의 컴퓨터에서 돌아고 있다면 DB 이름과 사용자 이름만 있으면 되는데요.\n다음과 같은 형식으로 <code>psql</code> 명령어를 실행할 때 DB 이름과 사용자 이름을 명시해주면 됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ psql <span class=\"token operator\">&lt;</span>DB 이름<span class=\"token operator\">></span> <span class=\"token operator\">&lt;</span>사용자 이름<span class=\"token operator\">></span></code></pre></div>\n<p>예를 들어, <code>postgres</code>라는 DB에 <code>daleseo</code>라는 사용자로 접속하려면 다음과 같이 명령어를 작성하시면 됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ psql postgres daleseo\nPassword <span class=\"token keyword\">for</span> user daleseo:</code></pre></div>\n<p>여기서 정확한 비밀번호를 입력하면 다음과 같이 명령 프롬프트(prompt)가 바뀌면서 데이터베이스 서버에 접속이 될 것입니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token assign-left variable\">daleseo</span><span class=\"token operator\">=</span><span class=\"token comment\">#</span></code></pre></div>\n<p>만약에 원격이나 클라우드에 있는 데이터베이스 서버에 접속을 해야한다면 추가로 호스트(host)명과 포트(port) 번호를 명시해줘야하는데요.\n다음과 같은 형식으로 <code>-h</code> 옵션에 호스트명을 넘기고, <code>-p</code> 옵션에 포트를 넘기면 됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ psql -h <span class=\"token operator\">&lt;</span>호스트명<span class=\"token operator\">></span> -p <span class=\"token operator\">&lt;</span>포트<span class=\"token operator\">></span> <span class=\"token operator\">&lt;</span>DB 이름<span class=\"token operator\">></span> <span class=\"token operator\">&lt;</span>사용자 이름<span class=\"token operator\">></span></code></pre></div>\n<p>예를 들어, AWS의 Amazon RDS나 Amazon Aurora에서 돌아가고 있는 PostgreSQL 서버에 접속하기 위한 명령어는 다음과 비슷한 모습일 것입니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ psql -h a1b2c3.us-east-1.rds.amazonaws.com -p <span class=\"token number\">5432</span> postgres daleseo\nPassword <span class=\"token keyword\">for</span> user daleseo:</code></pre></div>\n<p>접속하려는 데이터베이스 서버가 5432 포트를 사용하고 있다면 <code>-p</code> 옵션은 생략해도 무방합니다.\n<code>-p</code> 옵션을 별도로 명시하지 않으면 기본적으로 5432 포트가 사용되기 때문입니다.</p>\n<p>참고로 DB 이름과 사용자 이름 중에 뭐가 더 먼저 나오는지 헛갈리신다면 각각의 값을 <code>-d</code> 옵션과 <code>-U</code> 옵션으로 구분해서 넘길 수도 있어요.\n이렇게 해주면 아무래도 타이핑을 좀 더 해야하지만 대신 좀 더 분명하게 각각 옵션이 무엇인지 알아볼 수 있게 됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ psql -h a1b2c3.us-east-1.rds.amazonaws.com -p <span class=\"token number\">5432</span> -d postgres -U daleseo\nPassword <span class=\"token keyword\">for</span> user daleseo:</code></pre></div>\n<h2 id=\"데이터베이스-나열\" style=\"position:relative;\"><a href=\"#%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B2%A0%EC%9D%B4%EC%8A%A4-%EB%82%98%EC%97%B4\" aria-label=\"데이터베이스 나열 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>데이터베이스 나열</h2>\n<p>하나의 PostgreSQL 서버에는 보통 한 개 이상의 데이터베이스가 구성되어 있는데요.\n해당 PostgreSQL 서버 내에 존재하는 모든 데이터베이스를 나열하고 싶다면 <code>\\l</code> 명령어를 사용하면 됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token assign-left variable\">daleseo</span><span class=\"token operator\">=</span><span class=\"token comment\"># \\l</span>\n                                 List of databases\n   Name    <span class=\"token operator\">|</span>  Owner   <span class=\"token operator\">|</span> Encoding <span class=\"token operator\">|</span>  Collate   <span class=\"token operator\">|</span>   Ctype    <span class=\"token operator\">|</span>   Access privileges\n-----------+----------+----------+------------+------------+-----------------------\n postgres  <span class=\"token operator\">|</span> postgres <span class=\"token operator\">|</span> UTF8     <span class=\"token operator\">|</span> en_US.utf8 <span class=\"token operator\">|</span> en_US.utf8 <span class=\"token operator\">|</span>\n template0 <span class=\"token operator\">|</span> postgres <span class=\"token operator\">|</span> UTF8     <span class=\"token operator\">|</span> en_US.utf8 <span class=\"token operator\">|</span> en_US.utf8 <span class=\"token operator\">|</span> <span class=\"token operator\">=</span>c/postgres          +\n           <span class=\"token operator\">|</span>          <span class=\"token operator\">|</span>          <span class=\"token operator\">|</span>            <span class=\"token operator\">|</span>            <span class=\"token operator\">|</span> <span class=\"token assign-left variable\">postgres</span><span class=\"token operator\">=</span>CTc/postgres\n template1 <span class=\"token operator\">|</span> postgres <span class=\"token operator\">|</span> UTF8     <span class=\"token operator\">|</span> en_US.utf8 <span class=\"token operator\">|</span> en_US.utf8 <span class=\"token operator\">|</span> <span class=\"token operator\">=</span>c/postgres          +\n           <span class=\"token operator\">|</span>          <span class=\"token operator\">|</span>          <span class=\"token operator\">|</span>            <span class=\"token operator\">|</span>            <span class=\"token operator\">|</span> <span class=\"token assign-left variable\">postgres</span><span class=\"token operator\">=</span>CTc/postgres\n<span class=\"token punctuation\">(</span><span class=\"token number\">3</span> rows<span class=\"token punctuation\">)</span></code></pre></div>\n<h2 id=\"데이터베이스-전환\" style=\"position:relative;\"><a href=\"#%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B2%A0%EC%9D%B4%EC%8A%A4-%EC%A0%84%ED%99%98\" aria-label=\"데이터베이스 전환 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>데이터베이스 전환</h2>\n<p>처음에 접속할 때 선택한 데이터베이스가 아닌 해당 PostgreSQL 서버 내의 다른 데이터베이스를 전환하고 싶다면 <code>\\c &#x3C;디비 이름> &#x3C;사용자 이름></code> 명령어를 사용합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token assign-left variable\">daleseo</span><span class=\"token operator\">=</span><span class=\"token comment\"># \\c postgres</span>\nYou are now connected to database <span class=\"token string\">\"postgres\"</span> as user <span class=\"token string\">\"daleseo\"</span><span class=\"token builtin class-name\">.</span>\n<span class=\"token assign-left variable\">postgres</span><span class=\"token operator\">=</span><span class=\"token comment\">#</span></code></pre></div>\n<h2 id=\"테이블-나열\" style=\"position:relative;\"><a href=\"#%ED%85%8C%EC%9D%B4%EB%B8%94-%EB%82%98%EC%97%B4\" aria-label=\"테이블 나열 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>테이블 나열</h2>\n<p>특정 데이터베이스 내에 존재하는 모든 테이블을 내열하고 싶다면 <code>\\dt</code> 명령어를 사용합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token assign-left variable\">postgres</span><span class=\"token operator\">=</span><span class=\"token comment\"># \\dt</span>\n               List of relations\n Schema <span class=\"token operator\">|</span>        Name        <span class=\"token operator\">|</span> Type  <span class=\"token operator\">|</span>  Owner\n--------+--------------------+-------+----------\n public <span class=\"token operator\">|</span> Category           <span class=\"token operator\">|</span> table <span class=\"token operator\">|</span> postgres\n public <span class=\"token operator\">|</span> Customer           <span class=\"token operator\">|</span> table <span class=\"token operator\">|</span> postgres\n public <span class=\"token operator\">|</span> CustomerOrder      <span class=\"token operator\">|</span> table <span class=\"token operator\">|</span> postgres\n public <span class=\"token operator\">|</span> OrderDetails       <span class=\"token operator\">|</span> table <span class=\"token operator\">|</span> postgres\n public <span class=\"token operator\">|</span> Product            <span class=\"token operator\">|</span> table <span class=\"token operator\">|</span> postgres\n public <span class=\"token operator\">|</span> _prisma_migrations <span class=\"token operator\">|</span> table <span class=\"token operator\">|</span> postgres\n<span class=\"token punctuation\">(</span><span class=\"token number\">6</span> rows<span class=\"token punctuation\">)</span></code></pre></div>\n<h2 id=\"테이블-상세-조회\" style=\"position:relative;\"><a href=\"#%ED%85%8C%EC%9D%B4%EB%B8%94-%EC%83%81%EC%84%B8-%EC%A1%B0%ED%9A%8C\" aria-label=\"테이블 상세 조회 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>테이블 상세 조회</h2>\n<p>특정 테이블에 대한 정보를 좀 더 상세하기 확인하고 싶다면 <code>\\d &#x3C;테이블 이름></code> 명령어를 사용합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token assign-left variable\">postgres</span><span class=\"token operator\">=</span><span class=\"token comment\"># \\d \"Product\"</span>\n                                   Table <span class=\"token string\">\"public.Product\"</span>\n   Column    <span class=\"token operator\">|</span>      Type      <span class=\"token operator\">|</span> Collation <span class=\"token operator\">|</span> Nullable <span class=\"token operator\">|</span>                Default\n-------------+----------------+-----------+----------+---------------------------------------\n <span class=\"token function\">id</span>          <span class=\"token operator\">|</span> integer        <span class=\"token operator\">|</span>           <span class=\"token operator\">|</span> not null <span class=\"token operator\">|</span> nextval<span class=\"token punctuation\">(</span><span class=\"token string\">'\"Product_id_seq\"'</span>::regclass<span class=\"token punctuation\">)</span>\n name        <span class=\"token operator\">|</span> text           <span class=\"token operator\">|</span>           <span class=\"token operator\">|</span> not null <span class=\"token operator\">|</span>\n description <span class=\"token operator\">|</span> text           <span class=\"token operator\">|</span>           <span class=\"token operator\">|</span> not null <span class=\"token operator\">|</span>\n price       <span class=\"token operator\">|</span> numeric<span class=\"token punctuation\">(</span><span class=\"token number\">65,30</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span>           <span class=\"token operator\">|</span> not null <span class=\"token operator\">|</span>\n sku         <span class=\"token operator\">|</span> integer        <span class=\"token operator\">|</span>           <span class=\"token operator\">|</span> not null <span class=\"token operator\">|</span>\n categoryId  <span class=\"token operator\">|</span> integer        <span class=\"token operator\">|</span>           <span class=\"token operator\">|</span> not null <span class=\"token operator\">|</span>\nIndexes:\n    <span class=\"token string\">\"Product_pkey\"</span> PRIMARY KEY, btree <span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span>\nForeign-key constraints:\n    <span class=\"token string\">\"Product_categoryId_fkey\"</span> FOREIGN KEY <span class=\"token punctuation\">(</span><span class=\"token string\">\"categoryId\"</span><span class=\"token punctuation\">)</span> REFERENCES <span class=\"token string\">\"Category\"</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span> ON UPDATE CASCADE ON DELETE RESTRICT\nReferenced by:\n    TABLE <span class=\"token string\">\"\"</span>OrderDetails<span class=\"token string\">\"\"</span> CONSTRAINT <span class=\"token string\">\"OrderDetails_productId_fkey\"</span> FOREIGN KEY <span class=\"token punctuation\">(</span><span class=\"token string\">\"productId\"</span><span class=\"token punctuation\">)</span> REFERENCES <span class=\"token string\">\"Product\"</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span> ON UPDATE CASCADE ON DELETE RESTRICT</code></pre></div>\n<p>예제처럼 테이블 이름에 대문자가 포함되어 있는 경우에는 테이블 이름을 반드시 <code>\"</code> 기호로 감싸줘야 하는 부분 주의 바랄께요.</p>\n<h2 id=\"sql-쿼리-실행하기\" style=\"position:relative;\"><a href=\"#sql-%EC%BF%BC%EB%A6%AC-%EC%8B%A4%ED%96%89%ED%95%98%EA%B8%B0\" aria-label=\"sql 쿼리 실행하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>SQL 쿼리 실행하기</h2>\n<p><code>psql</code> 쉘에서는 자유롭게 SQL 쿼리 실행하여 데이터를 조회하거나 추가, 수정, 삭제할 수 있습니다.\n또한 권한만 있다면 테이블이나 인덱스를 생성하거나 조작할 수도 있겠죠?</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token assign-left variable\">postgres</span><span class=\"token operator\">=</span><span class=\"token comment\"># SELECT 1;</span>\n ?column?\n----------\n        <span class=\"token number\">1</span>\n<span class=\"token punctuation\">(</span><span class=\"token number\">1</span> row<span class=\"token punctuation\">)</span></code></pre></div>\n<p>긴 쿼리는 여러 줄에 나눠서 작성할 수 있으며 맨 뒤에 <code>;</code>를 붙이고 엔터를 쳐야 비로소 쿼리가 실행이 됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token assign-left variable\">postgres</span><span class=\"token operator\">=</span><span class=\"token comment\"># SELECT * FROM \"Product\"</span>\nWHERE <span class=\"token string\">\"categoryId\"</span><span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n <span class=\"token function\">id</span> <span class=\"token operator\">|</span> name <span class=\"token operator\">|</span> description <span class=\"token operator\">|</span> price <span class=\"token operator\">|</span> sku <span class=\"token operator\">|</span> categoryId\n----+------+-------------+-------+-----+------------\n<span class=\"token punctuation\">(</span><span class=\"token number\">0</span> rows<span class=\"token punctuation\">)</span></code></pre></div>\n<h2 id=\"파일에-저장된-명령어나-쿼리-읽어오기\" style=\"position:relative;\"><a href=\"#%ED%8C%8C%EC%9D%BC%EC%97%90-%EC%A0%80%EC%9E%A5%EB%90%9C-%EB%AA%85%EB%A0%B9%EC%96%B4%EB%82%98-%EC%BF%BC%EB%A6%AC-%EC%9D%BD%EC%96%B4%EC%98%A4%EA%B8%B0\" aria-label=\"파일에 저장된 명령어나 쿼리 읽어오기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>파일에 저장된 명령어나 쿼리 읽어오기</h2>\n<p><code>\\i &#x3C;파일 경로></code> 명령어를 사용하여 미리 파일에 저장해놓은 명령어나 쿼리를 한 번에 일괄로 실행할 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token assign-left variable\">postgres</span><span class=\"token operator\">=</span><span class=\"token comment\"># \\o input.txt</span></code></pre></div>\n<h2 id=\"파일에-명령어나-쿼리-실행-결과-저장하기\" style=\"position:relative;\"><a href=\"#%ED%8C%8C%EC%9D%BC%EC%97%90-%EB%AA%85%EB%A0%B9%EC%96%B4%EB%82%98-%EC%BF%BC%EB%A6%AC-%EC%8B%A4%ED%96%89-%EA%B2%B0%EA%B3%BC-%EC%A0%80%EC%9E%A5%ED%95%98%EA%B8%B0\" aria-label=\"파일에 명령어나 쿼리 실행 결과 저장하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>파일에 명령어나 쿼리 실행 결과 저장하기</h2>\n<p><code>\\o &#x3C;파일 경로></code> 명령어를 사용하면 명령어나 쿼리 실행 결과를 파일에 저장할 수 있습니다.\n파일에 그만 저장하고 싶을 때는 <code>\\o</code> 명령어를 한 번 더 날리면 됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token assign-left variable\">postgres</span><span class=\"token operator\">=</span><span class=\"token comment\"># \\o output.txt</span>\n<span class=\"token assign-left variable\">postgres</span><span class=\"token operator\">=</span><span class=\"token comment\"># \\dt</span>\n<span class=\"token assign-left variable\">postgres</span><span class=\"token operator\">=</span><span class=\"token comment\"># SELECT 1;</span>\n<span class=\"token assign-left variable\">postgres</span><span class=\"token operator\">=</span><span class=\"token comment\"># \\o</span></code></pre></div>\n<h2 id=\"이전에-실행한-명령어-다시-실행하기\" style=\"position:relative;\"><a href=\"#%EC%9D%B4%EC%A0%84%EC%97%90-%EC%8B%A4%ED%96%89%ED%95%9C-%EB%AA%85%EB%A0%B9%EC%96%B4-%EB%8B%A4%EC%8B%9C-%EC%8B%A4%ED%96%89%ED%95%98%EA%B8%B0\" aria-label=\"이전에 실행한 명령어 다시 실행하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>이전에 실행한 명령어 다시 실행하기</h2>\n<p>바로 전에 실행한 명령어를 한 번 더 실행하려면 <code>\\g</code> 명령어를 사용합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token assign-left variable\">postgres</span><span class=\"token operator\">=</span><span class=\"token comment\"># \\g</span></code></pre></div>\n<p>명령어 실행 내역을 보려면 <code>\\s</code> 명령어를 사용합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token assign-left variable\">postgres</span><span class=\"token operator\">=</span><span class=\"token comment\"># \\s</span></code></pre></div>\n<h2 id=\"데이터베이스-서버에-접속-끊기\" style=\"position:relative;\"><a href=\"#%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B2%A0%EC%9D%B4%EC%8A%A4-%EC%84%9C%EB%B2%84%EC%97%90-%EC%A0%91%EC%86%8D-%EB%81%8A%EA%B8%B0\" aria-label=\"데이터베이스 서버에 접속 끊기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>데이터베이스 서버에 접속 끊기</h2>\n<p>마지막으로 데이터베이스의 접속을 중단하고 빠져나오고 싶을 때는 <code>\\q</code> 명령어를 날립니다.\n그러면 본래 터미널 쉘로 돌아와 명령 프롬프트(prompt)가 원래대로 돌아올 것입니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token assign-left variable\">postgres</span><span class=\"token operator\">=</span><span class=\"token comment\"># \\q</span>\n$</code></pre></div>\n<h2 id=\"모든-명령어-나열하기\" style=\"position:relative;\"><a href=\"#%EB%AA%A8%EB%93%A0-%EB%AA%85%EB%A0%B9%EC%96%B4-%EB%82%98%EC%97%B4%ED%95%98%EA%B8%B0\" aria-label=\"모든 명령어 나열하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>모든 명령어 나열하기</h2>\n<p>본 포스팅에서 다룬 명령어만 알고 계셔도 <code>psql</code>을 사용하시는데 큰 불폄함이 없을 것 같은데요.\n그 밖에 어떤 명령어가 있는지 궁금하시다면 <code>\\?</code> 명령어를 날려 보세요.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token assign-left variable\">postgres</span><span class=\"token operator\">=</span><span class=\"token comment\"># \\?</span></code></pre></div>\n<p>그러면 psql에서 사용 가능한 모든 명령어가 나열될 것입니다.</p>\n<h2 id=\"마치면서\" style=\"position:relative;\"><a href=\"#%EB%A7%88%EC%B9%98%EB%A9%B4%EC%84%9C\" aria-label=\"마치면서 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>마치면서</h2>\n<p>이상으로 PostgreSQL에서 제공하는 CLI 기반 클라이언트인 psql을 사용하여 터미널에서 데이터베이스를 사용하는 방법에 대해서 살펴보았는데요.</p>\n<p>psql은 PostgreSQL의 표준 콘솔 클라이언트이기 때문에 다른 범용 클라이언트에서는 사용할 수 없는 PostgreSQL 고유의 기능을 사용할 수 있다는 이점도 있습니다.\n터미널 사용에 익숙하시다면 이번 기회에 PostgreSQL을 아마도 가장 빠르고 간단하게 사용할 수 있는 방법인 psql을 익혀보시를 추천드립니다.</p>","timeToRead":7,"fields":{"slug":"/psql/","tags":["DB","CLI","PostgreSQL","psql"]},"frontmatter":{"title":"터미널에서 psql로 PostgreSQL 간편 사용","date":"Feb 9, 2022"}},"next":{"fields":{"slug":"/python-print/"},"frontmatter":{"title":"파이썬의 print() 함수 제대로 활용하기"}}}},"staticQueryHashes":["2168229929","2362167539","3056348342"]}