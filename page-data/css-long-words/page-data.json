{"componentChunkName":"component---src-templates-detail-template-jsx","path":"/css-long-words/","result":{"pageContext":{"previous":{"fields":{"slug":"/nestjs-configuration/"},"frontmatter":{"title":"NestJS 앱의 환경 설정"}},"node":{"html":"<p>웹 개발을 하다보면 아래와 같이 종종 영단어가 너무 길어서 모바일 환경과 같이 좁은 뷰포트(viewport)에서 부모 요소 밖으로 밀려나오는 경우를 접할 수 있는데요.\n꼭 영문 웹사이트가 아니더라도 요즘에는 한국어 컨텐츠에도 워낙 외래어가 많이 사용되고, 게다가 인터넷 URL과 이메일 주소가 대부분 영어로 되어 있어서 의외로 한국어 웹시아트를 구현할 때도 쉽게 겪을 수 있는 문제입니다.</p>\n<iframe height=\"300\" style=\"width: 100%;\" scrolling=\"no\" title=\"css-long-words\" src=\"https://codepen.io/daleseo/embed/xxarMVP?default-tab=html%2Cresult\" frameborder=\"no\" loading=\"lazy\" allowtransparency=\"true\" allowfullscreen=\"true\">\n  See the Pen <a href=\"https://codepen.io/daleseo/pen/xxarMVP\">\n  css-long-words</a> by Dale Seo (<a href=\"https://codepen.io/daleseo\">@daleseo</a>)\n  on <a href=\"https://codepen.io\">CodePen</a>.\n</iframe>\n<p>이번 포스팅에서는 웹에서 이렇게 원치 않게 부모 요소 밖으로 삐져나오는 영단어를 처리하는 다양한 방법에 대해서 알아보겠습니다.</p>\n<h2 id=\"영어와-한국어의-줄바꿈-차이\" style=\"position:relative;\"><a href=\"#%EC%98%81%EC%96%B4%EC%99%80-%ED%95%9C%EA%B5%AD%EC%96%B4%EC%9D%98-%EC%A4%84%EB%B0%94%EA%BF%88-%EC%B0%A8%EC%9D%B4\" aria-label=\"영어와 한국어의 줄바꿈 차이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>영어와 한국어의 줄바꿈 차이</h2>\n<p>우선 영단어가 왜 부모 요소 밖으로 삐져나올 수에 있는지에 대해서 의외로 많은 분들이 모르시는 부분이라서 짚고 넘어가면 좋을 것 같아요.\n아무 설정을 해주지 않으면 기본적으로 웹에서 한국어는 단어의 중간에서 줄바꿈이 되는 반면에 영어는 단어의 중간에서 줄바꿈이 되지 않습니다.</p>\n<p>예를 들어, 가장 긴 한국어 단어인 “얼룩보금자리산세비에리아”와 가장 긴 영어 단어인 “pneumonoultramicroscopicsilicovolcanoconiosis”를 똑같이 폭이 <code>150px</code>으로 고정된 부모 요소 안에 써볼까요?</p>\n<iframe height=\"350\" style=\"width: 100%;\" scrolling=\"no\" title=\"css-long-words-korean-vs-english\" src=\"https://codepen.io/daleseo/embed/abayYLX?default-tab=html%2Cresult\" frameborder=\"no\" loading=\"lazy\" allowtransparency=\"true\" allowfullscreen=\"true\">\n  See the Pen <a href=\"https://codepen.io/daleseo/pen/abayYLX\">\n  css-long-words-korean-vs-english</a> by Dale Seo (<a href=\"https://codepen.io/daleseo\">@daleseo</a>)\n  on <a href=\"https://codepen.io\">CodePen</a>.\n</iframe>\n<p>위에 보이는 것과 같이 한글 “자”와 “리” 사이에서는 줄바꿈이 일어나지만, 알파벳 “m”과 “i” 사이에서는 줄바꿈이 일어나지 않는 것을 알 수 있습니다.</p>\n<h2 id=\"shy-기호\" style=\"position:relative;\"><a href=\"#shy-%EA%B8%B0%ED%98%B8\" aria-label=\"shy 기호 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Shy 기호</h2>\n<p>밖으로 삐져나오는 영단어를 방지하는 가장 간단한 방법은 soft hyphen, 흔히 줄여서 shy라고 불리는 <code>-</code> 기호를 사용하는 것인데요.\n영어에서 <code>-</code> 기호는 마치 공백 기호처럼 취급되기 때문입니다.\n사실 책이나 잡지와 같은 활자 매체에서 많이 사용되는 방법이죠.</p>\n<p>예를 들어, 가장 긴 영어 단어 사이의 중간 중간에 3개의 <code>-</code> 기호를 추가해보겠습니다.</p>\n<iframe height=\"400\" style=\"width: 100%;\" scrolling=\"no\" title=\"css-long-words-shy\" src=\"https://codepen.io/daleseo/embed/xxaLzwr?default-tab=html%2Cresult\" frameborder=\"no\" loading=\"lazy\" allowtransparency=\"true\" allowfullscreen=\"true\">\n  See the Pen <a href=\"https://codepen.io/daleseo/pen/xxaLzwr\">\n  css-long-words-shy</a> by Dale Seo (<a href=\"https://codepen.io/daleseo\">@daleseo</a>)\n  on <a href=\"https://codepen.io\">CodePen</a>.\n</iframe>\n<p>그런데 이 전통적인 방법은 요즘과 같이 웹이 다양한 화면 크기에서 소비되고 유동형(fluid)이나 반응형(responsive) 웹디자인이 대세인 상황에서는 적용이 좀 난감해지는데요.\n왜냐하면 부모 요소의 폭이 변함에 따라서 <code>-</code> 기호를 찍어야하는 지점에 계속해서 달라져야하기 때문입니다.</p>\n<h2 id=\"overflow-wrap-속성\" style=\"position:relative;\"><a href=\"#overflow-wrap-%EC%86%8D%EC%84%B1\" aria-label=\"overflow wrap 속성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>overflow-wrap 속성</h2>\n<p>자 그럼 지금부터 CSS를 이용해서 삐져나오는 영단어를 좀 더 근본적으로 해결할 수 있는지 알아볼까요?</p>\n<p>첫 번째 방법은 부모 요소의 <code>overflow-wrap</code> 속성을 <code>break-word</code>로 스타일해주는 것인데요.\n이렇게 해주면 부모 요소의 폭이 부족해서 영단어가 옆으로 삐져나와야하는 상황에서 말그대로 break word, 즉 단어를 쪼개줍니다.</p>\n<iframe height=\"400\" style=\"width: 100%;\" scrolling=\"no\" title=\"css-long-words-overflow-wrap\" src=\"https://codepen.io/daleseo/embed/jOvwRvg?default-tab=css%2Cresult\" frameborder=\"no\" loading=\"lazy\" allowtransparency=\"true\" allowfullscreen=\"true\">\n  See the Pen <a href=\"https://codepen.io/daleseo/pen/jOvwRvg\">\n  css-long-words-overflow-wrap</a> by Dale Seo (<a href=\"https://codepen.io/daleseo\">@daleseo</a>)\n  on <a href=\"https://codepen.io\">CodePen</a>.\n</iframe>\n<p>참고로 <code>overflow-wrap</code> 속성 대신에 <code>word-wrap</code> 속성을 사용해도 동일한 효과를 얻을 수 있는데요.\nCSS에서 공식적으로 속성의 이름이 <code>word-wrap</code>에서 <code>overflow-wrap</code>으로 바뀌었으므로 가급적 <code>overflow-wrap</code>을 사용하시기를 권장드립니다.</p>\n<h2 id=\"hyphens-속성\" style=\"position:relative;\"><a href=\"#hyphens-%EC%86%8D%EC%84%B1\" aria-label=\"hyphens 속성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>hyphens 속성</h2>\n<p>만약에 영어에서 줄바꿈을 일으킬 수 있는 <code>-</code> 기호를 개발자가 일일이 직접 추가하지 않고 자동으로 알아서 추가되면 얼마나 행복할까요? 😇</p>\n<p>CSS에는 이 것을 가능케하는 속성이 바로 <code>hyphens</code> 인데요.\n이 속성을 <code>auto</code>로 설정해주면 영단어가 삐져나오지 않도록 마법처럼 적절한 위치에 <code>-</code> 기호가 붙게 됩니다.</p>\n<iframe height=\"450\" style=\"width: 100%;\" scrolling=\"no\" title=\"css-long-words-hyphens\" src=\"https://codepen.io/daleseo/embed/BaOZeaE?default-tab=css%2Cresult\" frameborder=\"no\" loading=\"lazy\" allowtransparency=\"true\" allowfullscreen=\"true\">\n  See the Pen <a href=\"https://codepen.io/daleseo/pen/BaOZeaE\">\n  css-long-words-hyphens</a> by Dale Seo (<a href=\"https://codepen.io/daleseo\">@daleseo</a>)\n  on <a href=\"https://codepen.io\">CodePen</a>.\n</iframe>\n<p>참 편리한 기능이기는 한데 안타깝게도 아직 브라우저마다 약간씩 다르게 지원하고 있어서 상용 웹사이트에서 100% 의존하기에는 무리가 있는데요.\n보통 지원하지 않는 브라우저를 대비해 본 포스팅에서 소개해드리는 다른 방법과 섞어서 쓰는 경우가 많은 것 같습니다.</p>\n<h2 id=\"word-break-속성\" style=\"position:relative;\"><a href=\"#word-break-%EC%86%8D%EC%84%B1\" aria-label=\"word break 속성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>word-break 속성</h2>\n<p>이쯤에서 이러한 생각을 하시는 분이 있으실 것 같아요.\n영어도 한국어처럼 단어의 중간에서 줄바꿈이 일어나면 되지 않나?</p>\n<p>CSS의 <code>word-break</code> 속성을 <code>break-all</code>로 설정해주면 그러한 효과를 낼 수 있는데요.</p>\n<iframe height=\"400\" style=\"width: 100%;\" scrolling=\"no\" title=\"css-long-words-word-break\" src=\"https://codepen.io/daleseo/embed/zYJzQjR?default-tab=css%2Cresult\" frameborder=\"no\" loading=\"lazy\" allowtransparency=\"true\" allowfullscreen=\"true\">\n  See the Pen <a href=\"https://codepen.io/daleseo/pen/zYJzQjR\">\n  css-long-words-word-break</a> by Dale Seo (<a href=\"https://codepen.io/daleseo\">@daleseo</a>)\n  on <a href=\"https://codepen.io\">CodePen</a>.\n</iframe>\n<p>이 방법은 한국인 입장에서는 큰 문제가 없어보이지만 영어 사용자 입장에서는 적절하지 않은 사용자 경험이 될 수 있기 때문에 주의가 필요합니다.\n문화적 차이일 수도 있지만 활자 매체든 디지털 매체든 영어에서는 공백 기호나 <code>-</code> 기호가 없는 지점에서 줄바꿈이 일어나면 어색하게 느껴진다고 합니다.</p>\n<h2 id=\"text-overflow-속성\" style=\"position:relative;\"><a href=\"#text-overflow-%EC%86%8D%EC%84%B1\" aria-label=\"text overflow 속성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>text-overflow 속성</h2>\n<p>마지막으로 소개해드릴 싶은 방법은 바로 <code>text-overflow</code> 속성을 <code>ellipsis</code>로 설정해주는 것인데요.\n이렇게 스타일을 해주면 삐져나오는 부분이 말줌임 기호인 <code>...</code>으로 대체가 됩니다.</p>\n<iframe height=\"300\" style=\"width: 100%;\" scrolling=\"no\" title=\"css-long-words-text-overflow\" src=\"https://codepen.io/daleseo/embed/QWVgRQE?default-tab=css%2Cresult\" frameborder=\"no\" loading=\"lazy\" allowtransparency=\"true\" allowfullscreen=\"true\">\n  See the Pen <a href=\"https://codepen.io/daleseo/pen/QWVgRQE\">\n  css-long-words-text-overflow</a> by Dale Seo (<a href=\"https://codepen.io/daleseo\">@daleseo</a>)\n  on <a href=\"https://codepen.io\">CodePen</a>.\n</iframe>\n<p>이 방법을 사용할 때 주의할 부분은 툴팁(tooltip)과 같은 보조 UI를 사용하여 줄여진 부분을 끝까지 볼 수 있도록 해줘야 한다는 것입니다.\n위 예제에서는 간단하게 HTML의 <code>title</code> 속성을 사용하여 마우스를 올렸을 때 전체 단어 또는 URL이 뜨도록 하였습니다.</p>\n<h2 id=\"마치면서\" style=\"position:relative;\"><a href=\"#%EB%A7%88%EC%B9%98%EB%A9%B4%EC%84%9C\" aria-label=\"마치면서 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>마치면서</h2>\n<p>지금까지 부모 요소의 폭이 충분하지 않아서 밖으로 삐져나오게 되는 영단어나 URL을 어떻게 처리할 수 있는지에 대해서 실습을 통해서 살펴보았습니다.\n본 포스팅에서 다룬 각 속성에 대해서 좀 더 공부하고 싶으신 분들은 아래 MDN 문서를 참고하시면 도움이 되실 것 같습니다.</p>\n<ul>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/overflow-wrap\">https://developer.mozilla.org/en-US/docs/Web/CSS/overflow-wrap</a></li>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/hyphens\">https://developer.mozilla.org/en-US/docs/Web/CSS/hyphens</a></li>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/word-break\">https://developer.mozilla.org/en-US/docs/Web/CSS/word-break</a></li>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/text-overflow\">https://developer.mozilla.org/en-US/docs/Web/CSS/text-overflow</a></li>\n</ul>","timeToRead":4,"fields":{"slug":"/css-long-words/","tags":["HTML","CSS","overflow","shy","overflow-wrap","hyphens","word-break","text-overflow"]},"frontmatter":{"title":"부모 요소 밖으로 삐져나오는 긴 영단어 처리법","date":"Mar 6, 2023"}},"next":{"fields":{"slug":"/prisma/"},"frontmatter":{"title":"Prisma 처음 시작하기"}}}},"staticQueryHashes":["2168229929","2362167539","3056348342"]}