{"componentChunkName":"component---src-templates-detail-template-jsx","path":"/tailwind/","result":{"pageContext":{"previous":{"fields":{"slug":"/tailwind-play/"},"frontmatter":{"title":"Play CDN으로 간편하게 Tailwind 시작하기"}},"node":{"html":"<p>Tailwind는 최근 웹 개발 분야에서 상당히 인기를 끌고 있는 차세대 CSS 프레임워크인데요.\n워낙 호볼호가 많이 갈리다보니 개발자 커뮤니티에서 단골 논쟁거리가 되기도 합니다.</p>\n<p>Tailwind에 대한 첫 번째 포스팅으로 이번 글에서는 Tailwind에 대한 기본 개념과 기존에 우리가 스타일링해온 방식과 비교해서 무엇이 다른지에 대해서 간략하게 알아보겟습니다.</p>\n<h2 id=\"tailwind란\" style=\"position:relative;\"><a href=\"#tailwind%EB%9E%80\" aria-label=\"tailwind란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tailwind란?</h2>\n<p>Tailwind는 쉽게 말해 엄청나게 많은 유틸리티(utility) 클래스로 이루어진 CSS 프레임워크입니다.\nTailwind가 제공하는 유틸리티 클래스들을 다양하게 조합하면 추가적인 CSS 코드 작성없이 단순히 HTML 요소의 <code>class</code> 속성에 설정해주는 것만으로도 스타일링이 가능하게 됩니다.</p>\n<blockquote>\n<p>좀 더 기술적으로 들어가면 Tailwind는 PostCSS의 플러그인(plug-in)이기도 한데요. 이 부분에 대해서는 추후에 Tailwind를 설정하는 방법을 다루는 포스팅에서 자세히 다루면 좋을 것 같습니다.</p>\n</blockquote>\n<p>여기서 유틸리티 클래스란 아래와 같이 딱 한 가지 일만 하는 매우 적은 양의 CSS 코드를 담고 있는 클래스를 뜻하는데요.\n보통 유틸리티 클래스를 단독으로 쓰기 보다는 여러 개의 유틸리티 클래스를 함께 사용해야지 의미있는 스타일링을 할 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.rounded</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">border-radius</span><span class=\"token punctuation\">:</span> 0.25rem<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.bg-red-500</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> <span class=\"token function\">rgb</span><span class=\"token punctuation\">(</span>239 68 68<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.bg-blue-500</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> <span class=\"token function\">rgb</span><span class=\"token punctuation\">(</span>59 130 246<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.px-4</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">padding-left</span><span class=\"token punctuation\">:</span> 1rem<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">padding-right</span><span class=\"token punctuation\">:</span> 1rem<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.py-2</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">padding-top</span><span class=\"token punctuation\">:</span> 0.5rem<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">padding-bottom</span><span class=\"token punctuation\">:</span> 0.5rem<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.font-bold</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">font-weight</span><span class=\"token punctuation\">:</span> 700<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.text-white</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> <span class=\"token function\">rgb</span><span class=\"token punctuation\">(</span>255 255 255<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.hover\\:bg-blue-600:hover</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> <span class=\"token function\">rgb</span><span class=\"token punctuation\">(</span>37 99 235<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.hover\\:bg-red-600:hover</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> <span class=\"token function\">rgb</span><span class=\"token punctuation\">(</span>220 38 38<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>따라서 Tailwind를 사용할 때는 보통 <code>class</code> 속성에 여러 유틸리티 클래스를 나열하게 됩니다.\n예를 들어 위에 있는 유틸리티 클래스를 조합해서 다음과 같이 Bootstrap과 유사한 Primary 버튼과 Danger 버큰을 만들 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span>\n  <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>rounded bg-blue-500 px-4 py-2 font-bold text-white hover:bg-blue-600<span class=\"token punctuation\">\"</span></span>\n<span class=\"token punctuation\">></span></span>\n  Primary\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span>\n  <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>rounded bg-red-500 px-4 py-2 font-bold text-white hover:bg-red-600<span class=\"token punctuation\">\"</span></span>\n<span class=\"token punctuation\">></span></span>\n  Danger\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<iframe height=\"300\" style=\"width: 100%;\" scrolling=\"no\" title=\"tailwind-bootstrap-buttons\" src=\"https://codepen.io/daleseo/embed/zYmPOEa?default-tab=html%2Cresult\" frameborder=\"no\" loading=\"lazy\" allowtransparency=\"true\" allowfullscreen=\"true\">\n  See the Pen <a href=\"https://codepen.io/daleseo/pen/zYmPOEa\">\n  tailwind</a> by Dale Seo (<a href=\"https://codepen.io/daleseo\">@daleseo</a>)\n  on <a href=\"https://codepen.io\">CodePen</a>.\n</iframe>\n<p>어떤가요? 굉장히 강력하죠!</p>\n<p>이렇게 Tailwind를 사용하면 미리 정의된 유틸리티 클래스를 자유롭게 조합하여 HTML 파일을 벗어나지 않고 빠르고 쉽게 스타일링을 할 수 있습니다.\n이를 통해 웹 개발을 할 때 CSS 스타일링에 소비하는 시간과 노력을 크게 줄일 수 있으며 개발자들을 클래스 작명에 대한 스트레스로 부터 해방시켜 줍니다.</p>\n<p>하지만 그의 대한 댓가로 물론 Tailwind에서 제공하는 유틸리티 클래스의 작명 관행에 대해서 어느 정도는 숙지하고 있어야 하겠지요?</p>\n<h2 id=\"기존-css-프레임워크랑-비교\" style=\"position:relative;\"><a href=\"#%EA%B8%B0%EC%A1%B4-css-%ED%94%84%EB%A0%88%EC%9E%84%EC%9B%8C%ED%81%AC%EB%9E%91-%EB%B9%84%EA%B5%90\" aria-label=\"기존 css 프레임워크랑 비교 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>기존 CSS 프레임워크랑 비교</h2>\n<p>사실 유틸리티 클래스는 완전히 새로운 개념은 아니며 Bootstrap과 같은 기존에 많이 사용되던 CSS 프레임워크에서도 <code>float-right</code>와 같은 유틸리티 클래스를 제공해왔습니다.</p>\n<p>큰 차이점이라면 Tailwind에서는 완전히 유틸리티 클래스를 중심으로 설계되어 있는 반면에,\n기존의 CSS 라이브러에서는 <code>button</code>이나 <code>card</code>와 같은 컴포넌트 수준의 클래스가 주가 되고, 유틸리티 클래스를 보조적인 도구로 활용됩니다.</p>\n<p>Bootstrap이나 Material과 같은 기존에 많이 사용되던 CSS 프레임워크를 써보신 분이라면 Tailwind를 사용할 때 너무 많은 클래스가 필요하다는 인상을 받게 되는데요.\n예를 들어, 위에서 Tailwind로 구현한 버튼을 대신 Bootstrap을 썼더라면 각 버튼에 2개의 클래스로 충분했을테니까요.</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>btn btn-primary<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Primary<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>btn btn-danger<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Danger<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>분명 더 많은 클래스를 사용하고 배워야 한다는 부분이 Tailwind의 단점으로 느껴지기는 하지만 이를 통해서 Tailwind는 기존에 CSS 프레임워크에서는 보기 힘들었던 엄청난 유연성과 확장성을 제공하게 되는데요.\n예를 들어, Tailwind의 유틸리티 클래스들을 살짝 다르게 조합하면 Material과 비슷한 버튼도 어렵지 않게 스타일할 수 있으니까요.</p>\n<iframe height=\"300\" style=\"width: 100%;\" scrolling=\"no\" title=\"tailwind-mui-buttons\" src=\"https://codepen.io/daleseo/embed/mdzqREr?default-tab=html%2Cresult\" frameborder=\"no\" loading=\"lazy\" allowtransparency=\"true\" allowfullscreen=\"true\">\n  See the Pen <a href=\"https://codepen.io/daleseo/pen/mdzqREr\">\n  tailwind-mui-buttons</a> by Dale Seo (<a href=\"https://codepen.io/daleseo\">@daleseo</a>)\n  on <a href=\"https://codepen.io\">CodePen</a>.\n</iframe>\n<p>Bootstrap이나 Material과 같은 전통적인 CSS 프레임워크를 사용한 웹사이트는 아무리 사용자화를 해도 쉽게 티가 나는 경우가 많은데요.\n반면에 Tailwind는 아예 처음부터 자유롭게 확장과 사용자화가 가능하도록 설계되어 있으며 다양한 플러그인을 제공하고 때문에 개성있는 웹사이트를 만드는데 유리합니다.</p>\n<h2 id=\"css-인라인-스타일과-비교\" style=\"position:relative;\"><a href=\"#css-%EC%9D%B8%EB%9D%BC%EC%9D%B8-%EC%8A%A4%ED%83%80%EC%9D%BC%EA%B3%BC-%EB%B9%84%EA%B5%90\" aria-label=\"css 인라인 스타일과 비교 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>CSS 인라인 스타일과 비교</h2>\n<p>Tailwind에서 제시하는 스타일링 방식이 CSS에서 기존에 인라인(inline) 방식으로 스타일링하는 것과 크게 다르지 않다고 생각할 수 있는데요.</p>\n<p>예를 들어 Tailwind의 유틸리티 클래스를 사용해서 다음과 같이 작성할 코드를,</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>rounded bg-blue-500 px-4 py-2<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Primary<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>코드가 다소 길어지기는 해도 인라인 CSS를 이용해서도 충분히 작성할 수도 있을 것입니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span>\n  <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value css language-css\"><span class=\"token property\">border-radius</span><span class=\"token punctuation\">:</span> 0.25rem<span class=\"token punctuation\">;</span> <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> <span class=\"token function\">rgb</span><span class=\"token punctuation\">(</span>59 130 246<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token property\">padding-top</span><span class=\"token punctuation\">:</span> 0.5rem<span class=\"token punctuation\">;</span> <span class=\"token property\">padding-bottom</span><span class=\"token punctuation\">:</span> 0.5rem<span class=\"token punctuation\">;</span> <span class=\"token property\">padding-left</span><span class=\"token punctuation\">:</span> 1rem<span class=\"token punctuation\">;</span> <span class=\"token property\">padding-right</span><span class=\"token punctuation\">:</span> 1rem<span class=\"token punctuation\">;</span> </span><span class=\"token punctuation\">\"</span></span></span>\n<span class=\"token punctuation\">></span></span>\n  Primary\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>하지만 CSS 인라인 스타일링에는 간과하기 쉬운 치명적인 제약사항이 좀 있는데요.</p>\n<p>첫 번째로 <code>:hover</code>, <code>:focus</code>와 같은 의사 클래스(pseudo class)를 쓸 수 없으며, <code>::before</code>, <code>::after</code>와 같은 의사 요소(pseudo element)를 쑬 수 없습니다.\n두 번째, 미디어 쿼리를 사용할 수 없어서 반응형(responsive) 디자인을 구현할 수 없습니다.</p>\n<p>뿐만 아니라 Tailwind의 유틸리티 클래스는 여러 HTML 요소에 걸쳐서 공유되는 반면에, 인라인 CSS는 하나의 HTML 요소에서만 국한되므로 클라이언트가 내려받아야하는 CSS 코드의 양을 최소화하는데 불리합니다.</p>\n<h2 id=\"tailwind과-관련된-논쟁\" style=\"position:relative;\"><a href=\"#tailwind%EA%B3%BC-%EA%B4%80%EB%A0%A8%EB%90%9C-%EB%85%BC%EC%9F%81\" aria-label=\"tailwind과 관련된 논쟁 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tailwind과 관련된 논쟁</h2>\n<p>트위터와 같이 개발자들이 많이 사용하는 SNS를 보면 Tailwind를 좋아하는 부류와 싫어하는 부류 간에 끊없이 이어지는 논쟁을 어렵지 않게 접할 수 있는데요.</p>\n<p>보통 Tailwind를 좋아하는 개발자들은 개발 생생성 측면에서 Tailwind가 효율적이고 빠르게 디자인을 구현할 수 있도록 도와준다는 점을 강조합니다.\n또한 스타일을 변경하거나 수정하기도 쉬워서 유지 보수성 측면에서도 Tailwind가 우수하다고 말합니다.</p>\n<p>반면에 Tailwind를 싫어하는 개발자들은 유틸리티 클래스를 과도하게 사용하는 것이 코드의 가독성을 떨어뜨리고, 대규모 프로젝트에서는 오히려 유지 보수성을 떨어뜨린다는 점을 지적합니다.</p>\n<p>그런데 부정적인 의견들은 주로 Tailwind를 많이 써보시지 않은 분들로 부터 나온다는 것 같습니다.\n실제로 Tailwind를 실제로 써보신 분들 중에서는 기존의 스타일링 방식으로 다시는 돌아가지 못할 것 같다고 말씀하시는 분들도 보게 되거든요.</p>\n<p>또 다른 재미있는 논쟁 거리는 CSS를 제대로 학습하지 않은 상태에서 Tailwind에 지나치게 의존하게 되면 CSS 바보가 될 수 있다는 건데요.\n어느 정도 일리가 있는 말이지만 Tailwind를 공부하면서 CSS에 대해서 더 많이 배우게 되었다고 하시는 분들도 많아서 이것도 케바케있는 것 같습니다.</p>\n<p>따라서 Tailwind를 활용한 개발을 고민 중이라면, 이러한 논쟁들에 너무 휘둘리지 말고 자신의 프로젝트에 적합한 도구인지 따져보는 것이 중요하겠습니다.\n좋든 싫든 Tailwind가 주류 CSS 프레임워크로 자리 잡아가고 있는 것 만큼은 분명하기 때문에 개인적으로는 섣불리 비판적으로 보기 전에 우선 Tailwind를 어느정도 경험해보는 것도 나쁘지 않을 것 같다는 생각이 듭니다.</p>\n<h2 id=\"마치면서\" style=\"position:relative;\"><a href=\"#%EB%A7%88%EC%B9%98%EB%A9%B4%EC%84%9C\" aria-label=\"마치면서 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>마치면서</h2>\n<p>본 포스팅이 Tailwind에 대한 이해도를 높이고 오해를 줄이는데 도움이 되었기를 바랍니다.\n다음 포스팅부터는 Tailwind를 어떻게 사용하는지에 대해서 좀 더 구체적으로 다뤄보도록 하겠습니다.</p>\n<blockquote>\n<p>Tailwind에 관련 포스팅은 <a href=\"http://localhost:8000/?tag=Tailwind\">Tailwind에 태그</a>를 통해서 쉽게 만나보세요!</p>\n</blockquote>","timeToRead":5,"fields":{"slug":"/tailwind/","tags":["CSS","HTML","framework","Tailwind"]},"frontmatter":{"title":"Tailwind: 스타일링 시간을 단축하는 CSS 프레임워크","date":"May 4, 2023"}},"next":{"fields":{"slug":"/nanoid/"},"frontmatter":{"title":"NanoID: 작고 빠른 고유 식별자 생성기"}}}},"staticQueryHashes":["2168229929","2362167539","3056348342"]}