{"componentChunkName":"component---src-templates-detail-template-jsx","path":"/css-white-space/","result":{"pageContext":{"previous":{"fields":{"slug":"/netlify-custom-domain/"},"frontmatter":{"title":"Netlify에서 커스텀 도메인 사용과 DNS 설정"}},"node":{"html":"<p>많은 웹 개발자분들이 HTML 문서 내에서는 띄어쓰기를 여러 번 하더라도 한 번만 띄어쓰기가 되고, 들여쓰기나 줄바꿈이 무시되는 현상을 한번 쯤은 경험하셨을텐데요.\n사실 이러한 HTML 요소 내의 공백 처리 방식은 CSS의 <code>white-space</code> 속성을 이용하여 쉽게 변경할 수가 있다는 사실을 알고 계셨나요?</p>\n<h2 id=\"공백-문자\" style=\"position:relative;\"><a href=\"#%EA%B3%B5%EB%B0%B1-%EB%AC%B8%EC%9E%90\" aria-label=\"공백 문자 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>공백 문자</h2>\n<p>우선 HTML에서 어떤 문자를 이용해서 공백을 나타낼 수 있는지 이해할 필요가 있는데요.\n바로 띄어쓰기(<code>\\s</code>), 들여쓰기(<code>\\t</code>), 줄바꿈(<code>\\n</code>)이 대표적으로 공백을 나타내는 문자지요?</p>\n<p>이러한 문자들을 아무리 연속해서 많이 사용하더라도 HTML에서는 다음과 같이 그냥 하나의 띄어쓰기로 처리가 되는 경우가 많습니다.</p>\n<iframe height=\"450\" style=\"width: 100%;\" scrolling=\"no\" title=\"css-white-space-1\" src=\"https://codepen.io/daleseo/embed/rNZZgPG?default-tab=html%2Cresult\" frameborder=\"no\" loading=\"lazy\" allowtransparency=\"true\" allowfullscreen=\"true\">\n  See the Pen <a href=\"https://codepen.io/daleseo/pen/rNZZgPG\">\n  css-white-space-1</a> by Dale Seo (<a href=\"https://codepen.io/daleseo\">@daleseo</a>)\n  on <a href=\"https://codepen.io\">CodePen</a>.\n</iframe>\n<h2 id=\"normal\" style=\"position:relative;\"><a href=\"#normal\" aria-label=\"normal permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>normal</h2>\n<p>위와 같은 현상이 발생하는 이유는 <code>white-space</code> 속성은 별도로 지정해주지 않으면 기본적으로 <code>normal</code>이 적용이되기 때문인데요.\n<code>white-space</code> 속성이 <code>normal</code>로 설정된 요소 안에서는 연속된 띄어쓰기, 들여쓰기 그리고 줄바꿈 문자가 모두 무시가 됩니다.</p>\n<p>뿐만 아니라 <code>normal</code> 속성값은 텍스트가 너무 길어서 부모 요소의 가로폭을 넘어갈 때는 자동으로 줄바꿈을 해주는데요.\n이렇게 줄바꿈은 자동으로만 일어나며 줄바꿈 문자를 이용해서 원하는 위치에서 수동으로 줄바꿈을 할 수 있는 방법은 없습니다.\n또한 (<code>&#x26;nbsp;</code>와 같은 특수 문자를 쓰는 편법을 동원하지 않는 이상) 두 칸이상 연속으로 띄어쓰기를 하거나 들여쓰기를 하는 것도 불가능합니다.</p>\n<iframe height=\"300\" style=\"width: 100%;\" scrolling=\"no\" title=\"css-white-space-normal\" src=\"https://codepen.io/daleseo/embed/abaRvGX?default-tab=css%2Cresult\" frameborder=\"no\" loading=\"lazy\" allowtransparency=\"true\" allowfullscreen=\"true\">\n  See the Pen <a href=\"https://codepen.io/daleseo/pen/abaRvGX\">\n  css-white-space-normal</a> by Dale Seo (<a href=\"https://codepen.io/daleseo\">@daleseo</a>)\n  on <a href=\"https://codepen.io\">CodePen</a>.\n</iframe>\n<h2 id=\"nowrap\" style=\"position:relative;\"><a href=\"#nowrap\" aria-label=\"nowrap permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>nowrap</h2>\n<p>텍스트가 길어서 부모 요소 안의 가로폭을 넘어가더라도 자동으로 줄바꿈이 일어나게 하고 싶지 않은 경우가 있는데요.\n이럴 때는 <code>white-space</code> 속성을 <code>nowrap</code>으로 설정해주면 됩니다.</p>\n<p>자동 줄바꿈이 일어난다는 부분을 제외하고는 <code>nowrap</code> 설정값은 기본 설정값인 <code>normal</code>과 동일하게 작동하는데요.\n연속된 띄어쓰기, 들여쓰기 그리고 줄바꿈 문자를 모두 무시하고 띄어쓰기 한 번으로 처리합니다.</p>\n<iframe height=\"300\" style=\"width: 100%;\" scrolling=\"no\" title=\"css-white-space-nowrap\" src=\"https://codepen.io/daleseo/embed/MWqPaZX?default-tab=css%2Cresult\" frameborder=\"no\" loading=\"lazy\" allowtransparency=\"true\" allowfullscreen=\"true\">\n  See the Pen <a href=\"https://codepen.io/daleseo/pen/MWqPaZX\">\n  css-white-space-nowrap</a> by Dale Seo (<a href=\"https://codepen.io/daleseo\">@daleseo</a>)\n  on <a href=\"https://codepen.io\">CodePen</a>.\n</iframe>\n<p>대부분 경우에는 <code>overflow</code> 속성을 <code>hidden</code>으로 설정하여 부모 요소 밖으로 빠져나오는 텍스트를 숨기는데요.\n사용자가 혼란스럽지 않도록 <code>text-overflow</code> 속성을 사용하여 말줌임 기호인 <code>...</code>를 보여주는 경우도 많습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">div:nth-of-type(3)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">white-space</span><span class=\"token punctuation\">:</span> nowrap<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">overflow</span><span class=\"token punctuation\">:</span> hidden<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">text-overflow</span><span class=\"token punctuation\">:</span> ellipsis<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>또 다른 대안으로 사용자가 가로 스크롤바로 끝까지 텍스트를 볼 수 있도록 해줄 수도 있겠습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">div:nth-of-type(4)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">white-space</span><span class=\"token punctuation\">:</span> nowrap<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">overflow</span><span class=\"token punctuation\">:</span> auto<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<blockquote>\n<p>CSS의 overflow 속성에 대한 자세한 내용은 <a href=\"/css-overflow/\">관련 포스팅</a>을 참고 바랍니다.</p>\n</blockquote>\n<h2 id=\"pre\" style=\"position:relative;\"><a href=\"#pre\" aria-label=\"pre permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>pre</h2>\n<p>텍스트를 HTML 문서 안에 붙여넣은 그대로 나타나게 하고 싶다면 <code>white-space</code> 속성을 <code>pre</code>로 설정하면 되는데요.\n보통 웹페이지 상에서 들여쓰기와 줄바꿈이 들어있는 소스 코드의 일부를 있는 그대로 보여주고 싶을 때 유용합니다.</p>\n<p><code>pre</code> 설정값은 마치 HTML의 <code>&#x3C;pre></code> 요소를 사용하는 것처럼 연속된 띄어쓰기와 들여쓰기, 줄바꿈이 있는 그대로 유지됩니다.\n그래서 다음과 같이 자바스크립트 코드를 웹에서도 효과적으로 보여줄 수 있습니다.</p>\n<iframe height=\"300\" style=\"width: 100%;\" scrolling=\"no\" title=\"css-white-space-pre\" src=\"https://codepen.io/daleseo/embed/KKxGVNG?default-tab=css%2Cresult\" frameborder=\"no\" loading=\"lazy\" allowtransparency=\"true\" allowfullscreen=\"true\">\n  See the Pen <a href=\"https://codepen.io/daleseo/pen/KKxGVNG\">\n  css-white-space-pre</a> by Dale Seo (<a href=\"https://codepen.io/daleseo\">@daleseo</a>)\n  on <a href=\"https://codepen.io\">CodePen</a>.\n</iframe>\n<p>단, 텍스트 안에 긴 행이 있다면 <code>nowrap</code> 설정값처럼 해당 행은 부모 요소 밖으로 빠져나오게 되오니 주의가 필요한데요.\n이를 방지하기 위해서 <code>overflow</code> 속성을 <code>auto</code>로 설정하여 좌우 방향으로 스크롤바가 자동으로 나타나게 해주면 좋습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">div:nth-of-type(2)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">white-space</span><span class=\"token punctuation\">:</span> pre<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">overflow</span><span class=\"token punctuation\">:</span> auto<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"pre-wrap\" style=\"position:relative;\"><a href=\"#pre-wrap\" aria-label=\"pre wrap permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>pre-wrap</h2>\n<p><code>pre-wrap</code> 속성값은 <code>pre</code> 속성값과 동일하게 연속된 띄어쓰기와 들여쓰기, 줄바꿈을 있는 그대로 보존해주는데요.\n유일한 차이점은 텍스트 안에 긴 행이 있을 때 해당 행에서 자동으로 줄바꿈이 일어납니다.</p>\n<p>따라서 좌우 방향으로 스크롤바가 없어도 텍스트를 짤리않게 보여줄 수 있다는 이점이 있습니다.</p>\n<iframe height=\"300\" style=\"width: 100%;\" scrolling=\"no\" title=\"css-white-space-pre-wrap\" src=\"https://codepen.io/daleseo/embed/oNPaLxm?default-tab=html%2Cresult\" frameborder=\"no\" loading=\"lazy\" allowtransparency=\"true\" allowfullscreen=\"true\">\n  See the Pen <a href=\"https://codepen.io/daleseo/pen/oNPaLxm\">\n  css-white-space-pre-wrap</a> by Dale Seo (<a href=\"https://codepen.io/daleseo\">@daleseo</a>)\n  on <a href=\"https://codepen.io\">CodePen</a>.\n</iframe>\n<h2 id=\"pre-line\" style=\"position:relative;\"><a href=\"#pre-line\" aria-label=\"pre line permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>pre-line</h2>\n<p><code>pre-line</code> 속성값은 말 그대로 라인(line), 즉 줄바꿈 문자만 있는 그대로 처리해주고 연속된 띄어쓰기와 들여쓰기는 무시하고 모두 띄어쓰기 한 번으로 처리합니다.\n또한 <code>pre-wrap</code> 속성값처럼 텍스트 안에 긴 행이 있을 때 해당 행이 부모 요소 밖으로 빠져나오지 않습니다.</p>\n<p>다시 말해서, <code>pre-line</code> 속성값은 줄바꿈만 그대로 유지하면서 연속된 띄어쓰기와 들여쓰기를 무시하고 싶을 때 쓸 수 있는데요.\n활용 사례가 그리 많지는 않은 것 같습니다.</p>\n<iframe height=\"300\" style=\"width: 100%;\" scrolling=\"no\" title=\"css-white-space-pre-line\" src=\"https://codepen.io/daleseo/embed/vYzVKgo?default-tab=html%2Cresult\" frameborder=\"no\" loading=\"lazy\" allowtransparency=\"true\" allowfullscreen=\"true\">\n  See the Pen <a href=\"https://codepen.io/daleseo/pen/vYzVKgo\">\n  css-white-space-pre-line</a> by Dale Seo (<a href=\"https://codepen.io/daleseo\">@daleseo</a>)\n  on <a href=\"https://codepen.io\">CodePen</a>.\n</iframe>\n<h2 id=\"break-spaces\" style=\"position:relative;\"><a href=\"#break-spaces\" aria-label=\"break spaces permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>break-spaces</h2>\n<p>마지막으로 <code>break-spaces</code> 속성값은 <code>pre-wrap</code>이랑 거의 비슷하면서도 미묘하게 다르게 동작하는데요.\n실제 프로젝트에서 쓰이는 경우를 거의 못 봤기 때문에 본 포스팅에서는 자세히 다루지 않도록 하겠습니다.</p>\n<p>이 속성값에 대해서 공부가 필요하신 분들은 <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/white-space\">MDN 공식 문서</a>를 읽어 보시기를 추천드립니다.</p>\n<h2 id=\"전체-코드\" style=\"position:relative;\"><a href=\"#%EC%A0%84%EC%B2%B4-%EC%BD%94%EB%93%9C\" aria-label=\"전체 코드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>전체 코드</h2>\n<p>아래에 <code>white-space</code> 속성값을 다양하게 적용하여 CSS 코드를 한번 스타일해보았습니다.\n모든 속성값이 어떻게 동작한느지 한 눈에 비교해보면 좀 더 도움이 되실 것 같습니다 😄</p>\n<iframe height=\"880\" style=\"width: 100%;\" scrolling=\"no\" title=\"css-white-space\" src=\"https://codepen.io/daleseo/embed/qBMMvwW?default-tab=css%2Cresult\" frameborder=\"no\" loading=\"lazy\" allowtransparency=\"true\" allowfullscreen=\"true\">\n  See the Pen <a href=\"https://codepen.io/daleseo/pen/qBMMvwW\">\n  css-white-space</a> by Dale Seo (<a href=\"https://codepen.io/daleseo\">@daleseo</a>)\n  on <a href=\"https://codepen.io\">CodePen</a>.\n</iframe>\n<h2 id=\"마치면서\" style=\"position:relative;\"><a href=\"#%EB%A7%88%EC%B9%98%EB%A9%B4%EC%84%9C\" aria-label=\"마치면서 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>마치면서</h2>\n<p>이상으로 CSS의 <code>white-space</code> 속성을 사용하여 HTML 요소 내의 공백을 어떻게 처리하는지에 대해서 살펴보았습니다.\n이 속성을 적절히 활용하셔서 텍스트 내에서 일어나는 띄어쓰기, 들여쓰기, 줄바꿈을 자유자재로 다루실 수 있으셨으면 좋겠습니다.</p>\n<p>그 밖에 CSS에서 텍스트 스타일을 할 때 많이 쓰이는 속성에 대해서는 <a href=\"/css-typography/\">별도의 포스팅</a>에 정리를 해놨으니 참고 바랍니다.</p>","timeToRead":4,"fields":{"slug":"/css-white-space/","tags":["HTML","CSS","white-space"]},"frontmatter":{"title":"CSS의 white-space 속성 사용법","date":"Mar 21, 2023"}},"next":{"fields":{"slug":"/js-jwt/"},"frontmatter":{"title":"자바스크립트로 JWT 토큰을 발급하고 검증하기"}}}},"staticQueryHashes":["2168229929","2362167539","3056348342"]}