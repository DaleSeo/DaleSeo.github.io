{"componentChunkName":"component---src-templates-detail-template-jsx","path":"/python-filter/","result":{"pageContext":{"previous":{"fields":{"slug":"/python-functools-reduce/"},"frontmatter":{"title":"파이썬 reduce 함수 사용법"}},"node":{"html":"<div class=\"gatsby-resp-iframe-wrapper\" style=\"padding-bottom: 56.25%; position: relative; height: 0; overflow: hidden; \" > <iframe src=\"https://www.youtube.com/embed/Nr3s0Z3D3CU\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" allowfullscreen=\"\" style=\" position: absolute; top: 0; left: 0; width: 100%; height: 100%; \"></iframe> </div>\n<p>함수형 프로그래밍에서 데이터 필터링(filtering) 작업을 할 때 반복문 대신에 함수 호출로 처리하는 경우가 많은데요.\n이번 포스팅에서는 파이썬의 <code>filter()</code> 함수를 사용하여 특정 조건을 충족하는 요소만 추출하는 방법에 대해서 알아보겠습니다.</p>\n<h2 id=\"filter-내장-함수\" style=\"position:relative;\"><a href=\"#filter-%EB%82%B4%EC%9E%A5-%ED%95%A8%EC%88%98\" aria-label=\"filter 내장 함수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>filter 내장 함수</h2>\n<p>파이썬의 내장 함수인 <code>filter()</code>는 여러 개의 데이터로 부터 일부의 데이터만 추려낼 때 사용하는데요.\n따라서, 여러 개의 데이터를 담고 있는 리스트(list)나 튜플(tuple)을 대상으로 주로 사용하는 함수입니다.</p>\n<p>사용 방법은 매우 간단한데요. 기본 문법은 다음과 같습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token builtin\">filter</span><span class=\"token punctuation\">(</span>조건 함수<span class=\"token punctuation\">,</span> 순회 가능한 데이터<span class=\"token punctuation\">)</span></code></pre></div>\n<p><code>filter()</code> 함수는 두 번째 인자로 넘어온 데이터 중에서 첫 번째 인자로 넘어온 조건 함수를 만족하는 데이터만 찾아서 반환해줍니다.</p>\n<h2 id=\"실습-데이터-생성\" style=\"position:relative;\"><a href=\"#%EC%8B%A4%EC%8A%B5-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%83%9D%EC%84%B1\" aria-label=\"실습 데이터 생성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>실습 데이터 생성</h2>\n<p>간단한 실습을 위해서 파이썬 인터프리터에서 사용자 5명의 데이터를 사전(dictionary)의 형태로 생성 한 후에 리스트에 담아서 <code>users</code> 변수에 할당하겠습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> users <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span><span class=\"token string\">'mail'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'gregorythomas@gmail.com'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'name'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Brett Holland'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'gender'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'M'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>  <span class=\"token punctuation\">{</span><span class=\"token string\">'mail'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'hintoncynthia@hotmail.com'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'name'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Madison Martinez'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'gender'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'F'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>  <span class=\"token punctuation\">{</span><span class=\"token string\">'mail'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'wwagner@gmail.com'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'name'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Michael Jenkins'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'gender'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'M'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>  <span class=\"token punctuation\">{</span><span class=\"token string\">'mail'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'daniel79@gmail.com'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'name'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Karen Rodriguez'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'gender'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'F'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>  <span class=\"token punctuation\">{</span><span class=\"token string\">'mail'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'ujackson@gmail.com'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'name'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Amber Rhodes'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'gender'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'F'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span></code></pre></div>\n<h2 id=\"일반-함수로-필터링\" style=\"position:relative;\"><a href=\"#%EC%9D%BC%EB%B0%98-%ED%95%A8%EC%88%98%EB%A1%9C-%ED%95%84%ED%84%B0%EB%A7%81\" aria-label=\"일반 함수로 필터링 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>일반 함수로 필터링</h2>\n<p>그럼, 실습 데이터를 대상으로 <code>filter()</code> 함수를 사용해서 먼저 남성 사용자들만 추려내보겠습니다.</p>\n<p><code>filter()</code> 함수는 함수를 인자로 받기 때문에, <code>is_man()</code>이라는 함수를 먼저 작성합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">def</span> <span class=\"token function\">is_man</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">return</span> user<span class=\"token punctuation\">[</span><span class=\"token string\">\"gender\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string\">\"M\"</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></code></pre></div>\n<p>이제, <code>is_man()</code> 함수를 첫번째 인자로, <code>users</code> list를 두번째 인자로 던져서 <code>filter()</code> 함수를 호출합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">for</span> man <span class=\"token keyword\">in</span> <span class=\"token builtin\">filter</span><span class=\"token punctuation\">(</span>is_man<span class=\"token punctuation\">,</span> users<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>man<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token punctuation\">{</span><span class=\"token string\">'mail'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'gregorythomas@gmail.com'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'name'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Brett Holland'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'gender'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'M'</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">{</span><span class=\"token string\">'mail'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'wwagner@gmail.com'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'name'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Michael Jenkins'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'gender'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'M'</span><span class=\"token punctuation\">}</span></code></pre></div>\n<p>총 사용자 5명 중 남성 사용자 2명만 출력이 되었습니다!</p>\n<h2 id=\"람다-함수로-필터링\" style=\"position:relative;\"><a href=\"#%EB%9E%8C%EB%8B%A4-%ED%95%A8%EC%88%98%EB%A1%9C-%ED%95%84%ED%84%B0%EB%A7%81\" aria-label=\"람다 함수로 필터링 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>람다 함수로 필터링</h2>\n<p>조건 함수의 코드가 긴 경우에는 위와 같이 함수를 선언하는 것이 낫겠지만, 본 예제와 같이 코드가 짧은 경우에는 람다 함수를 사용해서 더욱 간단 명료한 코드를 짤 수 있습니다.</p>\n<p>예를 들어, 람다 함수를 이용해서 여성 사용자만 출력하는 코드를 작성해보겠습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">for</span> woman <span class=\"token keyword\">in</span> <span class=\"token builtin\">filter</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">lambda</span> u<span class=\"token punctuation\">:</span> u<span class=\"token punctuation\">[</span><span class=\"token string\">\"gender\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string\">\"F\"</span><span class=\"token punctuation\">,</span> users<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>woman<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token punctuation\">{</span><span class=\"token string\">'mail'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'hintoncynthia@hotmail.com'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'name'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Madison Martinez'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'gender'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'F'</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">{</span><span class=\"token string\">'mail'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'daniel79@gmail.com'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'name'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Karen Rodriguez'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'gender'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'F'</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">{</span><span class=\"token string\">'mail'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'ujackson@gmail.com'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'name'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Amber Rhodes'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'gender'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'F'</span><span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"결과-데이터-변환\" style=\"position:relative;\"><a href=\"#%EA%B2%B0%EA%B3%BC-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EB%B3%80%ED%99%98\" aria-label=\"결과 데이터 변환 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>결과 데이터 변환</h2>\n<p>지금까지는 <code>for</code> 루프를 사용하여 <code>filter()</code> 함수가 추출한 데이터를 콘솔에 출력했는데요.\n그런데 실제로 코딩을 하다보면 결과 데이터를 리스트나 튜플의 형태로 저장을 해야하는 경우가 많습니다.</p>\n<p>여기서, 많은 분들을 혼란스럽게 하는 부분이 있는데요. <code>filter()</code> 함수는 <code>filter</code> 타입으로 결과를 리턴한다는 점입니다.</p>\n<p>예를 들어, GMail을 이메일로 사용하는 사용자만 추려내는 <code>filter()</code> 함수의 결과를 출력해보면 다음과 같이 나올 것입니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token builtin\">filter</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">lambda</span> u<span class=\"token punctuation\">:</span> u<span class=\"token punctuation\">[</span><span class=\"token string\">\"mail\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>endswith<span class=\"token punctuation\">(</span><span class=\"token string\">\"@gmail.com\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> users<span class=\"token punctuation\">)</span>\n<span class=\"token operator\">&lt;</span><span class=\"token builtin\">filter</span> <span class=\"token builtin\">object</span> at <span class=\"token number\">0x11132f7c0</span><span class=\"token operator\">></span></code></pre></div>\n<p><code>filter()</code> 함수의 결과 값을 리스트로 변환하는 가장 쉬운 방법은 <code>list()</code> 내장 함수를 사용하는 것입니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">filter</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">lambda</span> u<span class=\"token punctuation\">:</span> u<span class=\"token punctuation\">[</span><span class=\"token string\">\"mail\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>endswith<span class=\"token punctuation\">(</span><span class=\"token string\">\"@gmail.com\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> users<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span><span class=\"token string\">'mail'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'gregorythomas@gmail.com'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'name'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Brett Holland'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'gender'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'M'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token string\">'mail'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'wwagner@gmail.com'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'name'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Michael Jenkins'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'gender'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'M'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token string\">'mail'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'daniel79@gmail.com'</span><span class=\"token punctuation\">,</span> 'name\n<span class=\"token string\">': '</span>Karen Rodriguez<span class=\"token string\">', '</span>gende<span class=\"token string\">r': '</span><span class=\"token string-interpolation\"><span class=\"token string\">F'}, {'</span></span>mail<span class=\"token string\">': '</span>ujackson@gmail<span class=\"token punctuation\">.</span>com<span class=\"token string\">', '</span>name<span class=\"token string\">': '</span>Amber Rhodes<span class=\"token string\">', '</span>gende<span class=\"token string\">r': '</span>F'<span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span></code></pre></div>\n<blockquote>\n<p>파이썬에서 가장 널리 사용되는 자료형인 리스트(list)에 대해서는 <a href=\"https://www.daleseo.com/python-list/\">관련 포스팅</a>을 참고바랍니다.</p>\n</blockquote>\n<p>비슷한 방식으로 <code>tuple()</code> 내장 함수를 사용하면 튜플로도 변환할 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token builtin\">tuple</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">filter</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">lambda</span> u<span class=\"token punctuation\">:</span> u<span class=\"token punctuation\">[</span><span class=\"token string\">\"mail\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>endswith<span class=\"token punctuation\">(</span><span class=\"token string\">\"@gmail.com\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> users<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token string\">'mail'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'gregorythomas@gmail.com'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'name'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Brett Holland'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'gender'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'M'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token string\">'mail'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'wwagner@gmail.com'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'name'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Michael Jenkins'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'gender'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'M'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token string\">'mail'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'daniel79@gmail.com'</span><span class=\"token punctuation\">,</span> 'name\n<span class=\"token string\">': '</span>Karen Rodriguez<span class=\"token string\">', '</span>gende<span class=\"token string\">r': '</span><span class=\"token string-interpolation\"><span class=\"token string\">F'}, {'</span></span>mail<span class=\"token string\">': '</span>ujackson@gmail<span class=\"token punctuation\">.</span>com<span class=\"token string\">', '</span>name<span class=\"token string\">': '</span>Amber Rhodes<span class=\"token string\">', '</span>gende<span class=\"token string\">r': '</span>F'<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<blockquote>\n<p>여러 개의 데이터를 저장하기 위해서 사용되는 리스트와 튜플의 차이점에 대해서는 <a href=\"/python-immutable-datatypes\">관련 포스팅</a>를 참고 바랍니다.</p>\n</blockquote>\n<h2 id=\"list-comprehension\" style=\"position:relative;\"><a href=\"#list-comprehension\" aria-label=\"list comprehension permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>List Comprehension</h2>\n<p>사실 파이썬에서는 <code>filter()</code> 함수를 사용하는 것보다 좀 더 파이썬답게(pythonic) 데이터를 추려내는 방법이 있습니다.\n바로 파이썬의 🌼이라고 불리는 list comprehension을 사용하는 것인데요.</p>\n<p>예를 들어, 남성 사용자만 추려내는 코드를 list comprehension을 이용해서 재작성해보겠습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token punctuation\">[</span>user <span class=\"token keyword\">for</span> user <span class=\"token keyword\">in</span> users <span class=\"token keyword\">if</span> user<span class=\"token punctuation\">[</span><span class=\"token string\">\"gender\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string\">'M'</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span><span class=\"token string\">'mail'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'gregorythomas@gmail.com'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'name'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Brett Holland'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'gender'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'M'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token string\">'mail'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'wwagner@gmail.com'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'name'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Michael Jenkins'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'gender'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'M'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span></code></pre></div>\n<p>list comprehension은 결과값은 역시 리스트 타입이기 때문에, 별다른 타입 변환이 필요없는 것도 이점이 될 수 있겠습니다.\n만약에 튜플을 얻고 싶다면 비슷한 방식으로 <code>tuple()</code> 내장 함수만 사용해주면 됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token builtin\">tuple</span><span class=\"token punctuation\">(</span>user <span class=\"token keyword\">for</span> user <span class=\"token keyword\">in</span> users <span class=\"token keyword\">if</span> user<span class=\"token punctuation\">[</span><span class=\"token string\">\"gender\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string\">'M'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token string\">'mail'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'gregorythomas@gmail.com'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'name'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Brett Holland'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'gender'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'M'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token string\">'mail'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'wwagner@gmail.com'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'name'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Michael Jenkins'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'gender'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'M'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>어떤가요? 참 편리하죠? 저는 개인적으로 list comprehension을 더 선호하는데, list comprehension에 대한 호불호가 워낙 갈리다 보니 여기서 줄이겠습니다. 😅</p>\n<blockquote>\n<p>파이썬에서 가장 많이 사용되는 자료형인 리스트(list)에 대해서는 <a href=\"/python-immutable-datatypes\">별도 포스팅</a>에서 아주 자세히 다루고 있으니 참고 바랍니다.</p>\n</blockquote>\n<h2 id=\"전체-코드\" style=\"position:relative;\"><a href=\"#%EC%A0%84%EC%B2%B4-%EC%BD%94%EB%93%9C\" aria-label=\"전체 코드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>전체 코드</h2>\n<p>본 포스팅에서 제가 작성한 전체 코드는 아래에서 직접 확인하고 실행해보실 수 있습니다.</p>\n<p><a href=\"https://dales.link/vcw\">https://dales.link/vcw</a></p>\n<h2 id=\"마치면서\" style=\"position:relative;\"><a href=\"#%EB%A7%88%EC%B9%98%EB%A9%B4%EC%84%9C\" aria-label=\"마치면서 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>마치면서</h2>\n<p>이상으로 여러 개의 데이터로 부터 일부의 데이터만 추려낼 때 사용하는 파이썬의 <code>filter()</code> 내장 함수에 대해서 알아보았습니다.\n이 유용한 함수가 불필요한 루프를 피하시고 읽고 쉬운 파이썬 코드를 짜시는데 도움이 되었으면 좋겠습니다.</p>","timeToRead":4,"fields":{"slug":"/python-filter/","tags":["Python","BIF","filter","comprehensions","FP"]},"frontmatter":{"title":"파이썬의 filter 내장 함수로 데이터 추출하기","date":"Mar 21, 2020"}},"next":{"fields":{"slug":"/python-map/"},"frontmatter":{"title":"파이썬의 map 내장 함수로 데이터 변환하기"}}}},"staticQueryHashes":["2168229929","2362167539","3056348342"]}