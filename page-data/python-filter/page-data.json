{"componentChunkName":"component---src-templates-detail-template-jsx","path":"/python-filter/","result":{"pageContext":{"previous":{"fields":{"slug":"/python-functools-reduce/"},"frontmatter":{"title":"파이썬 reduce 함수 사용법"}},"node":{"html":"<h2 id=\"filter-내장-함수\" style=\"position:relative;\"><a href=\"#filter-%EB%82%B4%EC%9E%A5-%ED%95%A8%EC%88%98\" aria-label=\"filter 내장 함수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>filter 내장 함수</h2>\n<p>파이썬의 내장 함수인 <code>filter()</code>는 여러 개의 데이터로 부터 일부의 데이터만 추려낼 때 사용합니다.<br>따라서, 여러 개의 데이터를 담고 있는 list나 tuple을 대상으로 주로 사용하는 함수입니다.</p>\n<p>사용 방법은 매우 간단한데요… 기본 문법은 다음과 같습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token builtin\">filter</span><span class=\"token punctuation\">(</span>조건 함수<span class=\"token punctuation\">,</span> 순회 가능한 데이터<span class=\"token punctuation\">)</span></code></pre></div>\n<p><code>filter()</code> 함수는 두번째 인자로 넘어온 데이터 중에서 첫번째 인자로 넘어온 조건 함수를 만족하는 데이터만을 반환합니다.</p>\n<h2 id=\"실습-데이터-생성\" style=\"position:relative;\"><a href=\"#%EC%8B%A4%EC%8A%B5-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%83%9D%EC%84%B1\" aria-label=\"실습 데이터 생성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>실습 데이터 생성</h2>\n<p>파이썬 인터프리터에서 다음과 같이 유저 5명의 데이터를 임의로 생성합니다. 5개의 dictionary를 담고 있는 list 입니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> users <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span><span class=\"token string\">'mail'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'gregorythomas@gmail.com'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'name'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Brett Holland'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'sex'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'M'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>  <span class=\"token punctuation\">{</span><span class=\"token string\">'mail'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'hintoncynthia@hotmail.com'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'name'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Madison Martinez'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'sex'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'F'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>  <span class=\"token punctuation\">{</span><span class=\"token string\">'mail'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'wwagner@gmail.com'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'name'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Michael Jenkins'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'sex'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'M'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>  <span class=\"token punctuation\">{</span><span class=\"token string\">'mail'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'daniel79@gmail.com'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'name'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Karen Rodriguez'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'sex'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'F'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>  <span class=\"token punctuation\">{</span><span class=\"token string\">'mail'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'ujackson@gmail.com'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'name'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Amber Rhodes'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'sex'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'F'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span></code></pre></div>\n<h2 id=\"일반-함수로-필터링\" style=\"position:relative;\"><a href=\"#%EC%9D%BC%EB%B0%98-%ED%95%A8%EC%88%98%EB%A1%9C-%ED%95%84%ED%84%B0%EB%A7%81\" aria-label=\"일반 함수로 필터링 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>일반 함수로 필터링</h2>\n<p>그럼, 실습 데이터를 대상으로 <code>fitler()</code> 함수를 사용해서 먼저 남성 유저들만 추려내보겠습니다.</p>\n<p><code>filter()</code> 함수는 함수를 인자로 받기 때문에, <code>is_man()</code>이라는 함수를 먼저 작성합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">def</span> <span class=\"token function\">is_man</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">return</span> user<span class=\"token punctuation\">[</span><span class=\"token string\">\"sex\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string\">\"M\"</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></code></pre></div>\n<p>이제, <code>is_man()</code> 함수를 첫번째 인자로, <code>users</code> list를 두번째 인자로 던져서 <code>filter()</code> 함수를 호출합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">for</span> man <span class=\"token keyword\">in</span> <span class=\"token builtin\">filter</span><span class=\"token punctuation\">(</span>is_man<span class=\"token punctuation\">,</span> users<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>man<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token punctuation\">{</span><span class=\"token string\">'mail'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'gregorythomas@gmail.com'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'name'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Brett Holland'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'sex'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'M'</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">{</span><span class=\"token string\">'mail'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'wwagner@gmail.com'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'name'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Michael Jenkins'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'sex'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'M'</span><span class=\"token punctuation\">}</span></code></pre></div>\n<p>총 유저 5명 중 남성 유저 2명만 출력이 되었습니다!</p>\n<h2 id=\"람다-함수로-필터링\" style=\"position:relative;\"><a href=\"#%EB%9E%8C%EB%8B%A4-%ED%95%A8%EC%88%98%EB%A1%9C-%ED%95%84%ED%84%B0%EB%A7%81\" aria-label=\"람다 함수로 필터링 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>람다 함수로 필터링</h2>\n<p>조건 함수의 코드가 긴 경우에는 위와 같이 함수를 선언하는 것이 낫겠지만, 본 예제와 같이 함수가 짧은 경우에는 람다 함수를 사용하면 더욱 간단 명료한 코드를 짤 수 있습니다.</p>\n<p>예를 들어, 람다 함수를 이용해서 여성 유저만 출력하는 코드를 작성해보겠습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">for</span> woman <span class=\"token keyword\">in</span> <span class=\"token builtin\">filter</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">lambda</span> u<span class=\"token punctuation\">:</span> u<span class=\"token punctuation\">[</span><span class=\"token string\">\"sex\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">!=</span> <span class=\"token string\">\"M\"</span><span class=\"token punctuation\">,</span> users<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>woman<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token punctuation\">{</span><span class=\"token string\">'mail'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'hintoncynthia@hotmail.com'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'name'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Madison Martinez'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'sex'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'F'</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">{</span><span class=\"token string\">'mail'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'daniel79@gmail.com'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'name'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Karen Rodriguez'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'sex'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'F'</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">{</span><span class=\"token string\">'mail'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'ujackson@gmail.com'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'name'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Amber Rhodes'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'sex'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'F'</span><span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"결과-데이터-변환\" style=\"position:relative;\"><a href=\"#%EA%B2%B0%EA%B3%BC-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EB%B3%80%ED%99%98\" aria-label=\"결과 데이터 변환 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>결과 데이터 변환</h2>\n<p>지금까지 <code>filter()</code> 함수로 추려진 결과를 콘솔에 출력만 했었는데요.<br>많은 경우, 결과 데이터를 list나 tuple 타입으로 저장을 해야합니다.</p>\n<p>여기서, 많은 분들을 혼란스럽게 하는 부분이 있는데요… <code>filter()</code> 함수는 <code>filter</code> 타입으로 결과를 리턴한다는 점입니다.</p>\n<p>예를 들어, GMail을 이메일로 사용하는 유저만 추려내는 <code>filter()</code> 함수의 결과는 다음과 깉이 출력됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token builtin\">filter</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">lambda</span> u<span class=\"token punctuation\">:</span> u<span class=\"token punctuation\">[</span><span class=\"token string\">\"mail\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>endswith<span class=\"token punctuation\">(</span><span class=\"token string\">\"@gmail.com\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> users<span class=\"token punctuation\">)</span>\n<span class=\"token operator\">&lt;</span><span class=\"token builtin\">filter</span> <span class=\"token builtin\">object</span> at <span class=\"token number\">0x11132f7c0</span><span class=\"token operator\">></span></code></pre></div>\n<p><code>filter()</code> 함수의 결과값을 list로 변환하는 가장 쉬운 방법은 <code>list()</code> 내장 함수를 사용하는 것입니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">filter</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">lambda</span> u<span class=\"token punctuation\">:</span> u<span class=\"token punctuation\">[</span><span class=\"token string\">\"mail\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>endswith<span class=\"token punctuation\">(</span><span class=\"token string\">\"@gmail.com\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> users<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span><span class=\"token string\">'mail'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'gregorythomas@gmail.com'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'name'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Brett Holland'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'sex'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'M'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token string\">'mail'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'wwagner@gmail.com'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'name'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Michael Jenkins'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'sex'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'M'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token string\">'mail'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'daniel79@gmail.com'</span><span class=\"token punctuation\">,</span> 'name\n<span class=\"token string\">': '</span>Karen Rodriguez<span class=\"token string\">', '</span>sex<span class=\"token string\">': '</span><span class=\"token string-interpolation\"><span class=\"token string\">F'}, {'</span></span>mail<span class=\"token string\">': '</span>ujackson@gmail<span class=\"token punctuation\">.</span>com<span class=\"token string\">', '</span>name<span class=\"token string\">': '</span>Amber Rhodes<span class=\"token string\">', '</span>sex<span class=\"token string\">': '</span>F'<span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span></code></pre></div>\n<p>마찬가지로 <code>tuple()</code> 내장 함수를 사용하면 tuple로 변환할 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token builtin\">tuple</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">filter</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">lambda</span> u<span class=\"token punctuation\">:</span> u<span class=\"token punctuation\">[</span><span class=\"token string\">\"mail\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>endswith<span class=\"token punctuation\">(</span><span class=\"token string\">\"@gmail.com\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> users<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token string\">'mail'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'gregorythomas@gmail.com'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'name'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Brett Holland'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'sex'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'M'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token string\">'mail'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'wwagner@gmail.com'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'name'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Michael Jenkins'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'sex'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'M'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token string\">'mail'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'daniel79@gmail.com'</span><span class=\"token punctuation\">,</span> 'name\n<span class=\"token string\">': '</span>Karen Rodriguez<span class=\"token string\">', '</span>sex<span class=\"token string\">': '</span><span class=\"token string-interpolation\"><span class=\"token string\">F'}, {'</span></span>mail<span class=\"token string\">': '</span>ujackson@gmail<span class=\"token punctuation\">.</span>com<span class=\"token string\">', '</span>name<span class=\"token string\">': '</span>Amber Rhodes<span class=\"token string\">', '</span>sex<span class=\"token string\">': '</span>F'<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<blockquote>\n<p>여러 개의 데이터를 저장하기 위해서 사용되는 list와 tuple의 차이점에 대해서는 <a href=\"/python-immutable-datatypes\">관련 포스트</a>를 참고바라겠습니다.</p>\n</blockquote>\n<h2 id=\"list-comprehension\" style=\"position:relative;\"><a href=\"#list-comprehension\" aria-label=\"list comprehension permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>List Comprehension</h2>\n<p>사실 파이썬에서는 <code>filter()</code> 함수를 사용하는 것보다 더 파이썬답게(pythonic) 데이터를 추려내는 방법이 있습니다.<br>바로 파이썬의 🌼이라고 불리는 list comprehension을 사용하는 것인데요.</p>\n<p>예를 들어, 남성 유저만 추려내는 코드를 list comprehension을 이용해서 재작성 해보면 아래와 같습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token punctuation\">[</span>user <span class=\"token keyword\">for</span> user <span class=\"token keyword\">in</span> users <span class=\"token keyword\">if</span> user<span class=\"token punctuation\">[</span><span class=\"token string\">\"sex\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string\">'M'</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span><span class=\"token string\">'mail'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'gregorythomas@gmail.com'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'name'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Brett Holland'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'sex'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'M'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token string\">'mail'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'wwagner@gmail.com'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'name'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Michael Jenkins'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'sex'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'M'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span></code></pre></div>\n<p>list comprehension은 결과값은 역시 list 타입이기 때문에, 별다른 타입 변환이 필요없는 것도 이점이 될 수 있겠습니다.<br>tuple을 얻고 싶다면 마찬가지로 <code>tuple()</code> 내장 함수만 사용해주면 됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token builtin\">tuple</span><span class=\"token punctuation\">(</span>user <span class=\"token keyword\">for</span> user <span class=\"token keyword\">in</span> users <span class=\"token keyword\">if</span> user<span class=\"token punctuation\">[</span><span class=\"token string\">\"sex\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string\">'M'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token string\">'mail'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'gregorythomas@gmail.com'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'name'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Brett Holland'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'sex'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'M'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token string\">'mail'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'wwagner@gmail.com'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'name'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Michael Jenkins'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'sex'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'M'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>어떤가요? 저는 대부분의 경우에는 list comprehension을 더 선호하는데, list comprehension에 대한 호불호가 워낙 갈리다 보니 여기서 줄이겠습니다. 😅</p>\n<h2 id=\"마치면서\" style=\"position:relative;\"><a href=\"#%EB%A7%88%EC%B9%98%EB%A9%B4%EC%84%9C\" aria-label=\"마치면서 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>마치면서</h2>\n<p>이상으로 여러 개의 데이터로 부터 일부의 데이터만 추려낼 때 사용하는 파이썬의 <code>filter()</code> 내장 함수에 대해서 알아보았습니다.<br>이러한 과정을 흔히 데이터 필터링(data filtering)이라고도 하는데요. 함수형 프로그래밍에서는 매우 자주 사용되는 개념이니 잘 이해하시고 활용하셨으면 좋겠습니다.</p>","timeToRead":4,"fields":{"slug":"/python-filter/","tags":["Python","파이썬","BIF","내장함수","filter","ListComprehension","FP","FunctionalPrograming"]},"frontmatter":{"title":"파이썬 filter 내장 함수 사용법 (feat. List Comprehension)","date":"Mar 21, 2020"}},"next":{"fields":{"slug":"/python-map/"},"frontmatter":{"title":"파이썬 map 내장 함수 사용법 (feat. List Comprehension)"}}}}}