{"componentChunkName":"component---src-templates-detail-template-jsx","path":"/python-class-type-isinstance/","result":{"pageContext":{"previous":{"fields":{"slug":"/python-print/"},"frontmatter":{"title":"파이썬의 print() 함수 제대로 활용하기"}},"node":{"html":"<p>객체 지향 프로그래밍 언어인 파이썬에서 모든 데이터는 결국 객체라고 볼 수 있습니다.\n우리가 작성한 클래스의 인스턴스 뿐만 아니라, 심지어 함수, 문자열, 정수, 실수도 결국 타입을 가집니다.</p>\n<p>이번 포스팅에서는 파이썬에서 데이터 타입을 확인할 수 있는 몇 가지 방법을 알아보도록 하겠습니다.</p>\n<h2 id=\"__class__-속성\" style=\"position:relative;\"><a href=\"#__class__-%EC%86%8D%EC%84%B1\" aria-label=\"__class__ 속성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>__class__ 속성</h2>\n<p>파이썬에서 모든 객체는 <code>__class__</code>라는 특별한 속성을 가지는데요.\n여기에는 해당 객체의 데이터 타입이 저장이 되어 있습니다.</p>\n<p>예를 들어, 변수 <code>a</code>에 정수 <code>1</code>을 저장하고, <code>a.__class__</code>를 출력해보겠습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\">a <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span>__class__<span class=\"token punctuation\">)</span></code></pre></div>\n<p>정수의 데이터 타입은 <code>int</code>이네요.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token operator\">&lt;</span>class <span class=\"token string\">'int'</span><span class=\"token operator\">></span></code></pre></div>\n<p>이번에는 변수 <code>b</code>에 실수 <code>1.5</code>을 저장하고, <code>a.__class__</code>를 출력해보겠습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\">b <span class=\"token operator\">=</span> <span class=\"token number\">1.5</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">.</span>__class__<span class=\"token punctuation\">)</span></code></pre></div>\n<p>실수의 데이터 타입은 <code>float</code>이네요.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token operator\">&lt;</span>class <span class=\"token string\">'float'</span><span class=\"token operator\">></span></code></pre></div>\n<p>이번에는 함수를 하나 정의하고 <code>__class__</code> 속성을 출력해볼까요?</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token keyword\">def</span> <span class=\"token function\">do</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">pass</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>do<span class=\"token punctuation\">.</span>__class__<span class=\"token punctuation\">)</span></code></pre></div>\n<p>함수의 데이터 타입은 <code>function</code>인 것을 알 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token operator\">&lt;</span>class <span class=\"token string\">'function'</span><span class=\"token operator\">></span></code></pre></div>\n<p>이번에는 클래스를 하나 정의하고, <code>__class__</code> 속성을 출력볼까요?</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Thing</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">pass</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>Thing<span class=\"token punctuation\">.</span>__class__<span class=\"token punctuation\">)</span></code></pre></div>\n<p>클래스의 데이터 타입은 <code>type</code>인 것을 알 수 있습니다.\n객체를 만들기위해서 사용되는 클래스 자체도 데이터 타입이 있다니 흥미롭지 않나요? 😁</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token operator\">&lt;</span>class <span class=\"token string\">'type'</span><span class=\"token operator\">></span></code></pre></div>\n<p>이 클래스로 부터 객체를 하나 만들어서 마찬가지로 <code>__class__</code> 속성을 출력해보겠습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\">thing <span class=\"token operator\">=</span> Thing<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>thing<span class=\"token punctuation\">.</span>__class__<span class=\"token punctuation\">)</span></code></pre></div>\n<p>이 객체는 데이터 타입은 예상했던데로 <code>Thing</code>이네요.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token operator\">&lt;</span>class <span class=\"token string\">'__main__.Thing'</span><span class=\"token operator\">></span></code></pre></div>\n<p>보통 <code>__class__</code> 속성은 터미널이나 콘솔 상에서 데이터 타입을 1회성으로 빠르게 확인해보는 용도로 간편하게 사용할 수 있습니다.</p>\n<h2 id=\"type-함수\" style=\"position:relative;\"><a href=\"#type-%ED%95%A8%EC%88%98\" aria-label=\"type 함수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>type() 함수</h2>\n<p>파이썬으로 프로그램을 짤 때는 <code>__class__</code> 속성보다 <code>type()</code> 내장 함수가 더 보편적으로 사용될 것입니다.\n<code>type()</code>은 객체를 인자로 받아 해당 객체의 데이터 타입을 반환해주는 함수입니다.</p>\n<p>예를 들어, 위에서 사용한 모든 변수의 데이터 타입을 출력해보겠습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>do<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>Thing<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>thing<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token operator\">&lt;</span>class <span class=\"token string\">'int'</span><span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>class <span class=\"token string\">'float'</span><span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>class <span class=\"token string\">'function'</span><span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>class <span class=\"token string\">'type'</span><span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>class <span class=\"token string\">'__main__.Thing'</span><span class=\"token operator\">></span></code></pre></div>\n<p>그 밖에 파이썬에서 흔하게 볼 수 있는 다른 객체들의 타입도 한 번 출력해보았습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token string\">\"a\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token operator\">&lt;</span>class <span class=\"token string\">'list'</span><span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>class <span class=\"token string\">'tuple'</span><span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>class <span class=\"token string\">'set'</span><span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>class <span class=\"token string\">'dict'</span><span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>class <span class=\"token string\">'bool'</span><span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>class <span class=\"token string\">'NoneType'</span><span class=\"token operator\">></span></code></pre></div>\n<p>타입 비교를 할 때는 <code>type()</code> 함수와 <code>is</code> 키워드를 함께 사용하면 됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span> <span class=\"token keyword\">is</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span> <span class=\"token keyword\">is</span> <span class=\"token builtin\">float</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>실전에서는 <code>type()</code> 함수는 입력값 유효성 검증에 활용할 수 있습니다.\n예를 들어 정수나 실수만 입력으로 받아서 제곱을 해주는 함수를 작성해보겠습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token keyword\">def</span> <span class=\"token function\">square</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">if</span> <span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span> <span class=\"token keyword\">is</span> <span class=\"token keyword\">not</span> <span class=\"token builtin\">int</span> <span class=\"token keyword\">and</span> <span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span> <span class=\"token keyword\">is</span> <span class=\"token keyword\">not</span> <span class=\"token builtin\">float</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">raise</span> ValueError<span class=\"token punctuation\">(</span><span class=\"token string\">\"num must be of type int or float\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> num <span class=\"token operator\">*</span> num</code></pre></div>\n<h2 id=\"isinstance-함수\" style=\"position:relative;\"><a href=\"#isinstance-%ED%95%A8%EC%88%98\" aria-label=\"isinstance 함수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>isinstance() 함수</h2>\n<p>사실 매번 <code>type()</code> 함수와 <code>is</code> 키워드를 함께 쓰는 게 좀 번거로울 수가 있는데요.\n다행이도 파이썬에서는 <code>isinstance()</code> 함수도 제공해주는데 이 내장 함수를 사용하면 좀 더 쉽게 타입 체크를 할 수 있습니다.</p>\n<p><code>isinstance()</code> 함수는 첫번째로 인자로 넘어온 객체의 데이터 타입이 두번째 인자로 넘어온 타입과 일치하는지 여부를 반환합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">isinstance</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">isinstance</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">float</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">True\nFalse</code></pre></div>\n<p><code>isinstance()</code> 함수를 사용할 때 편리한 점은 두번째 인자로 여러 데이터 타입을 한 번에 터플(tuple)로 넘길 수 있다는 것입니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">isinstance</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">float</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">isinstance</span><span class=\"token punctuation\">(</span><span class=\"token number\">1.5</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">float</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">isinstance</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"1.5\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">float</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">True\nTrue\nFalse</code></pre></div>\n<p>따라서, 위에서 작성했던 함수 내 입력값 유효성 검증을 다음과 같이 단순화시킬 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token keyword\">def</span> <span class=\"token function\">square</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> <span class=\"token builtin\">isinstance</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">float</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">raise</span> ValueError<span class=\"token punctuation\">(</span><span class=\"token string\">\"num must be of type int or float\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> num <span class=\"token operator\">*</span> num</code></pre></div>\n<p><code>isinstance()</code> 함수를 사용할 때 한 가지 주의할 부분은 바로 타입 간 상속 관계도 고려해준다는 것입니다.\n즉, 첫번째 인자로 넘어온 객체가 두번째 인자로 넘어온 타입이 아닌 하위 클래스로 부터 생성된 인스턴스라고 해도 <code>True</code>를 반환합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Thing</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">pass</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">SubThing</span><span class=\"token punctuation\">(</span>Thing<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">pass</span>\n\nsub_thing <span class=\"token operator\">=</span> SubThing<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>sub_thing<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">isinstance</span><span class=\"token punctuation\">(</span>sub_thing<span class=\"token punctuation\">,</span> SubThing<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">isinstance</span><span class=\"token punctuation\">(</span>sub_thing<span class=\"token punctuation\">,</span> Thing<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token operator\">&lt;</span>class <span class=\"token string\">'__main__.SubThing'</span><span class=\"token operator\">></span>\nTrue\nTrue</code></pre></div>\n<h2 id=\"전체-코드\" style=\"position:relative;\"><a href=\"#%EC%A0%84%EC%B2%B4-%EC%BD%94%EB%93%9C\" aria-label=\"전체 코드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>전체 코드</h2>\n<p>본 포스팅에서 제가 작성한 코드는 아래에서 직접 확인하고 실행해보실 수 있습니다.</p>\n<p><a href=\"https://deepnote.com/project/Blog-Yd3-DsV_QeGqo4AUZ7FyHg/%2Fpython-class-type-isinstance.ipynb\">https://deepnote.com/project/Blog-Yd3-DsV_QeGqo4AUZ7FyHg/%2Fpython-class-type-isinstance.ipynb</a></p>\n<h2 id=\"마치면서\" style=\"position:relative;\"><a href=\"#%EB%A7%88%EC%B9%98%EB%A9%B4%EC%84%9C\" aria-label=\"마치면서 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>마치면서</h2>\n<p>이떤 프로그래밍 언어로 코딩을 하든 현재 다루고 있는 데이터의 타입을 확인해야할 때가 자주 있는 것 같습니다.\n파이썬에서 제공하는 <code>__class__</code> 속성, <code>type()</code> 함수, <code>isinstance()</code> 함수를 적절히 사용하셔서 효과적으로 데이터 타입을 체크하시는데 도움이 되었으면 좋겠습니다.</p>","timeToRead":4,"fields":{"slug":"/python-class-type-isinstance/","tags":["Python","__class__","type","isinstance"]},"frontmatter":{"title":"파이썬에서 데이터 타입 확인하기","date":"Jan 22, 2022"}},"next":{"fields":{"slug":"/python-cache/"},"frontmatter":{"title":"파이썬에서 캐시 적용하기 (feat. @cache, @lru_cache)"}}}},"staticQueryHashes":["2168229929","2362167539","3056348342"]}