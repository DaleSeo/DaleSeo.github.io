{
    "componentChunkName": "component---src-templates-detail-template-jsx",
    "path": "/css-screen-height/",
    "result": {"pageContext":{"previous":{"fields":{"slug":"/js-substr-substring/"},"frontmatter":{"title":"자바스크립트 문자열 자르기: substr()와 substring() 비교"}},"node":{"html":"<p>CSS로 웹사이트의 레이아웃을 잡다보면 어떤 HTML 요소의 높이를 브라우저의 화면에 맞추고 싶을 때가 있죠?\n웹 페이지의 풋터(footer) 영역을 화면 하단에 붙이고 싶을 때도 그렇고 모바일에서는 네비게이션 버튼을 화면 하단에 두기도 하니까요.</p>\n<p>이번 글에서는 CSS로 화면 높이의 HTML 요소 만드는 다양한 방법에 대해서 알아보겠습니다.</p>\n<h2 id=\"흔히-범하는-실수\" style=\"position:relative;\"><a href=\"#%ED%9D%94%ED%9E%88-%EB%B2%94%ED%95%98%EB%8A%94-%EC%8B%A4%EC%88%98\" aria-label=\"흔히 범하는 실수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>흔히 범하는 실수</h2>\n<p>CSS 초보자들이 HTML 요소의 높이를 스타일할 때 하기 쉬운 실수가 있는데요.\n바로 무작정 <code>height</code> 속성을 <code>100%</code>로 설정하고 해당 요소의 높이가 화면 높이만큼 커질 거라고 기대하는 것인데요.</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.screen-height</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 100%<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>사실 이렇게 해주면 대부분의 경우 아무런 변화도 일어나지 않습니다.\n왜냐하면 <code>%</code>는 부모 요소에 기준으로 결정이 되는 상대 단위이며, 부모 요소의 <code>height</code> 속성은 기본값인 <code>auto</code>로 설정되어 있을 확률이 높기 때문입니다.</p>\n<p><code>height</code> 속성값이 <code>auto</code>인 HTML 요소는 담고 있는 컨텐츠가 빠져나오거나 짤리지 않을 만큼만 최소한의 높이가 자동으로 주어집니다.\n이 기본값 덕분에 대부분의 HTML 요소의 높이는 현재 브라우저 화면 너비와 담고 있는 컨텐츠 양에 따라서 자동 조절되는 것이며,\n그래서 우리는 HTML 요소의 높이를 명시적으로 스타일해 줄 일이 많지 않은 것이지요.</p>\n<p>그런데 여기서 문제는 이 <code>height</code> 속성의 기본값 <code>auto</code>가 HTML 문서의 최상위 요소인 <code>&#x3C;html></code>과 <code>&#x3C;body></code>에도 예외없이 적용된다는 것인데요.\n그래서 우리가 그 아래에 있는 HTML 요소의 <code>height</code> 속성을 <code>100%</code>로 스타일하더라도, 결국에는 <code>auto</code>에 의해서 최소한으로 부여된 <code>&#x3C;body></code> 높이에 제한을 받게 됩니다.</p>\n<blockquote>\n<p>CSS의 <code>height</code> 속성에 대해서는 <a href=\"/css-min-height/\">별도 글</a>에서 자세히 다루고 있으니 참고 바랍니다.</p>\n</blockquote>\n<h2 id=\"html과-body-요소의-높이도-100로-설정\" style=\"position:relative;\"><a href=\"#html%EA%B3%BC-body-%EC%9A%94%EC%86%8C%EC%9D%98-%EB%86%92%EC%9D%B4%EB%8F%84-100%EB%A1%9C-%EC%84%A4%EC%A0%95\" aria-label=\"html과 body 요소의 높이도 100로 설정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>html과 body 요소의 높이도 100%로 설정</h2>\n<p>위에서 설명드린 문제를 해결하기 위해서 가장 오랫동안 사용되온 방법은 <code>&#x3C;html></code> 요소와 <code>&#x3C;body></code> 요소의 높이를 <code>100%</code>로 설정하는 것인데요.</p>\n<p>이렇게 스타일해주면 <code>&#x3C;html></code> 요소가 브라우저의 화면 높이의 100%를 차지하고, 그 바로 아래에 있는 <code>&#x3C;body></code> 요소의 높이가 연달아 100%를 차지하게 됩니다.\n따라서 <code>&#x3C;body></code> 요소 아래에서 <code>height</code> 속성을 <code>%</code> 단위를 사용하여 설정해줄 때 브라우저의 화면 높이가 기준이 됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">html,\nbody</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 100%<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<iframe height=\"300\" style=\"width: 100%;\" scrolling=\"no\" title=\"css-screen-height-percent\" src=\"https://codepen.io/daleseo/embed/poQQEbe?default-tab=css%2Cresult\" frameborder=\"no\" loading=\"lazy\" allowtransparency=\"true\" allowfullscreen=\"true\">\n  See the Pen <a href=\"https://codepen.io/daleseo/pen/poQQEbe\">\n  css-screen-height-percent</a> by Dale Seo (<a href=\"https://codepen.io/daleseo\">@daleseo</a>)\n  on <a href=\"https://codepen.io\">CodePen</a>.\n</iframe>\n<p>이 방법 원래 높이를 지정해주고 싶은 요소 뿐만 아니라 <code>&#x3C;html></code> 요소와 <code>&#x3C;body></code> 요소의 높이도 <code>100%</code>로 지정을 해줘야하고,\n만약에 해당 요소와 <code>&#x3C;body></code> 요소 사이에 다른 요소가 있다면 그 요소의 <code>height</code> 속성도 <code>100%</code>로 해줘야하는 번거로움이 있습니다.</p>\n<p>하지만 예전부터 데스크탑이나 모바일을 가리지 않고 작동하는 가장 안정되고 검증된 방법이기도 합니다.</p>\n<h2 id=\"뷰포트-높이-단위-사용\" style=\"position:relative;\"><a href=\"#%EB%B7%B0%ED%8F%AC%ED%8A%B8-%EB%86%92%EC%9D%B4-%EB%8B%A8%EC%9C%84-%EC%82%AC%EC%9A%A9\" aria-label=\"뷰포트 높이 단위 사용 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>뷰포트 높이 단위 사용</h2>\n<p>CSS의 뷰포트(viewport) 높이(height) 단위, 즉 <code>vh</code>를 사용하면 부모 요소의 높이에 구애받지 않고 특정 요소의 높이를 브라우저 화면 높이에 맞출 수 있는데요.\n<code>1vh</code>가 뷰포트의 높이의 <code>1%</code>를 의미하므로 높이로 <code>100vh</code>를 설정해주면 됩겠습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.screen-height</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 100vh<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<iframe height=\"300\" style=\"width: 100%;\" scrolling=\"no\" title=\"css-screen-height-vh\" src=\"https://codepen.io/daleseo/embed/PoxXoKd?default-tab=css%2Cresult\" frameborder=\"no\" loading=\"lazy\" allowtransparency=\"true\" allowfullscreen=\"true\">\n  See the Pen <a href=\"https://codepen.io/daleseo/pen/PoxXoKd\">\n  css-screen-height-vh</a> by Dale Seo (<a href=\"https://codepen.io/daleseo\">@daleseo</a>)\n  on <a href=\"https://codepen.io\">CodePen</a>.\n</iframe>\n<p>그런데 이 방법은 모바일에서 문제의 소지가 있는데요.\n대부분 주소 표시줄이 고정되어 있는 데스크탑 브라우저와 달리, 모바일 브라우저는 주소 표시줄이 유동적인 경우가 있기 때문입니다.\n예를 들어, iOS의 사파리(Safari) 브라우저나 안드로이드의 크롬(Chrome) 브라우저에서는 주소 표시줄이 처음에 페이지를 열었을 때는 나타났다가 스크롤을 시작하면 사라집니다.</p>\n<p>이러한 모바일 브라우저에서 <code>100vh</code>는 주소 표시줄이 숨어있을 때의 브라우저 화면 높이, 즉 <code>100lvh</code>를 의미하기 때문에,\n<code>height</code> 속성값이 <code>100vh</code>인 요소의 아랫 부분이 뜻하지 않게 스크롤하지 않으면 화면에서 보이지 않는 문제가 나타납니다.\n만약에 거기에 중요한 버튼이 있다면 사용자가 클릭하는데 어려움을 겪거나 최악의 경우 미처 보지 못할 수도 있죠.</p>\n<h2 id=\"동적-뷰포트-높이-단위-사용\" style=\"position:relative;\"><a href=\"#%EB%8F%99%EC%A0%81-%EB%B7%B0%ED%8F%AC%ED%8A%B8-%EB%86%92%EC%9D%B4-%EB%8B%A8%EC%9C%84-%EC%82%AC%EC%9A%A9\" aria-label=\"동적 뷰포트 높이 단위 사용 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>동적 뷰포트 높이 단위 사용</h2>\n<p>위와 같은 문제를 해결하기 위해서 CSS에는 비교적 최근에 동적(dynamic) 뷰포트(viewport) 높이(height) 단위, 즉 <code>dvh</code>가 도입되었습니다.\n그래서 이 새로운 단위를 사용하면 스크롤 시 주소창이 사라지는 모바일 브라우저에서도 문제없이 특정 요소의 높이를 브라우저의 화면 높이와 맞출 수 있게 되었습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.screen-height</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 100dvh<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<iframe height=\"300\" style=\"width: 100%;\" scrolling=\"no\" title=\"css-screen-height-vh\" src=\"https://codepen.io/daleseo/embed/jOQXOLj?default-tab=css%2Cresult\" frameborder=\"no\" loading=\"lazy\" allowtransparency=\"true\" allowfullscreen=\"true\">\n  See the Pen <a href=\"https://codepen.io/daleseo/pen/jOQXOLj\">\n  css-screen-height-vh</a> by Dale Seo (<a href=\"https://codepen.io/daleseo\">@daleseo</a>)\n  on <a href=\"https://codepen.io\">CodePen</a>.\n</iframe>\n<p><code>dvh</code> 단위를 사용하면 자동으로 모바일 브라우저의 화면 높이에 최적화가 되는데요.\n주소창 보이는 경우에는 <code>svh</code> 단위(Short Viewport Height)가 적용되고 주소창이 사라진 경우에는 <code>lvh</code> 단위(Long Viewport Height)가 적용됩니다.</p>\n<p>현재 CSS의 <code>dvh</code> 단위는 대부분의 모던 브라우저의 지원되고 있지만 사용자가 최신 버전을 쓴다는 보장이 없고 인터넷 익스플로러에서는 아예 지원이 되지 않습니다.\n따라서 다음과 같이 <code>height</code> 속성으로 <code>dvh</code> 단위를 사용하실 때는 바로 위에 <code>vh</code> 단위도 함께 설정해줘서, <code>dvh</code>가 지원되지 않는 브라우저에서는 <code>vh</code>로 대체되도록 해주시는 게 안전하겠습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.screen-height</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 100vh<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 100dvh<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"마치면서\" style=\"position:relative;\"><a href=\"#%EB%A7%88%EC%B9%98%EB%A9%B4%EC%84%9C\" aria-label=\"마치면서 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>마치면서</h2>\n<p>지금까지 HTML 요소의 높이를 브라우저 화면에 맞추는 3가지 방법에 대해서 살펴보았습니다.</p>\n<p>참고로 <code>height</code> 속성을 사용할 때는 컨텐츠가 삐져나오거나 짤리지 않도록 특히 모바일 환경에서 주의가 필요하며\n이 때문에 일반적으로 CSS에서는 <code>height</code> 속성보다는 <code>min-height</code> 속성을 사용하는 것이 권장됩니다.\n이 부분에 대해서는 <a href=\"/css-min-height/\">별도 포스팅</a>에서 자세히 다루고 있으니 같이 읽어보시면 도움이 될 것 같습니다.</p>","timeToRead":4,"fields":{"slug":"/css-screen-height/","tags":["CSS","HTML","viewport","height"]},"frontmatter":{"title":"CSS로 화면 높이의 HTML 요소 만들기","date":"Aug 1, 2023"}},"next":{"fields":{"slug":"/http-status-codes/"},"frontmatter":{"title":"웹 개발자를 위한 HTTP 상태 코드 안내서"}}}},
    "staticQueryHashes": ["2168229929","2362167539","3056348342"]}