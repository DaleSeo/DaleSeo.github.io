{"componentChunkName":"component---src-templates-detail-template-jsx","path":"/css-overflow/","result":{"pageContext":{"previous":{"fields":{"slug":"/css-before-after/"},"frontmatter":{"title":"[CSS] ::before / ::after"}},"node":{"html":"<p>웹개발을 하다보면 주어진 공간보다 더 많은 컨텐트를 보여줘야 하는 경우가 생기는데요.\nCSS에서는 overflow 속성을 통해서 주어진 공간을 넘어가는 컨텐트를 어떻게 보여줄지를 제어합니다.</p>\n<p>이번 포스팅에서는 크기가 제한된 영역에서 많은 양의 컨텐트를 보여줄 때 유용한 CSS의 overflow 속성에 대해서 알아보겠습니다.</p>\n<h2 id=\"visible\" style=\"position:relative;\"><a href=\"#visible\" aria-label=\"visible permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>visible</h2>\n<p>먼저 overflow 속성을 별도로 명시해주지 않았을 때 적용되는 기본 속성값인 <code>visible</code>에 대해서 살펴보겠습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.lyrics</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">overflow</span><span class=\"token punctuation\">:</span> visible<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>긴 기사의 컨텐트를 고정된 크기의 박스 안에서 보여줘야하는 경우를 예를 들어 설명해보겠습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>lyrics<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  동해 물과 백두산이 마르고 닳도록 하느님이 보우하사 우리나라 만세. 무궁화\n  삼천리 화려 강산 대한 사람, 대한으로 길이 보전하세.\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.lyrics</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 200px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 50px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">border</span><span class=\"token punctuation\">:</span> 3px solid blue<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>overflow 속성을 생략하거나, overflow 속성값을 <code>visible</code>로 지정해줄 경우 컨텐트가 경계선 밖으로 삐져나오는 것을 볼 수 있습니다. overflow 속성이 <code>visible</code>로 설정되어 있는 엘리먼트는 내부에 주어진 공간보다 담고있는 컨텐트가 더 큰 경우, 컨텐트를 밖으로 밀어내는 한이 있더라도 끝까지 보여줍니다.</p>\n<iframe height=\"265\" style=\"width: 100%;\" scrolling=\"no\" title=\"css-overflow-visible\" src=\"https://codepen.io/daleseo/embed/bGgRwRb?height=265&theme-id=dark&default-tab=html,result\" frameborder=\"no\" loading=\"lazy\" allowtransparency=\"true\" allowfullscreen=\"true\">\n  See the Pen <a href='https://codepen.io/daleseo/pen/bGgRwRb'>css-overflow-visible</a> by Dale Seo\n  (<a href='https://codepen.io/daleseo'>@daleseo</a>) on <a href='https://codepen.io'>CodePen</a>.\n</iframe>\n<p>경계선이 없다면 이러한 현상이 대수롭지 않다고 생각할 수 있지만, overflow 속성이 <code>visible</code>로 설정된 엘리먼트 두 개를 연속으로 배치해보면 문제가 커지게 됩니다.\n첫 번째 엘리먼트의 밖으로 빠져나온 컨텐트는 그 다음 엘리먼트의 먼텐트와 겹쳐보일 수 있기 때문입니다.</p>\n<iframe height=\"265\" style=\"width: 100%;\" scrolling=\"no\" title=\"css-overflow-visible-2\" src=\"https://codepen.io/daleseo/embed/GRrErmM?height=265&theme-id=dark&default-tab=html,result\" frameborder=\"no\" loading=\"lazy\" allowtransparency=\"true\" allowfullscreen=\"true\">\n  See the Pen <a href='https://codepen.io/daleseo/pen/GRrErmM'>css-overflow-visible-2</a> by Dale Seo\n  (<a href='https://codepen.io/daleseo'>@daleseo</a>) on <a href='https://codepen.io'>CodePen</a>.\n</iframe>\n<h2 id=\"hidden\" style=\"position:relative;\"><a href=\"#hidden\" aria-label=\"hidden permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>hidden</h2>\n<p>overflow 속성을 <code>hidden</code>으로 설정해주면 삐져나오는 컨텐트를 반대로 숨겨버릴 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.lyrics</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">overflow</span><span class=\"token punctuation\">:</span> hidden<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>overflow 속성값을 <code>hidden</code>으로 지정해줄 경우, 긴 텍스트의 뒷 부분이 아예 잘려버리는 것을 확인할 수 있습니다.</p>\n<iframe height=\"265\" style=\"width: 100%;\" scrolling=\"no\" title=\"css-overflow-hidden\" src=\"https://codepen.io/daleseo/embed/vYgZgdJ?height=265&theme-id=dark&default-tab=html,result\" frameborder=\"no\" loading=\"lazy\" allowtransparency=\"true\" allowfullscreen=\"true\">\n  See the Pen <a href='https://codepen.io/daleseo/pen/vYgZgdJ'>css-overflow-hidden</a> by Dale Seo\n  (<a href='https://codepen.io/daleseo'>@daleseo</a>) on <a href='https://codepen.io'>CodePen</a>.\n</iframe>\n<p>따라서 overflow 속성을 <code>hidden</code>으로 설정해줄 때는, 위와 같이 의도치 않게 컨텐트가 누락될 수 있기 때문에 주의가 필요하여, 실제로 제한적으로 사용되는 경우가 많습니다.</p>\n<p>재미있게도 오히려 다음과 같이 미학적인 용도로 <code>hidden</code> 속성값을 활용할 수 있습니다.</p>\n<iframe height=\"300\" style=\"width: 100%;\" scrolling=\"no\" title=\"css-overflow-hidden-2\" src=\"https://codepen.io/daleseo/embed/vYgZgre?height=265&theme-id=dark&default-tab=css,result\" frameborder=\"no\" loading=\"lazy\" allowtransparency=\"true\" allowfullscreen=\"true\">\n  See the Pen <a href='https://codepen.io/daleseo/pen/vYgZgre'>css-overflow-hidden-2</a> by Dale Seo\n  (<a href='https://codepen.io/daleseo'>@daleseo</a>) on <a href='https://codepen.io'>CodePen</a>.\n</iframe>\n<h2 id=\"scroll\" style=\"position:relative;\"><a href=\"#scroll\" aria-label=\"scroll permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>scroll</h2>\n<p>주어진 공간을 넘어가는 컨텐트가 삐져나오면 안되고, 누락되어도 안 된다면, 스크롤링 가능하게 하는 것이 좋은 대안일 것입니다.\noverflow 속성을 <code>scroll</code>로 설정해주면 스크롤바가 생겨서 사용자가 원한다면 컨텐트를 끝까지 볼 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.lyrics</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">overflow</span><span class=\"token punctuation\">:</span> scroll<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<iframe height=\"265\" style=\"width: 100%;\" scrolling=\"no\" title=\"css-overflow-scroll\" src=\"https://codepen.io/daleseo/embed/YzNQNbY?height=265&theme-id=dark&default-tab=html,result\" frameborder=\"no\" loading=\"lazy\" allowtransparency=\"true\" allowfullscreen=\"true\">\n  See the Pen <a href='https://codepen.io/daleseo/pen/YzNQNbY'>css-overflow-scroll</a> by Dale Seo\n  (<a href='https://codepen.io/daleseo'>@daleseo</a>) on <a href='https://codepen.io'>CodePen</a>.\n</iframe>\n<p>overflow 속성 대신에 <code>overflow-x</code> 속성이나 <code>overflow-y</code> 속성을 사용하면 가로 또는 세로만 선택적으로 스크롤바를 보여줄 수 있습니다.\n텍스트 컨텐트의 경우 대부분 줄바꿈을 하기 때문에 굳이 가로 스크롤바를 보여줄 필요는 없겠죠? 이럴 때는 <code>overflow-y</code> 속성을 사용하여 세로 스크롤바만 보여주면 됩니다.</p>\n<iframe height=\"265\" style=\"width: 100%;\" scrolling=\"no\" title=\"css-overflow-scroll-2\" src=\"https://codepen.io/daleseo/embed/ZELyLgb?height=265&theme-id=dark&default-tab=html,result\" frameborder=\"no\" loading=\"lazy\" allowtransparency=\"true\" allowfullscreen=\"true\">\n  See the Pen <a href='https://codepen.io/daleseo/pen/ZELyLgb'>css-overflow-scroll-2</a> by Dale Seo\n  (<a href='https://codepen.io/daleseo'>@daleseo</a>) on <a href='https://codepen.io'>CodePen</a>.\n</iframe>\n<h2 id=\"auto\" style=\"position:relative;\"><a href=\"#auto\" aria-label=\"auto permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>auto</h2>\n<p>컨텐트의 양이 가변적이어서 스크롤바를 보여줘야 할지 말지 미리 결정하기 어려운 경우에는 overflow 속성값으로 <code>auto</code>를 사용하면 됩니다.\n엘리먼트의 overflow 속성을 <code>auto</code>로 설정해주면, 그 안의 컨텐트의 크기가 주어진 공간을 넘어가는 경우에만 스크롤바가 생깁니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.lyrics</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">overflow</span><span class=\"token punctuation\">:</span> auto<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>첫 번째 엘리먼트는 컨텐트가 길어서 스크롤이 가능하도록 스크롤바가 생기는데, 두 번째 엘리먼트는 컨텐트가 짧아서 스크롤바가 생기지 않는 것을 확인할 수 있습니다.</p>\n<iframe height=\"265\" style=\"width: 100%;\" scrolling=\"no\" title=\"css-overflow-auto\" src=\"https://codepen.io/daleseo/embed/wvgeJKZ?height=265&theme-id=dark&default-tab=html,result\" frameborder=\"no\" loading=\"lazy\" allowtransparency=\"true\" allowfullscreen=\"true\">\n  See the Pen <a href='https://codepen.io/daleseo/pen/wvgeJKZ'>css-overflow-auto</a> by Dale Seo\n  (<a href='https://codepen.io/daleseo'>@daleseo</a>) on <a href='https://codepen.io'>CodePen</a>.\n</iframe>\n<h2 id=\"추가-팁-가로-스크롤\" style=\"position:relative;\"><a href=\"#%EC%B6%94%EA%B0%80-%ED%8C%81-%EA%B0%80%EB%A1%9C-%EC%8A%A4%ED%81%AC%EB%A1%A4\" aria-label=\"추가 팁 가로 스크롤 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[추가 팁] 가로 스크롤</h2>\n<p>주어진 공간을 넘어가는 컨텐트를 가로 방향으로 스크롤해서 보여주고 싶다면 어떻게 해야할까요?\n기본적으로 텍스트나 이미지와 같은 인라인 엘리먼트들은 가로 공간이 부족한 경우 줄바꿈이 되기 때문에, 세로 방향으로 스크롤바가 생깁니다.\n가로 가로 방향으로 스크롤바가 생기게 하고 싶다면 <code>white-space</code> 속성을 <code>nowrap</code>으로 변경하여 줄바꿈이 되지 않도록 하면 됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.lyrics</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">white-space</span><span class=\"token punctuation\">:</span> nowrap<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<iframe height=\"265\" style=\"width: 100%;\" scrolling=\"no\" title=\"css-overflow-x\" src=\"https://codepen.io/daleseo/embed/LYxLWGO?height=265&theme-id=dark&default-tab=html,result\" frameborder=\"no\" loading=\"lazy\" allowtransparency=\"true\" allowfullscreen=\"true\">\n  See the Pen <a href='https://codepen.io/daleseo/pen/LYxLWGO'>css-overflow-x</a> by Dale Seo\n  (<a href='https://codepen.io/daleseo'>@daleseo</a>) on <a href='https://codepen.io'>CodePen</a>.\n</iframe>\n<h2 id=\"마치면서\" style=\"position:relative;\"><a href=\"#%EB%A7%88%EC%B9%98%EB%A9%B4%EC%84%9C\" aria-label=\"마치면서 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>마치면서</h2>\n<p>이상으로 overflow 속성을 활용하여 많은 양의 컨텐트를 제한된 영역에서 여러가지 방법으로 처리해보았습니다.</p>","timeToRead":4,"fields":{"slug":"/css-overflow/","tags":["CSS","overflow"]},"frontmatter":{"title":"[CSS] overflow 속성 사용법","date":"Apr 4, 2021"}},"next":{"fields":{"slug":"/css-position-fixed/"},"frontmatter":{"title":"CSS의 fixed position을 통한 요소의 위치 고정"}}}},"staticQueryHashes":["2168229929","2362167539","3056348342"]}