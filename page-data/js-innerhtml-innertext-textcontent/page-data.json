{
    "componentChunkName": "component---src-templates-detail-template-jsx",
    "path": "/js-innerhtml-innertext-textcontent/",
    "result": {"pageContext":{"previous":null,"node":{"html":"<p>HTML 요소의 내용을 접근할 때 DOM API의 어떤 속성을 하시나요?\n<code>innerHTML</code>? <code>innerText</code>? <code>textContent</code>? 🤔😵‍💫</p>\n<p>이번 포스팅에서는 많은 웹 개발자를 햇갈리게 하는 3가지 속성, <code>innerHTML</code>, <code>innerText</code>, <code>textContent</code>에 대해서 알아보겠습니다.</p>\n<h2 id=\"innerhtml-속성\" style=\"position:relative;\"><a href=\"#innerhtml-%EC%86%8D%EC%84%B1\" aria-label=\"innerhtml 속성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>innerHTML 속성</h2>\n<p>제일 먼저 살펴볼 <code>innerHTML</code> 속성을 통해서는 어떤 HTML 요소 내부에 있는 HTML을 있는 그대로 문자열 형태로 접근할 수 있습니다.</p>\n<p>예를 들어, 다음과 같이 3개의 <code>&#x3C;li></code> 요소로 이루어진 <code>&#x3C;ul></code> 요소가 있다고 가정해봅시다.</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span>수박<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span>딸기<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span>망고<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p><code>&#x3C;ul></code> 요소를 선택한 후 <code>innerHTML</code> 속성에 접근하면, 내부에 있는 3개의 <code>&#x3C;li></code> 요소가 문자열 형태로 얻어집니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> ul <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ul\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>ul<span class=\"token punctuation\">.</span>innerHTML<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token string\">\"\n  &lt;li>수박&lt;/li>\n  &lt;li>딸기&lt;/li>\n  &lt;li>망고&lt;/li>\n\"</span></code></pre></div>\n<p><code>innerHTML</code> 속성을 통해서 HTML 요소의 내용을 읽을 수 있을 뿐만 아니라 다른 내용으로 설정해줄 수 있는데요.\n이 때는 문자열을 HTML로 해석하여 요소 내부에 삽입해줍니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> ul <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ul\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nul<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n  &lt;li>오렌지&lt;/li>\n  &lt;li>파인애플&lt;/li>\n  &lt;li>바나나&lt;/li>\n</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><code>innerHTML</code> 속성을 사용하면 브라우저가 문자열을 HTML로 해석을 하기 때문에 XSS(Cross-site scripting) 공격과 같은 보안 문제를 일으킬 수 있습니다.\n<code>innerHTML</code> 속성을 통해서 <code>&#x3C;script></code> 요소가 포함된 문자열을 설정해줄 경우, 브라우저는 해당 스크립트를 그대로 실행하기 때문입니다.\n만약에 악성 코드가 담긴 스크립트가 실행된다면 큰 문제가 될 수 있겠죠?</p>\n<iframe height=\"300\" style=\"width: 100%;\" scrolling=\"no\" title=\"innerHTML\" src=\"https://codepen.io/daleseo/embed/LEYWVEo?default-tab=js%2Cresult\" frameborder=\"no\" loading=\"lazy\" allowtransparency=\"true\" allowfullscreen=\"true\">\n  See the Pen <a href=\"https://codepen.io/daleseo/pen/LEYWVEo\">\n  innerHTML</a> by Dale Seo (<a href=\"https://codepen.io/daleseo\">@daleseo</a>)\n  on <a href=\"https://codepen.io\">CodePen</a>.\n</iframe>\n<h2 id=\"innertext-속성\" style=\"position:relative;\"><a href=\"#innertext-%EC%86%8D%EC%84%B1\" aria-label=\"innertext 속성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>innerText 속성</h2>\n<p><code>innerText</code> 속성을 통해서는 HTML은 무시하고 화면에 보이는 텍스트에 접근할 수 있습니다.</p>\n<p>예를 들어, 다음과 같이 3개의 <code>&#x3C;li></code> 요소로 이루어진 <code>&#x3C;ul></code> 요소가 있다고 가정해봅시다.\n마지막 <code>&#x3C;li></code> 요소에는 보이지 않은 텍스트가 들어있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span>수박<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span>딸기<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span>망고<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value css language-css\"><span class=\"token property\">display</span><span class=\"token punctuation\">:</span> none<span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">></span></span>(New)<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p><code>&#x3C;ul></code> 요소를 선택한 후 <code>innerText</code> 속성에 접근하면, 내부에 있는 보이는 대로 텍스트가 얻어집니다.\n세 번째 <code>&#x3C;li></code> 요소 안에 들어 있던 <code>(New)</code> 텍스트는 보이지 않기 때문에 결과에 포함되지 않는 부분에 주목하세요.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> ul <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ul\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>ul<span class=\"token punctuation\">.</span>innerText<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token string\">\"수박\n딸기\n망고\"</span></code></pre></div>\n<iframe height=\"300\" style=\"width: 100%;\" scrolling=\"no\" title=\"innerText\" src=\"https://codepen.io/daleseo/embed/RNwpPrW?default-tab=css%2Cresult\" frameborder=\"no\" loading=\"lazy\" allowtransparency=\"true\" allowfullscreen=\"true\">\n  See the Pen <a href=\"https://codepen.io/daleseo/pen/RNwpPrW\">\n  innerText</a> by Dale Seo (<a href=\"https://codepen.io/daleseo\">@daleseo</a>)\n  on <a href=\"https://codepen.io\">CodePen</a>.\n</iframe>\n<h2 id=\"textcontent-속성\" style=\"position:relative;\"><a href=\"#textcontent-%EC%86%8D%EC%84%B1\" aria-label=\"textcontent 속성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>textContent 속성</h2>\n<p><code>textContent</code> 속성은 <code>innerText</code> 속성과 동일하게 HTML 태그를 무시하고 텍스트만 접근합니다.\n하지만 <code>innerText</code> 속성과 달리 숨겨진 요소의 텍스트도 결과에 포함시킨다는 차이가 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> ul <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ul\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>ul<span class=\"token punctuation\">.</span>textContent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token string\">\"\n  수박\n  딸기\n  망고(New)\n\"</span></code></pre></div>\n<iframe height=\"300\" style=\"width: 100%;\" scrolling=\"no\" title=\"textContent\" src=\"https://codepen.io/daleseo/embed/MYWpwjX?default-tab=js%2Cresult\" frameborder=\"no\" loading=\"lazy\" allowtransparency=\"true\" allowfullscreen=\"true\">\n  See the Pen <a href=\"https://codepen.io/daleseo/pen/MYWpwjX\">\n  textContent</a> by Dale Seo (<a href=\"https://codepen.io/daleseo\">@daleseo</a>)\n  on <a href=\"https://codepen.io\">CodePen</a>.\n</iframe>\n<h2 id=\"어떤-것을-사용해야할까\" style=\"position:relative;\"><a href=\"#%EC%96%B4%EB%96%A4-%EA%B2%83%EC%9D%84-%EC%82%AC%EC%9A%A9%ED%95%B4%EC%95%BC%ED%95%A0%EA%B9%8C\" aria-label=\"어떤 것을 사용해야할까 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>어떤 것을 사용해야할까?</h2>\n<ul>\n<li>HTML을 삽입해야 한다면? → innerHTML</li>\n<li>화면에 보이는 텍스트만 가져오고 싶다면? → innerText</li>\n<li>숨겨진 텍스트까지 포함한 모든 내용을 가져오려면? → textContent</li>\n<li>보안이 중요한 경우? → innerText 또는 textContent (XSS 방지)</li>\n</ul>\n<h2 id=\"마치면서\" style=\"position:relative;\"><a href=\"#%EB%A7%88%EC%B9%98%EB%A9%B4%EC%84%9C\" aria-label=\"마치면서 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>마치면서</h2>\n<p>지금까지 <code>innerHTML</code>, <code>innerText</code>, <code>textContent</code>의 미묘한 차이에 대해서 알아보았습니다.\n상황에 맞게 적절한 속성을 선택하여 안전하고 효율적인 코드를 작성하세요!</p>","timeToRead":3,"fields":{"slug":"/js-innerhtml-innertext-textcontent/","tags":["JavaScript","DOM"]},"frontmatter":{"title":"innerHTML, innerText, textContent","date":"Mar 2, 2025"}},"next":{"fields":{"slug":"/gradle/"},"frontmatter":{"title":"Gradle 시작하기"}}}},
    "staticQueryHashes": ["2168229929","2362167539","3056348342"]}