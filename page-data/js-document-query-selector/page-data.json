{"componentChunkName":"component---src-templates-detail-template-jsx","path":"/js-document-query-selector/","result":{"pageContext":{"previous":{"fields":{"slug":"/js-dom-event-handling/"},"frontmatter":{"title":"자바스크립트로 이벤트 처리하기"}},"node":{"html":"<p>2006년에 출시되었던 jQuery는 한 때는 자바스크립트 개발이 곧 jQuery 개발이라고 여겨질 정도로 정도로 상당히 오랫동안 자바스크립트 생태계를 주름잡던 라이브러리입니다.\n하지만 최근에는 React, Angular, Vue.js, Svelte와 같은 모던 자바스크립트 라이브러리에 밀려 주로 레거시(legacy) 코드에서나 미처못해 쓰는 라이브러리로 전략하고 말았는데요.\n아무래도 컴포넌트 기반의 웹 프로그래밍의 대세가 되고 브라우저의 표준화가 전반적으로 개선되고 있어서 앞으로 jQuery의 입지는 점점 더 좁아질 것입니다.</p>\n<p>사실 예전에 jQuery로 많이 하던 대부분의 작업들은 이제 자바스크립트의 DOM API만으로도 충분히 대체할 수 있습니다.\n이번 포스팅에서는 jQuery 없이 순수하게 자바스크립트만을 이용하여 HTML 문서에 특정 요소를 선택하고 조작하는 방법에 대해서 알아보겠습니다.</p>\n<h2 id=\"jquery-jquery-\" style=\"position:relative;\"><a href=\"#jquery-jquery-\" aria-label=\"jquery jquery  permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>jQuery: jQuery(), $()</h2>\n<p>먼저 과거에 jQuery를 이용해서 HTML 문서에서 요소(element)를 어떻게 선택했었는지 간단히 상기해보겠습니다.</p>\n<p>jQuery는 CSS 선택자를 넘기면 해당 선택자에 부합하는 모든 요소를 반환하는 <code>jQuery()</code> 또는 줄여서 <code>$()</code> 함수를 제공했습니다.</p>\n<p>예를 들어, HTML 문서 상에서 <code>&#x3C;p></code> 태그를 사용하고 있는 모든 요소는 다음과 같이 얻을 수 있었습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> $p <span class=\"token operator\">=</span> <span class=\"token function\">jQuery</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"p\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 또는 줄여서 ...</span>\n<span class=\"token keyword\">const</span> $p <span class=\"token operator\">=</span> <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"p\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>참고로 이 함수는 jQuery에서 제공하는 다른 메서드를 계속 연결하여 연쇄적으로 호출을 할 수 있도록 특수한 타입의 객체를 반환합니다. (이러한 프로그래밍 기법을 보통 메서드 체이닝(method chaining)이라고도 합니다.)</p>\n<p>따라서 <code>jQuery()</code>나 <code>$()</code> 함수로 선택한 요소를 대상으로는 JavaScript의 DOM API를 사용할 수 없으며, 이것이 한 번 jQuery로 작성된 코드는 순수 자바스크립트 코드로 변환하기 어려운 이유이고도 합니다.</p>\n<h2 id=\"javascript-queryselector-queryselectorall\" style=\"position:relative;\"><a href=\"#javascript-queryselector-queryselectorall\" aria-label=\"javascript queryselector queryselectorall permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>JavaScript: querySelector(), querySelectorAll()</h2>\n<p>자바스크립트에서는 jQuery와 동일한 방식으로 CSS 선택자를 넘겨서 원하는 HTML 요소를 찾을 수 있도록 <code>querySelector()</code>, <code>querySelectorAll()</code> 함수를 제공하고 있습니다.\n함수 명이 암시하듯이 <code>querySelector()</code> 함수는 선택자에 부합하는 요소 중에서 첫 번째 요소만을 반환하고, <code>querySelectorAll()</code> 함수는 선택자에 부합하는 모든 요소를 반환합니다.</p>\n<p>위에서 jQuery로 작성한 코드를 avaScript의 DOM API를 사용해서 재작성 해보겠습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// 첫번째 요소</span>\n<span class=\"token keyword\">const</span> pEl <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"p\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 여러 요소</span>\n<span class=\"token keyword\">const</span> pEls <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelectorAll</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"p\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>위와 같이 <code>querySelector()</code>나 <code>querySelectorAll()</code> 함수를 사용하면 반환된 HTML 요소를 상대로 자연스럽게 DOM API에서 제공하는 다른 메서드를 사용할 수 있게 됩니다.</p>\n<p>흔히 이렇게 외부 라이브러리를 사용하지 않거나 최소한으로 사용하여 작성한 자바스크립트 코드를 Vanilla JavaScript라고 하는데요.\n어떤 라이브러리나 프레임워크를 사용하더라도 작동이 잘 되는 큰 장점이 있습니다.</p>\n<h2 id=\"텍스트-변경하기\" style=\"position:relative;\"><a href=\"#%ED%85%8D%EC%8A%A4%ED%8A%B8-%EB%B3%80%EA%B2%BD%ED%95%98%EA%B8%B0\" aria-label=\"텍스트 변경하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>텍스트 변경하기</h2>\n<p>지금부터 실제 프로젝트에서 접해볼만한 jQuery 사용 사례를 살펴보도록 하겠습니다.</p>\n<p>다음 <code>&#x3C;h1></code> 요소의 텍스트를 <code>안녕하세요!</code>로 어떻게 바꿀 수 있을까요?</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>title<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>제목 미정<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>먼저 jQuery의 <code>$()</code> 함수를 이용해서 작성해보겠습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> $heading <span class=\"token operator\">=</span> <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"h1#title\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n$heading<span class=\"token punctuation\">.</span><span class=\"token function\">text</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"안녕하세요!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>이제 자바스크립트의 <code>querySelector()</code> 함수를 작성해보겠습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> headingEl <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"h1#title\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nheadingEl<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> <span class=\"token string\">\"안녕하세요!\"</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>jQuery의 <code>text()</code> 함수는 DOM API의 <code>textContent</code> 속성으로 간단하게 대체가 가능함을 알 수 있습니다.</p>\n<iframe height=\"300\" style=\"width: 100%;\" scrolling=\"no\" title=\"js-document-query-selector-querySelector\" src=\"https://codepen.io/daleseo/embed/bGrwvGL?default-tab=js%2Cresult\" frameborder=\"no\" loading=\"lazy\" allowtransparency=\"true\" allowfullscreen=\"true\">\n  See the Pen <a href=\"https://codepen.io/daleseo/pen/bGrwvGL\">\n  js-document-query-selector-querySelector</a> by Dale Seo (<a href=\"https://codepen.io/daleseo\">@daleseo</a>)\n  on <a href=\"https://codepen.io\">CodePen</a>.\n</iframe>\n<h2 id=\"스타일-변경하기\" style=\"position:relative;\"><a href=\"#%EC%8A%A4%ED%83%80%EC%9D%BC-%EB%B3%80%EA%B2%BD%ED%95%98%EA%B8%B0\" aria-label=\"스타일 변경하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>스타일 변경하기</h2>\n<p>예전에는 jQuery로 HTML 요소의 스타일을 변경하곤 했었는데요.</p>\n<p>다음 3개의 <code>&#x3C;div></code> 요소에 파란색 테두리를 적용하고 공백을 <code>24px</code>, 너비를 <code>48px</code>로 설정해볼까요?</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>fruit<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>딸기<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>fruit<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>바나나<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>fruit<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>수박<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>먼저 jQuery의 <code>$()</code> 함수를 이용해서 작성해보겠습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> $fruits <span class=\"token operator\">=</span> <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"div.fruit\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n$fruits<span class=\"token punctuation\">.</span><span class=\"token function\">css</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"border\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"1px solid blue\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n$fruits<span class=\"token punctuation\">.</span><span class=\"token function\">css</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"padding\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"24px\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n$fruits<span class=\"token punctuation\">.</span><span class=\"token function\">css</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"width\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"48px\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>이제 자바스크립트의 <code>querySelectorAll()</code> 함수를 작성해보겠습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> fruitEls <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelectorAll</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"div.fruit\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nfruitEls<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">el</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  el<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>border <span class=\"token operator\">=</span> <span class=\"token string\">\"1px solid blue\"</span><span class=\"token punctuation\">;</span>\n  el<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>padding <span class=\"token operator\">=</span> <span class=\"token string\">\"24px\"</span><span class=\"token punctuation\">;</span>\n  el<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>width <span class=\"token operator\">=</span> <span class=\"token string\">\"48px\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>여기서 주의깊게 볼 점은 jQuery를 사용할 때는 몇개의 요소가 선택이 되던지 일괄적으로 다음 메서드가 적용된다는 것입니다.\n따라서 <code>css()</code> 메서드 한 번 호출할 때 마다 3개의 <code>&#x3C;div></code> 요소에 동일할 스타일이 반영됩니다.</p>\n<p>반면에 자바스크립트의 <code>querySelectorAll()</code> 함수를 사용할 때는 <code>forEach()</code> 함수를 이용해서 루프를 돌면서 각 요소에 스타일을 적용해줘야 합니다.</p>\n<iframe height=\"300\" style=\"width: 100%;\" scrolling=\"no\" title=\"js-document-query-selector-2\" src=\"https://codepen.io/daleseo/embed/bGrwvBM?default-tab=js%2Cresult\" frameborder=\"no\" loading=\"lazy\" allowtransparency=\"true\" allowfullscreen=\"true\">\n  See the Pen <a href=\"https://codepen.io/daleseo/pen/bGrwvBM\">\n  js-document-query-selector-2</a> by Dale Seo (<a href=\"https://codepen.io/daleseo\">@daleseo</a>)\n  on <a href=\"https://codepen.io\">CodePen</a>.\n</iframe>\n<h2 id=\"클래스-변경하기\" style=\"position:relative;\"><a href=\"#%ED%81%B4%EB%9E%98%EC%8A%A4-%EB%B3%80%EA%B2%BD%ED%95%98%EA%B8%B0\" aria-label=\"클래스 변경하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>클래스 변경하기</h2>\n<p>HTML 요소의 클래스를 추가하거나 삭제하는 것도 jQuery로 흔히 했던 작업이었습니다.</p>\n<p>예를 들어, 첫 번째 <code>&#x3C;div></code> 요소로 부터 <code>active</code> 클래스를 삭제하고, 반대로 두 번째와 세 번째 요소에 <code>active</code> 클래스를 추가해보겠습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>fruit active<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>딸기<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>fruit<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>바나나<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>fruit<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>수박<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.active</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> yellow<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>먼저 jQuery로 작성해보겠습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> $fruits <span class=\"token operator\">=</span> <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"div.fruit\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n$fruits<span class=\"token punctuation\">.</span><span class=\"token function\">eq</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">removeClass</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"active\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n$fruits<span class=\"token punctuation\">.</span><span class=\"token function\">eq</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addClass</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"active\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n$fruits<span class=\"token punctuation\">.</span><span class=\"token function\">eq</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toggleClass</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"active\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>이제 자바스크립트로 작성해보겠습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> fruitEls <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelectorAll</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"div.fruit\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nfruitEls<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"active\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nfruitEls<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"active\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nfruitEls<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">toggle</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"active\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>jQuery로 선택된 여러 개의 요소 중 각각의 요소를 접근할 때는 <code>eq()</code> 메서드를 사용하는 반면에 자바스크립트를 사용할 때는 배열을 다루듯이 인덱스를 사용하면 됩니다.</p>\n<p>또한 jQuery 코드는 <code>xxxClass()</code> 형태의 메서드를 호출하는 반면에 자바스크립트 코드는 <code>classList</code> 속성을 통해서 동일한 작업을 수행합니다.</p>\n<iframe height=\"300\" style=\"width: 100%;\" scrolling=\"no\" title=\"js-document-query-selector-3\" src=\"https://codepen.io/daleseo/embed/yLoaKpW?default-tab=js%2Cresult\" frameborder=\"no\" loading=\"lazy\" allowtransparency=\"true\" allowfullscreen=\"true\">\n  See the Pen <a href=\"https://codepen.io/daleseo/pen/yLoaKpW\">\n  js-document-query-selector-3</a> by Dale Seo (<a href=\"https://codepen.io/daleseo\">@daleseo</a>)\n  on <a href=\"https://codepen.io\">CodePen</a>.\n</iframe>\n<h2 id=\"형제부모-요소-선택하기\" style=\"position:relative;\"><a href=\"#%ED%98%95%EC%A0%9C%EB%B6%80%EB%AA%A8-%EC%9A%94%EC%86%8C-%EC%84%A0%ED%83%9D%ED%95%98%EA%B8%B0\" aria-label=\"형제부모 요소 선택하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>형제/부모 요소 선택하기</h2>\n<p>이미 선택된 요소를 기준으로 형제나 부모 요소를 선택하려면 어떻게 해야할까요?</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span>딸기<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>active<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>바나나<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span>수박<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>jQuery에서는 <code>prev()</code> 메서드를 사용해서 이전 요소, <code>next()</code> 메서드를 사용해서 다음 요소, <code>parent()</code> 메서드를 사용해서 부모 요소를 선택할 수 있었습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">$div <span class=\"token operator\">=</span> <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"div.active\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n$div<span class=\"token punctuation\">.</span><span class=\"token function\">css</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"color\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"yellow\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n$div<span class=\"token punctuation\">.</span><span class=\"token function\">prev</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">css</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"color\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"red\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n$div<span class=\"token punctuation\">.</span><span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">css</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"color\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"green\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n$div<span class=\"token punctuation\">.</span><span class=\"token function\">parent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">css</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"background\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"black\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>자바스크립트에서도 동일한 기능할 하는 속성인 <code>nextElementSibling</code>, <code>previousElementSibling</code>, <code>parentElement</code>을 제공하고 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> divEl <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"div.active\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ndivEl<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>color <span class=\"token operator\">=</span> <span class=\"token string\">\"yellow\"</span><span class=\"token punctuation\">;</span>\ndivEl<span class=\"token punctuation\">.</span>nextElementSibling<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>color <span class=\"token operator\">=</span> <span class=\"token string\">\"green\"</span><span class=\"token punctuation\">;</span>\ndivEl<span class=\"token punctuation\">.</span>previousElementSibling<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>color <span class=\"token operator\">=</span> <span class=\"token string\">\"red\"</span><span class=\"token punctuation\">;</span>\ndivEl<span class=\"token punctuation\">.</span>parentElement<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>background <span class=\"token operator\">=</span> <span class=\"token string\">\"black\"</span><span class=\"token punctuation\">;</span></code></pre></div>\n<iframe height=\"300\" style=\"width: 100%;\" scrolling=\"no\" title=\"js-document-query-selector-4\" src=\"https://codepen.io/daleseo/embed/qBXavBE?default-tab=js%2Cresult\" frameborder=\"no\" loading=\"lazy\" allowtransparency=\"true\" allowfullscreen=\"true\">\n  See the Pen <a href=\"https://codepen.io/daleseo/pen/qBXavBE\">\n  js-document-query-selector-4</a> by Dale Seo (<a href=\"https://codepen.io/daleseo\">@daleseo</a>)\n  on <a href=\"https://codepen.io\">CodePen</a>.\n</iframe>\n<h2 id=\"하위-요소-탐색하기\" style=\"position:relative;\"><a href=\"#%ED%95%98%EC%9C%84-%EC%9A%94%EC%86%8C-%ED%83%90%EC%83%89%ED%95%98%EA%B8%B0\" aria-label=\"하위 요소 탐색하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>하위 요소 탐색하기</h2>\n<p>마지막으로 살펴본 사례는 이미 선택된 요소의 하위에 있는 요소를 탐색하는 경우입니다.</p>\n<p>다음 HTML 코드에서 <code>&#x3C;form></code> 요소를 먼저 선택하고, 그 아래에 있는 <code>&#x3C;input></code> 요소의 값을 입력해보겠습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>form</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span><span class=\"token punctuation\">></span></span>이메일<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>email<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span><span class=\"token punctuation\">></span></span>비밀번호<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>password<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>form</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>jQuery에서는 보통 <code>find()</code> 메서드를 사용해서 이미 선택된 요소 하위에 있는 요소를 선택할 수 있었습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> $form <span class=\"token operator\">=</span> <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"form\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> $email <span class=\"token operator\">=</span> $form<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token string\">'input[type=\"email\"]'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n$email<span class=\"token punctuation\">.</span><span class=\"token function\">val</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"user@test.com\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> $password <span class=\"token operator\">=</span> $form<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token string\">'input[type=\"password\"]'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n$password<span class=\"token punctuation\">.</span><span class=\"token function\">val</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"1234\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>자바스크립트에서는 <code>querySelector()</code> 함수나 <code>querySelectorAll()</code> 함수를 문서(document) 뿐만 아니라 요소(element)를 대상으로도 호출할 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> formEl <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"form\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> emailEl <span class=\"token operator\">=</span> formEl<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'input[type=\"email\"]'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nemailEl<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> <span class=\"token string\">\"user@test.com\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> passwordEl <span class=\"token operator\">=</span> formEl<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'input[type=\"password\"]'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\npasswordEl<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> <span class=\"token string\">\"1234\"</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><code>&#x3C;input></code> 요소의 값을 설정할 때, jQuery 코드는 <code>val()</code> 함수를 자바스크립트 코드는 <code>value</code> 속성을 사용하는 부분 주의하세요.</p>\n<iframe height=\"300\" style=\"width: 100%;\" scrolling=\"no\" title=\"js-document-query-selector-5\" src=\"https://codepen.io/daleseo/embed/GRvjxBx?default-tab=js%2Cresult\" frameborder=\"no\" loading=\"lazy\" allowtransparency=\"true\" allowfullscreen=\"true\">\n  See the Pen <a href=\"https://codepen.io/daleseo/pen/GRvjxBx\">\n  js-document-query-selector-5</a> by Dale Seo (<a href=\"https://codepen.io/daleseo\">@daleseo</a>)\n  on <a href=\"https://codepen.io\">CodePen</a>.\n</iframe>\n<h2 id=\"마치면서\" style=\"position:relative;\"><a href=\"#%EB%A7%88%EC%B9%98%EB%A9%B4%EC%84%9C\" aria-label=\"마치면서 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>마치면서</h2>\n<p>이상으로 jQuery에서 하던 HTML 요소를 선택하고 조작하는 코드를 어떻게 순수하게 자바스크립트 코드로 대체할 수 있는지에 대해서 살펴보았습니다.\njQuery의 API가 자바스크립트의 DOM API와 비슷한 것 같으면서도 살짝씩 달라서 좀 햇갈리시죠? 😓\n예제 코드를 직접 작성하시다보면 금방 익숙해지시실 거라고 생각합니다.</p>\n<p>jQuery의 예처럼 라이브러리 성쇄는 트랜드에 매우 민감합니다.\n지금 잘 나가는 React도 언제가는 더 핫한 라이브러리로 인해 인기가 떨어지겠지요?\n이럴수록 자바스크립트 본연의 기능을 잘 활용할 줄 아는 게 더욱 중요하지 않을까 생각해보면서 포스팅을 마무리하겠습니다.</p>","timeToRead":7,"fields":{"slug":"/js-document-query-selector/","tags":["JavaScript","DOM","jQuery","querySelector","querySelectorAll"]},"frontmatter":{"title":"jQuery 없이 자바스크립트만으로 HTML 요소 조작하기","date":"Oct 21, 2021"}},"next":{"fields":{"slug":"/js-package-manager/"},"frontmatter":{"title":"자바스크립트 패키지 매니저: npm vs. Yarn"}}}},"staticQueryHashes":["2168229929","2362167539","3056348342"]}