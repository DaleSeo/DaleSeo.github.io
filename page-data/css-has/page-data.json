{
    "componentChunkName": "component---src-templates-detail-template-jsx",
    "path": "/css-has/",
    "result": {"pageContext":{"previous":null,"node":{"html":"<p>CSS에서 자식이나 후손 요소는 아주 쉽게 선택할 수 있지만, 부모나 조상 요소를 선택하는 것은 불가능한 일이 었습니다.\n그래서 오랫동안 자바스크립트를 동원해서 이러한 문제를 해결하곤 했었죠.</p>\n<p>하지만 CSS에 <code>:has()</code> 가상 클래스가 추가되면서 이것도 이제 옛말이 되었습니다.\n웹 개발자들이 많이 기다렸던 만큼 2023년 <a href=\"https://2023.stateofcss.com/en-US/awards/\">State of JS</a> 설문 조사 가장 많이 채택된 기능으로 뽑히고도 했었죠.</p>\n<p><img src=\"https://res.cloudinary.com/daleseo/image/upload/v1731028483/state-of-css-2023-awards.png\" alt=\"State of JS 2023 Awards\"></p>\n<p>이번 포스팅에서는 비교적 최근에 CSS에 추가된 기능인 <code>:has()</code> 가상 클래스를 어떻게 사용하는지 알아보도록 하겠습니다.</p>\n<blockquote>\n<p>본 포스팅은 CSS 선택자(selector)와 대한 기본적인 이해가 필요합니다. 관련해서는 제가 <a href=\"/css-selectors/\">별도 포스팅</a>에서 다루고 있으니 참고하세요.</p>\n</blockquote>\n<h2 id=\"기본-문법\" style=\"position:relative;\"><a href=\"#%EA%B8%B0%EB%B3%B8-%EB%AC%B8%EB%B2%95\" aria-label=\"기본 문법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>기본 문법</h2>\n<p>CSS의 <code>:has()</code> 가상 클래스는 결합자(combinator)처럼 기본적으로 2개의 선택자를 필요로 합니다.\n첫 번째 선택자로 선택된 HTML 요소의 안에 두 번째 선택자로 선택이 가능한 HTML 요소가 있다면 <strong>첫 번째 선택자</strong>로 선택된 요소에 선언한 스타일이 적용됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">선택자1:has(선택자2)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">/* 스타일 선언 */</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>네, 맞습니다. 두 번째 선택자가 아닌 첫 번째 선택자에 스타일에 적용됩니다.\n이 점이 CSS의 결합자와의 가장 큰 차이점이며, 기존에 CSS로 할 수 없었던 부모나 조상 요소를 선택하는 것이 가능해진 결정적인 이유입니다.</p>\n<p>예를 들어, 내부에 <code>&#x3C;a></code> 요소가 있는 <code>&#x3C;p></code> 요소를 선택하여 스타일하고 싶다면 다음과 같이 CSS를 작성할 수 있고요.</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">p:has(a)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">/* 스타일 선언 */</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>비활성화 된 <code>&#x3C;input></code> 요소가 있는 <code>&#x3C;form></code> 요소를 선택하여 스타일하고 싶다면 싶다면 다음과 같이 CSS를 작성할 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">form:has(input:disabled)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">/* 스타일 선언 */</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>조상 요소를 선택할 때 가장 많이 사용되지만, 엄밀히 얘기하면 <code>:has()</code> 가상 클래스의 활용 범위는 더 넓습니다.\nCSS 결합자에서 사용하는 <code>></code>, <code>+</code>, <code>~</code> 기호를 잘 활용하면, 부모 요소, 하나의 이전 형제, 여러 이전 형제도 선택할 수 있습니다.\n이 부분에 대해서는 뒤에서 좀 더 설명드리도록 하겠습니다.</p>\n<blockquote>\n<p>CSS 결합자에 대해서는 <a href=\"/css-combinators/\">별도 포스팅</a>에서 자세히 다루고 있으니 참고하세요.</p>\n</blockquote>\n<h2 id=\"조상-요소-선택\" style=\"position:relative;\"><a href=\"#%EC%A1%B0%EC%83%81-%EC%9A%94%EC%86%8C-%EC%84%A0%ED%83%9D\" aria-label=\"조상 요소 선택 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>조상 요소 선택</h2>\n<p>CSS에서 후손 요소를 선택하여 스타일하는 것은 아주 간단한 일입니다.\n두 개의 선택자를 공백 문자로 연결해주면 첫 번째 선택자 안에서 두 번째 선택자와 부합하는 요소를 선택됩니다.</p>\n<p>예를 들어, 다음과 같은 중첩된 상자가 있다고 가정해보겠습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>out<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>in<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p><code>out</code> 클래스가 달린 요소 안에 있는 <code>in</code> 클래스가 달린 요소의 배경을 빨간색으로 칠하는 것은 쉽습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.out .in</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> red<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>그런데 반대로 <code>in</code> 클래스가 달린 요소의 밖에 있는 <code>out</code> 클래스가 달린 요소를 선택하여 스타일하려면 어떻게 해야할까요? 🤔</p>\n<p>예전에 이런 작업은 자바스크립트가 없이는 거의 불가능했었는데요.\n이제는 CSS <code>:has()</code> 가상 클래스가 있으니 쉽게 해결할 수 있습니다.</p>\n<p>CSS <code>:has()</code> 가상 클래스를 통해서 <code>in</code> 클래스가 달린 요소의 밖에 있는 <code>out</code> 클래스가 달린 요소의 배경을 초록색으로 칠해보겠습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.out:has(.in)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> green<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<iframe height=\"300\" style=\"width: 100%;\" scrolling=\"no\" title=\"css-has-parent\" src=\"https://codepen.io/daleseo/embed/PoMxYYr?default-tab=css%2Cresult\" frameborder=\"no\" loading=\"lazy\" allowtransparency=\"true\" allowfullscreen=\"true\">\n  See the Pen <a href=\"https://codepen.io/daleseo/pen/PoMxYYr\">\n  css-has-parent</a> by Dale Seo (<a href=\"https://codepen.io/daleseo\">@daleseo</a>)\n  on <a href=\"https://codepen.io\">CodePen</a>.\n</iframe>\n<p>만약에 <code>in</code> 클래스가 달린 요소의 직계 부모 요소를 상대로만 제한하고 싶다면 <code>></code> 기호를 사용하면 됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.out:has(> .in)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> green<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"이전-요소-선택\" style=\"position:relative;\"><a href=\"#%EC%9D%B4%EC%A0%84-%EC%9A%94%EC%86%8C-%EC%84%A0%ED%83%9D\" aria-label=\"이전 요소 선택 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>이전 요소 선택</h2>\n<p>CSS 결합자를 사용해서 다음 요소를 어렵지 않게 선택하여 스타일할 수 있습니다.\n두 개의 선택자를 <code>+</code> 기호로 연결해주면 첫 번째 선택자 다음으로 나오는 요소가 두 번째 선택자와 부합하면 선택이 되죠.</p>\n<p>예를 들어, 다음과 같은 중첩된 상자가 있다고 가정해보겠습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>left<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>right<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p><code>left</code> 클래스가 달린 요소 다음에 오는 <code>right</code> 클래스가 달린 요소의 배경을 빨간색으로 칠해보겠습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.left + .right</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> red<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>반대로 <code>right</code> 클래스가 달린 요소의 앞에 있는 <code>left</code> 클래스가 달린 요소를 선택하여 스타일하려면 어떻게 해야할까요? 🤔</p>\n<p>마찬가지로 CSS <code>:has()</code> 가상 클래스를 이용하면 어렵지 않습니다.</p>\n<p><code>right</code> 클래스가 달린 요소의 앞에 있는 <code>left</code> 클래스가 달린 요소의 배경을 초록색으로 칠해보겠습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.left:has(+ .right)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> green<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<iframe height=\"300\" style=\"width: 100%;\" scrolling=\"no\" title=\"css-has-previous\" src=\"https://codepen.io/daleseo/embed/ZEgmzbK?default-tab=css%2Cresult\" frameborder=\"no\" loading=\"lazy\" allowtransparency=\"true\" allowfullscreen=\"true\">\n  See the Pen <a href=\"https://codepen.io/daleseo/pen/ZEgmzbK\">\n  css-has-previous</a> by Dale Seo (<a href=\"https://codepen.io/daleseo\">@daleseo</a>)\n  on <a href=\"https://codepen.io\">CodePen</a>.\n</iframe>\n<p><code>+</code> 기호 대신에 <code>~</code> 기호를 사용하면 바로 앞 뿐만 아니라 앞에 있는 모든 형제 요소를 선택할 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.left:has(~ .right)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> green<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"자식-상태에-따른-부모-스타일\" style=\"position:relative;\"><a href=\"#%EC%9E%90%EC%8B%9D-%EC%83%81%ED%83%9C%EC%97%90-%EB%94%B0%EB%A5%B8-%EB%B6%80%EB%AA%A8-%EC%8A%A4%ED%83%80%EC%9D%BC\" aria-label=\"자식 상태에 따른 부모 스타일 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>자식 상태에 따른 부모 스타일</h2>\n<p><code>:has()</code> 가상 클래스의 기본적인 사용법을 배웠으니 이 번에는 좀 더 재미있는 예제를 보여드릴까요?</p>\n<p>자식 요소의 상태에 따라서 부모 요소의 스타일을 변경해줘야 할 때 <code>:has()</code> 가상 클래스가 특히 유용하게 사용될 수 있는데요.</p>\n<p>예를 들어, 3개의 색깔 버튼을 감싸고 있는 상자가 있다고 가정해보겠습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>red<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>빨강<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>green<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>초록<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>blue<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>파랑<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>각 버튼을 누르고 있을 때 상자의 색깔이 이애 따라 바뀌게 하려면 어떻게 해야할까요?</p>\n<p>부모 요소인 상자에 스타일을 적용해야 하니 <code>:has()</code> 가상 클래스를 사용해야할텐데요.\n바로 <code>:active</code> 가상 클래스를 사용해서 자식 요소인 각 버튼이 활성화된 상태를 감지하면 되겠죠?\n이 선택자를 <code>:has()</code> 가상 클래스의 인자로 넘겨주면 됩니다!</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">div:has(.red:active)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> red<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">div:has(.green:active)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> green<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">div:has(.blue:active)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> blue<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>아래 웹 페이지에서 각 버튼을 누르고 계시면 상자의 배경색이 바뀌는 것을 보실 수 있으실 겁니다.</p>\n<iframe height=\"300\" style=\"width: 100%;\" scrolling=\"no\" title=\"css-has-active\" src=\"https://codepen.io/daleseo/embed/bGXmXXG?default-tab=css%2Cresult\" frameborder=\"no\" loading=\"lazy\" allowtransparency=\"true\" allowfullscreen=\"true\">\n  See the Pen <a href=\"https://codepen.io/daleseo/pen/bGXmXXG\">\n  Untitled</a> by Dale Seo (<a href=\"https://codepen.io/daleseo\">@daleseo</a>)\n  on <a href=\"https://codepen.io\">CodePen</a>.\n</iframe>\n<h2 id=\"마치면서\" style=\"position:relative;\"><a href=\"#%EB%A7%88%EC%B9%98%EB%A9%B4%EC%84%9C\" aria-label=\"마치면서 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>마치면서</h2>\n<p>지금까지 CSS에 추가된 <code>:has()</code> 가상 클래스 어떻게 사용하는지 실습을 통해서 함께 살펴보았습니다.</p>\n<p><code>:has()</code> 가상 클래스는 부모 요소나 이전 요소를 선택할 수 있게 해주는 아주 유용한 기능입니다.\n대부분의 모던 브라우저에서 지원되는 기능이니 실무에서 잘 활용하실 수 있으셨으면 좋겠습니다.</p>","timeToRead":5,"fields":{"slug":"/css-has/","tags":["HTML","CSS","selectors","pseudo class"]},"frontmatter":{"title":"CSS의 :has() 가상 클래스 사용법","date":"Nov 6, 2024"}},"next":{"fields":{"slug":"/js-group-by/"},"frontmatter":{"title":"자바스크립트의 groupBy() API 사용법"}}}},
    "staticQueryHashes": ["2168229929","2362167539","3056348342"]}