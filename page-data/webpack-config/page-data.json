{"componentChunkName":"component---src-templates-detail-template-jsx","path":"/webpack-config/","result":{"pageContext":{"previous":{"fields":{"slug":"/webpack-development/"},"frontmatter":{"title":"웹팩(Webpack) 개발 편의 기능"}},"node":{"html":"<p>React나 Vue, Angular와 같은 자바스크립트 프레임워크를 기반으로 프로젝트를 하다보면 <code>webpack.config.js</code>라는 파일과 자주 마주치게 됩니다. 바로 웹팩 설정 파일인데요. 이번 포스팅에서는 이 설정 파일을 기본으로 한 웹팩 기본 설정법에 대해서 알아보도록 하겠습니다.</p>\n<p>웹팩에 대한 기본 개념이나 사용법을 모르시는 분은 <a href=\"/webpack-basics\">지난 포스팅</a>를 먼저 읽어보시면 더 따라가기 쉬우실 겁니다.</p>\n<h2 id=\"설정-파일\" style=\"position:relative;\"><a href=\"#%EC%84%A4%EC%A0%95-%ED%8C%8C%EC%9D%BC\" aria-label=\"설정 파일 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>설정 파일</h2>\n<p>웹팩을 사용할 때 반드시 설정 파일이 필요하지는 않지만, 대부분의 경우에는 설정 파일을 사용합니다. 왜냐하면 터미널에서 웹팩 커맨드를 실행할 때 마다 모든 옵션들을 붙여주는게 번거롭고, 설정 파일을 소스 저장소에 올려두면 다른 개발자들은 크게 설정이 신경쓰지 않고 협업을 할 수 있기 때문입니다.</p>\n<p>먼저 디렉터리를 만들고 NPN 프로젝트를 초기화 후, 웹팩과 웹팩 CLI 패키지를 설치합니다. 그런 다음, 웹팩에서 디폴트로 인지하는 설정 파일 이름인 <code>webpack.config.js</code>로 빈 설정 파일을 하나 만들면 초기 세팅 완료입니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">mkdir</span> webpack-config\n$ <span class=\"token builtin class-name\">cd</span> webpack-config\n$ <span class=\"token function\">npm</span> init -y\n$ <span class=\"token function\">npm</span> i -D webpack webpack-cli\n$ <span class=\"token function\">touch</span> webpack.config.js</code></pre></div>\n<ul>\n<li>webpack.config.js</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>참고로 설정 파일의 이름을 디폴트가 아닌 다른 이름을 사용하고 싶은 경우에는 웹팩 커맨드 실행 시 다음과 같이 <code>--config</code> 옵션을 주시면 됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ npx webpack --config <span class=\"token punctuation\">[</span>설정 파일 이름<span class=\"token punctuation\">]</span></code></pre></div>\n<h2 id=\"entry-설정\" style=\"position:relative;\"><a href=\"#entry-%EC%84%A4%EC%A0%95\" aria-label=\"entry 설정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Entry 설정</h2>\n<p>웹팩은 기본적으로 여러 개의 자바스크립트 모듈을 하나의 파일로 묶어내는 번들러입니다. 따라서 웹팩은 다른 모듈을 사용하고 있는 최상위 자바스크립트 파일이 어디에 있는지 알아야 하며, 설정 파일에서 이를 <code>Entry</code> 속성으로 명시합니다. 웹팩은 이 <code>Entry</code> 속성에 명시된 파일을 기준으로 의존성 트리를 만들어 하나의 번들 파일을 만들어 내게 됩니다. <code>Entry</code> 설정의 기본값은 <code>./src/index.js</code>이고, 예제 프로젝트에서는 이를 간단하게 <code>./script.js</code>로 변경해보도록 하겠습니다.</p>\n<ul>\n<li>webpack.config.js</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  entry<span class=\"token operator\">:</span> <span class=\"token string\">\"./script.js\"</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>그리고 <code>script.js</code> 파일에 다음과 같이 브라우져 화면에 간단한 문자열을 표시하는 자바스크립트 코드를 작성합니다.</p>\n<ul>\n<li>script.js</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> message <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createTextNode</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Webpack Example\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ndocument<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>그 다음, 터미널에서 <code>npx webpack</code> 커맨드를 실행하면 웹팩이 <code>script.js</code> 파일을 읽어들여 <code>dist</code> 디렉터리에 <code>main.js</code> 파일로 묶어냅니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ npx webpack\nnpx: installed <span class=\"token number\">1</span> <span class=\"token keyword\">in</span> <span class=\"token number\">3</span>.571s\nPath must be a string. Received undefined\nC:<span class=\"token punctuation\">\\</span>workspace<span class=\"token punctuation\">\\</span>webpack-examples<span class=\"token punctuation\">\\</span>webpack-config<span class=\"token punctuation\">\\</span>node_modules<span class=\"token punctuation\">\\</span>webpack<span class=\"token punctuation\">\\</span>bin<span class=\"token punctuation\">\\</span>webpack.js\nHash: 99f99481de3c30b2f031\nVersion: webpack <span class=\"token number\">4.16</span>.3\nTime: 682ms\nBuilt at: <span class=\"token number\">2018</span>-07-14 <span class=\"token number\">20</span>:00:40\n  Asset        Size  Chunks             Chunk Names\nmain.js  <span class=\"token number\">1010</span> bytes       <span class=\"token number\">0</span>  <span class=\"token punctuation\">[</span>emitted<span class=\"token punctuation\">]</span>  main\nEntrypoint main <span class=\"token operator\">=</span> main.js\n<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> ./script.js <span class=\"token number\">94</span> bytes <span class=\"token punctuation\">{</span><span class=\"token number\">0</span><span class=\"token punctuation\">}</span> <span class=\"token punctuation\">[</span>built<span class=\"token punctuation\">]</span></code></pre></div>\n<p><code>dist/main.js</code> 파일을 열어보면 웹팩이 Uglify/Minify통해 읽기 어려운 한 줄의 코드로 바꿔놓았음을 확인할 수 있습니다.</p>\n<ul>\n<li>dist/main.js</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token operator\">!</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> t <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">n</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">r</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">[</span>r<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> t<span class=\"token punctuation\">[</span>r<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>exports<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> o <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">[</span>r<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> i<span class=\"token operator\">:</span> r<span class=\"token punctuation\">,</span> l<span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> exports<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> e<span class=\"token punctuation\">[</span>r<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>o<span class=\"token punctuation\">.</span>exports<span class=\"token punctuation\">,</span> o<span class=\"token punctuation\">,</span> o<span class=\"token punctuation\">.</span>exports<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>o<span class=\"token punctuation\">.</span>l <span class=\"token operator\">=</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> o<span class=\"token punctuation\">.</span>exports<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">.</span>m <span class=\"token operator\">=</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">.</span>c <span class=\"token operator\">=</span> t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">d</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e<span class=\"token punctuation\">,</span> t<span class=\"token punctuation\">,</span> r</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      n<span class=\"token punctuation\">.</span><span class=\"token function\">o</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span> t<span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">defineProperty</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span> t<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> enumerable<span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> get<span class=\"token operator\">:</span> r <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">r</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token string\">\"undefined\"</span> <span class=\"token operator\">!=</span> <span class=\"token keyword\">typeof</span> Symbol <span class=\"token operator\">&amp;&amp;</span>\n        Symbol<span class=\"token punctuation\">.</span>toStringTag <span class=\"token operator\">&amp;&amp;</span>\n        Object<span class=\"token punctuation\">.</span><span class=\"token function\">defineProperty</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span> Symbol<span class=\"token punctuation\">.</span>toStringTag<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> value<span class=\"token operator\">:</span> <span class=\"token string\">\"Module\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        Object<span class=\"token punctuation\">.</span><span class=\"token function\">defineProperty</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span> <span class=\"token string\">\"__esModule\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> value<span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">t</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e<span class=\"token punctuation\">,</span> t</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span> <span class=\"token operator\">&amp;</span> t <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>e <span class=\"token operator\">=</span> <span class=\"token function\">n</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span> <span class=\"token operator\">&amp;</span> t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> e<span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token number\">4</span> <span class=\"token operator\">&amp;</span> t <span class=\"token operator\">&amp;&amp;</span> <span class=\"token string\">\"object\"</span> <span class=\"token operator\">==</span> <span class=\"token keyword\">typeof</span> e <span class=\"token operator\">&amp;&amp;</span> e <span class=\"token operator\">&amp;&amp;</span> e<span class=\"token punctuation\">.</span>__esModule<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> e<span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">var</span> r <span class=\"token operator\">=</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>\n        <span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">.</span><span class=\"token function\">r</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        Object<span class=\"token punctuation\">.</span><span class=\"token function\">defineProperty</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">,</span> <span class=\"token string\">\"default\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> enumerable<span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> value<span class=\"token operator\">:</span> e <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token number\">2</span> <span class=\"token operator\">&amp;</span> t <span class=\"token operator\">&amp;&amp;</span> <span class=\"token string\">\"string\"</span> <span class=\"token operator\">!=</span> <span class=\"token keyword\">typeof</span> e<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> o <span class=\"token keyword\">in</span> e<span class=\"token punctuation\">)</span>\n          n<span class=\"token punctuation\">.</span><span class=\"token function\">d</span><span class=\"token punctuation\">(</span>\n            r<span class=\"token punctuation\">,</span>\n            o<span class=\"token punctuation\">,</span>\n            <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">t</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n              <span class=\"token keyword\">return</span> e<span class=\"token punctuation\">[</span>t<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> o<span class=\"token punctuation\">)</span>\n          <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">return</span> r<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">n</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">var</span> t <span class=\"token operator\">=</span>\n        e <span class=\"token operator\">&amp;&amp;</span> e<span class=\"token punctuation\">.</span>__esModule\n          <span class=\"token operator\">?</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n              <span class=\"token keyword\">return</span> e<span class=\"token punctuation\">.</span>default<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n          <span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n              <span class=\"token keyword\">return</span> e<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">return</span> n<span class=\"token punctuation\">.</span><span class=\"token function\">d</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">,</span> <span class=\"token string\">\"a\"</span><span class=\"token punctuation\">,</span> t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> t<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">o</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e<span class=\"token punctuation\">,</span> t</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function\">hasOwnProperty</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span> t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">.</span>p <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">n</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">.</span>s <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n  <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e<span class=\"token punctuation\">,</span> t</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> n <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createTextNode</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Webpack Example\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"output-설정\" style=\"position:relative;\"><a href=\"#output-%EC%84%A4%EC%A0%95\" aria-label=\"output 설정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Output 설정</h2>\n<p>위 섹션에서 웹팩이 번들링 결과를 <code>dist/main.js</code> 파일로 묶어내는 이유는 설정이 <code>dist/main.js</code>이기 때문입니다. 설정 파일의 <code>Output</code> 속성을 통해서 이 값을 다른 디렉터리와 파일로 변경할 수 있습니다. 예제 프로젝트에서는 <code>dist/main.js</code> 대신에 더 간단히 <code>output.js</code> 파일로 묶어내도록 <code>Output</code> 설정을 변경해보겠습니다. <code>Entry</code> 설정은 항상 프로젝트 디렉터리 내부이기 때문에 상대 경로로 하는 반면에, <code>Output</code> 설정은 항상 프로젝트 디렉터리 내부라는 보장이 없으므로 절대 경로로 한는 점에 주의 바랍니다.</p>\n<ul>\n<li>webpack.config.js</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  entry<span class=\"token operator\">:</span> <span class=\"token string\">\"./script.js\"</span><span class=\"token punctuation\">,</span>\n  output<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    path<span class=\"token operator\">:</span> __dirname<span class=\"token punctuation\">,</span>\n    filename<span class=\"token operator\">:</span> <span class=\"token string\">\"build.js\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>참고로 <code>__dirname</code>은 NodeJS에서 현재 프로젝트 디렉터리를 의미합니다. 이제 웹팩을 실행하면 프로젝트 최상위 디렉터리에 <code>build.js</code> 파일이 생성되었음을 확인할 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ npx webpack\nnpx: installed <span class=\"token number\">1</span> <span class=\"token keyword\">in</span> <span class=\"token number\">4</span>.402s\nPath must be a string. Received undefined\nC:<span class=\"token punctuation\">\\</span>workspace<span class=\"token punctuation\">\\</span>webpack-examples<span class=\"token punctuation\">\\</span>webpack-config<span class=\"token punctuation\">\\</span>node_modules<span class=\"token punctuation\">\\</span>webpack<span class=\"token punctuation\">\\</span>bin<span class=\"token punctuation\">\\</span>webpack.js\nHash: 3cba8e4507f3a3e4998e\nVersion: webpack <span class=\"token number\">4.16</span>.3\nTime: 1230ms\nBuilt at: <span class=\"token number\">2018</span>-07-14 <span class=\"token number\">20</span>:19:39\n    Asset        Size  Chunks             Chunk Names\nbuild.js  <span class=\"token number\">1010</span> bytes       <span class=\"token number\">0</span>  <span class=\"token punctuation\">[</span>emitted<span class=\"token punctuation\">]</span>  main\nEntrypoint main <span class=\"token operator\">=</span> build.js\n<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> ./script.js <span class=\"token number\">94</span> bytes <span class=\"token punctuation\">{</span><span class=\"token number\">0</span><span class=\"token punctuation\">}</span> <span class=\"token punctuation\">[</span>built<span class=\"token punctuation\">]</span></code></pre></div>\n<p>다음과 같이 <code>build.js</code>를 참조하는 <code>index.html</code> 파일을 작성 후 브라우져에서 열어보면 화면에 <code>Webpack Example</code>이 출력될 것입니다.</p>\n<ul>\n<li>index.html</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">html</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span>Webpack Example<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>./build.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<h2 id=\"loader-설정\" style=\"position:relative;\"><a href=\"#loader-%EC%84%A4%EC%A0%95\" aria-label=\"loader 설정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Loader 설정</h2>\n<p>웹팩은 자바스크립트 뿐만 아니라, <code>Loader</code>를 이용하여 CSS나 이미지, 웹폰트, JSX, VUE 등 다양한 종류의 파일을 함께 번들링할 수 있습니다. (개인적으로 웹팩의 가장 강력한 기능이라고 생각합니다.) 본 예제에서는 가장 자주 사용되는 CSS 파일에 대해서만 설정을 해보겠습니다.</p>\n<p>먼저, 웹팩이 CSS 파일을 처리할 수 있게 만들어주는 <code>style-loader</code>와 <code>css-loader</code> 패키지를 설치합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">npm</span> i --D style-loader css-loader</code></pre></div>\n<p>그리고 브라우져 글씨를 모두 빨간색으로 만드는 간단한 CSS 파일을 작성합니다.</p>\n<ul>\n<li>style.css</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">body</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> red<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>그런 다음, <code>script.js</code> 파일에서 마치 JS 파일을 임포트하듯이 CSS 파일을 임포트 합니다. 여기서 주의 사항은 반드시 <code>style.css</code> 앞에 <code>./</code>를 붙여줘야 한다는 점입니다. 그렇지 않으면 프로젝트 최상위 디렉터리가 아닌 <code>node_modules</code> 디렉터리를 뒤지기 때문입니다.</p>\n<ul>\n<li>script.js</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token string\">\"./style.css\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> message <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createTextNode</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Webpack Example\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ndocument<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>마지막으로 CSS 파일이 방금 설치한 두개의 모듈에 의해서 처리될 수 있도록 웹팩 설정을 해줘야 합니다. 설정 파일을 열어 <code>module</code> 속성을 추가하고, 그 안에 <code>rules</code> 속성을 통해 처리 규칙을 등록합니다. <code>test</code> 항목에 정의된 정규식에 매칭되는 파일은 <code>use</code> 항목에 등록된 로더를 통해서 처리되게 됩니다. 본 예제에서는 CSS 파일 처리를 위해서 <code>test</code> 항목에 정규식으로 확장자가 <code>css</code>인 파일만 인식하도록 설정하고, <code>use</code> 항목에 <code>style-loader</code>와 <code>css-loader</code>를 차례로 나열하였습니다.</p>\n<ul>\n<li>webpack.config.js</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  entry<span class=\"token operator\">:</span> <span class=\"token string\">\"./script.js\"</span><span class=\"token punctuation\">,</span>\n  output<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    path<span class=\"token operator\">:</span> __dirname<span class=\"token punctuation\">,</span>\n    filename<span class=\"token operator\">:</span> <span class=\"token string\">\"build.js\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  module<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    rules<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n      <span class=\"token punctuation\">{</span>\n        test<span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\\.css$</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span>\n        use<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"style-loader\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"css-loader\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>마지막으로 다시 웹팩을 실행 후에 다시 <code>index.html</code> 파일을 브라우져에서 열어보면 <code>Webpack Example</code>이 붉은색 글씨로 표시될 것입니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ npx webpack\nnpx: installed <span class=\"token number\">1</span> <span class=\"token keyword\">in</span> <span class=\"token number\">2</span>.834s\nPath must be a string. Received undefined\nC:<span class=\"token punctuation\">\\</span>workspace<span class=\"token punctuation\">\\</span>webpack-examples<span class=\"token punctuation\">\\</span>webpack-config<span class=\"token punctuation\">\\</span>node_modules<span class=\"token punctuation\">\\</span>webpack<span class=\"token punctuation\">\\</span>bin<span class=\"token punctuation\">\\</span>webpack.js\nHash: 5ac38650d299445c85fc\nVersion: webpack <span class=\"token number\">4.16</span>.3\nTime: 1042ms\nBuilt at: <span class=\"token number\">2018</span>-07-14 <span class=\"token number\">20</span>:58:41\n   Asset      Size  Chunks             Chunk Names\nbuild.js  <span class=\"token number\">6.74</span> KiB       <span class=\"token number\">0</span>  <span class=\"token punctuation\">[</span>emitted<span class=\"token punctuation\">]</span>  main\nEntrypoint main <span class=\"token operator\">=</span> build.js\n<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> ./script.js <span class=\"token number\">118</span> bytes <span class=\"token punctuation\">{</span><span class=\"token number\">0</span><span class=\"token punctuation\">}</span> <span class=\"token punctuation\">[</span>built<span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> ./style.css <span class=\"token number\">1.04</span> KiB <span class=\"token punctuation\">{</span><span class=\"token number\">0</span><span class=\"token punctuation\">}</span> <span class=\"token punctuation\">[</span>built<span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> ./node_modules/css-loader<span class=\"token operator\">!</span>./style.css <span class=\"token number\">185</span> bytes <span class=\"token punctuation\">{</span><span class=\"token number\">0</span><span class=\"token punctuation\">}</span> <span class=\"token punctuation\">[</span>built<span class=\"token punctuation\">]</span>\n    + <span class=\"token number\">3</span> hidden moduless</code></pre></div>\n<p>다른 종류의 파일들로 그에 상응하는 로더 패키지를 제공하고 있으며, 비슷한 형식으로 설정 파일에 세팅해줄 수 있습니다.</p>\n<h2 id=\"plugin-설정\" style=\"position:relative;\"><a href=\"#plugin-%EC%84%A4%EC%A0%95\" aria-label=\"plugin 설정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Plugin 설정</h2>\n<p>마지막으로 Plugin 설정법에 대해서 알아보겠습니다. 플러그인을 통해서 로더로 설정이 애매한 부분들을 커버할 수 있습니다. 예를 들어, 웹팩을 실행할 때 마다 기존에 있던 번들 파일을 먼저 깔끔히 지우고 싶은 경우에는 <code>clean-webpack-plugin</code> 플러그인을 사용할 수 있습니다.</p>\n<p>먼저 NPM으로 <code>clean-webpack-plugin</code> 플러그인을 설치합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">npm</span> i -D clean-webpack-plugin</code></pre></div>\n<p>그리고 설정 파일에 설치한 플러그인을 임포트한 후에, <code>plugins</code> 속성에 임포트한 프로그인을 추가합니다.</p>\n<ul>\n<li>webpack.config.js</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> CleanWebpackPlugin <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"clean-webpack-plugin\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  entry<span class=\"token operator\">:</span> <span class=\"token string\">\"./script.js\"</span><span class=\"token punctuation\">,</span>\n  output<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    path<span class=\"token operator\">:</span> __dirname<span class=\"token punctuation\">,</span>\n    filename<span class=\"token operator\">:</span> <span class=\"token string\">\"build.js\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  module<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    rules<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n      <span class=\"token punctuation\">{</span>\n        test<span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\\.css$</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span>\n        use<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"style-loader\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"css-loader\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  plugins<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">CleanWebpackPlugin</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"build.js\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>그런 다음 웹팩을 실행해보면 플러그인을 통해 <code>build.js</code> 파일이 지워졌다가 다시 생성되는 것을 확인할 수 있습니다. (5번째 라인)</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ npx webpack\nnpx: installed <span class=\"token number\">1</span> <span class=\"token keyword\">in</span> <span class=\"token number\">2</span>.911s\nPath must be a string. Received undefined\nC:<span class=\"token punctuation\">\\</span>workspace<span class=\"token punctuation\">\\</span>webpack-examples<span class=\"token punctuation\">\\</span>webpack-config<span class=\"token punctuation\">\\</span>node_modules<span class=\"token punctuation\">\\</span>webpack<span class=\"token punctuation\">\\</span>bin<span class=\"token punctuation\">\\</span>webpack.js\nclean-webpack-plugin: C:<span class=\"token punctuation\">\\</span>workspace<span class=\"token punctuation\">\\</span>webpack-examples<span class=\"token punctuation\">\\</span>webpack-config<span class=\"token punctuation\">\\</span>build.js has been removed.\nHash: 5ac38650d299445c85fc\nVersion: webpack <span class=\"token number\">4.16</span>.3\nTime: 583ms\nBuilt at: <span class=\"token number\">2018</span>-08-14 <span class=\"token number\">21</span>:01:08\n   Asset      Size  Chunks             Chunk Names\nbuild.js  <span class=\"token number\">6.74</span> KiB       <span class=\"token number\">0</span>  <span class=\"token punctuation\">[</span>emitted<span class=\"token punctuation\">]</span>  main\nEntrypoint main <span class=\"token operator\">=</span> build.js\n<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> ./script.js <span class=\"token number\">118</span> bytes <span class=\"token punctuation\">{</span><span class=\"token number\">0</span><span class=\"token punctuation\">}</span> <span class=\"token punctuation\">[</span>built<span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> ./style.css <span class=\"token number\">1.04</span> KiB <span class=\"token punctuation\">{</span><span class=\"token number\">0</span><span class=\"token punctuation\">}</span> <span class=\"token punctuation\">[</span>built<span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> ./node_modules/css-loader<span class=\"token operator\">!</span>./style.css <span class=\"token number\">185</span> bytes <span class=\"token punctuation\">{</span><span class=\"token number\">0</span><span class=\"token punctuation\">}</span> <span class=\"token punctuation\">[</span>built<span class=\"token punctuation\">]</span>\n    + <span class=\"token number\">3</span> hidden modules</code></pre></div>\n<h2 id=\"마치면서\" style=\"position:relative;\"><a href=\"#%EB%A7%88%EC%B9%98%EB%A9%B4%EC%84%9C\" aria-label=\"마치면서 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>마치면서</h2>\n<p>이상으로 웹팩의 기본적인 설정 방법에 대해서 알아보았습니다. 지금까지 잘 따라오셨다면 다음과 같이 웹팩으로 빌드가 되는 심플한 구조의 프로젝트를 얻으셨을 것입니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">webpack-config\n<span class=\"token operator\">|</span>- build.js\n<span class=\"token operator\">|</span>- index.html\n<span class=\"token operator\">|</span>- script.js\n<span class=\"token operator\">|</span>- style.css\n<span class=\"token operator\">|</span>- webpack.config.js\n<span class=\"token operator\">|</span>- package.json\n<span class=\"token operator\">|</span>- /node_modules</code></pre></div>\n<ul>\n<li>package.json</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">{</span>\n  <span class=\"token string\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"webpack-config\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"version\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"1.0.0\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"description\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"main\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"index.js\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">\"test\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"echo \\\"Error: no test specified\\\" &amp;&amp; exit 1\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"keywords\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"author\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"license\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"ISC\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"devDependencies\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">\"clean-webpack-plugin\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"^0.1.19\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"css-loader\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"^1.0.0\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"style-loader\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"^0.21.0\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"webpack\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"^4.16.3\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"webpack-cli\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"^3.1.0\"</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>설정 항목을 최종 정리해보면 다음과 같습니다.</p>\n<table>\n<thead>\n<tr>\n<th>설정</th>\n<th>용도</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>entry</td>\n<td>입력 파일 경로</td>\n</tr>\n<tr>\n<td>output</td>\n<td>출력 디렉터리와 파일 이름</td>\n</tr>\n<tr>\n<td>module > rules</td>\n<td>로더 등록</td>\n</tr>\n<tr>\n<td>plugins</td>\n<td>플러그인 등록</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"관련-포스팅\" style=\"position:relative;\"><a href=\"#%EA%B4%80%EB%A0%A8-%ED%8F%AC%EC%8A%A4%ED%8C%85\" aria-label=\"관련 포스팅 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>관련 포스팅</h2>\n<ul>\n<li><a href=\"/webpack-basics\">웹팩(Webpack) 기본 사용법 (CLI)</a></li>\n<li><a href=\"/webpack-webpack-development\">웹팩(Webpack) 개발 편의 기능</a></li>\n</ul>","timeToRead":8,"fields":{"slug":"/webpack-config/","tags":["JavaScript","자바스크립트","Webpack","웹팩","Entry","Output","Loader","Plugins","webpack.config.js","style-loader","css-loader","clean-webpack-plugin"]},"frontmatter":{"title":"웹팩(Webpack) 기본 설정법 (Entry/Output/Loader/Plugins)","date":"Jul 15, 2018"}},"next":{"fields":{"slug":"/webpack-basics/"},"frontmatter":{"title":"웹팩(Webpack) 기본 사용법 (CLI)"}}}},"staticQueryHashes":["2168229929","2362167539","3056348342"]}