{"componentChunkName":"component---src-templates-detail-template-jsx","path":"/js-nvm/","result":{"pageContext":{"previous":{"fields":{"slug":"/gitignore/"},"frontmatter":{"title":".gitignore 파일 사용법"}},"node":{"html":"<p>이번 포스팅에서는 하나의 컴퓨터에서 여러 버전의 Node.js를 사용할 수 있도록 도와주는 도구인 nvm(Node Version Manager)에서 대해서 알아보겠습니다.</p>\n<h2 id=\"nvm-설치\" style=\"position:relative;\"><a href=\"#nvm-%EC%84%A4%EC%B9%98\" aria-label=\"nvm 설치 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>nvm 설치</h2>\n<p>제가 Mac을 사용하는 관계로 macOS를 기준으로 nvm을 어떻게 설치하는지 설명하겠습니다.</p>\n<blockquote>\n<p>macOS를 포함한 리눅스 계열의 운영체제에서는 <a href=\"https://github.com/nvm-sh/nvm\">nvm</a> 사이트에서 설치 스크립트를 확인할 수 있으며, 윈도우 운영체제의 경우 <a href=\"https://github.com/coreybutler/nvm-windows\">nvm-windows</a> 사이트에서 설치 파일을 다운로드 받을 수 있습니다.</p>\n</blockquote>\n<p>터미널을 열고 다음 설치 스크립트를 실행합니다.\n여기서 다운로드 URL의 버전 부분은 수시로 업데이트되오니 <a href=\"https://github.com/nvm-sh/nvm#install--update-script\">여기에서</a> 최신 설치 스크립트를 복사하셔서 사용하시기 바랍니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">curl</span> -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.0/install.sh <span class=\"token operator\">|</span> <span class=\"token function\">bash</span></code></pre></div>\n<p><code>nvm -v</code> 명령어를 실행했을 때 <code>nvm</code>의 버전이 출력되면 설치가 정상적으로 끝난 것입니다. 🎉</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ nvm -v\n<span class=\"token number\">0.39</span>.0</code></pre></div>\n<h2 id=\"설치-가능한-nodejs-버전-확인\" style=\"position:relative;\"><a href=\"#%EC%84%A4%EC%B9%98-%EA%B0%80%EB%8A%A5%ED%95%9C-nodejs-%EB%B2%84%EC%A0%84-%ED%99%95%EC%9D%B8\" aria-label=\"설치 가능한 nodejs 버전 확인 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>설치 가능한 Node.js 버전 확인</h2>\n<p>Node.js를 설치하려면 우선 현재 설치가 가능한 Node.js 버전이 뭐뭐가 있는지를 알아야 되겠죠?</p>\n<p><code>nvm ls-remote</code> 명령어를 사용하면 설치가 가능한 모든 Node.js 버전이 출력되는데요.\n버전이 너무 많기 때문에 다음과 같이 <code>grep</code> 명령어를 활용해서 특정 버전만 필터링해서 보면 편합니다.</p>\n<p>예를 들어, v16으로 시작하는 버전만 필터링하려면 다음과 같이 터미널에서 명령어를 날립니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ nvm ls-remote <span class=\"token operator\">|</span><span class=\"token function\">grep</span> v16\n        v16.0.0\n        v16.1.0\n        v16.2.0\n        v16.3.0\n        v16.4.0\n        v16.4.1\n        v16.4.2\n        v16.5.0\n        v16.6.0\n        v16.6.1\n        v16.6.2\n        v16.7.0\n        v16.8.0\n        v16.9.0\n        v16.9.1\n       v16.10.0\n       v16.11.0\n       v16.11.1\n       v16.12.0\n       v16.13.0   <span class=\"token punctuation\">(</span>Latest LTS: Gallium<span class=\"token punctuation\">)</span></code></pre></div>\n<h2 id=\"최신-버전-설치\" style=\"position:relative;\"><a href=\"#%EC%B5%9C%EC%8B%A0-%EB%B2%84%EC%A0%84-%EC%84%A4%EC%B9%98\" aria-label=\"최신 버전 설치 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>최신 버전 설치</h2>\n<p>먼저 Node.js의 최신 버전을 nvm으로 설치해보도록 하겠습니다.\n포스팅을 작성하고 있는 시점 기준으로 Node.js의 최신 버전은 <code>17.0.1</code>입니다.</p>\n<p>Node.js를 설치할 때는 <code>nvm install</code> 명령어를 사용하는데요.\n이 명령어 뒤에 버전만 붙여주면 됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ nvm <span class=\"token function\">install</span> <span class=\"token number\">17.0</span>.1\nDownloading and installing node v17.0.1<span class=\"token punctuation\">..</span>.\nDownloading https://nodejs.org/dist/v17.0.1/node-v17.0.1-darwin-arm64.tar.xz<span class=\"token punctuation\">..</span>.\n<span class=\"token comment\">######################################################################################################################### 100.0%</span>\nComputing checksum with shasum -a <span class=\"token number\">256</span>\nChecksums matched<span class=\"token operator\">!</span>\nNow using node v17.0.1 <span class=\"token punctuation\">(</span>npm v8.1.0<span class=\"token punctuation\">)</span></code></pre></div>\n<p>설치가 끝나면 <code>node -v</code> 명령어를 실행하여 정확한 버전의 Node.js가 설치되었는지 확인해볼 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ node -v\nv17.0.1</code></pre></div>\n<p>Node.js의 최신 버전을 수시로 바뀔텐데 매번 최신 버전을 확인하는게 번거로울 수 있을텐데요.\n다행히도 버전 부분에 <code>node</code>를 명시하면 최신 버전이 설치됩니다. 😌</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ nvm <span class=\"token function\">install</span> node\nv17.0.1 is already installed.\nNow using node v17.0.1 <span class=\"token punctuation\">(</span>npm v8.1.0<span class=\"token punctuation\">)</span></code></pre></div>\n<p>위에서 이미 설치를 하였기 때문에 이미 설치가 되었다고 나오네요.</p>\n<h2 id=\"lts-버전-설치\" style=\"position:relative;\"><a href=\"#lts-%EB%B2%84%EC%A0%84-%EC%84%A4%EC%B9%98\" aria-label=\"lts 버전 설치 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>LTS 버전 설치</h2>\n<p>이 번에는 상용 환경에서 많이 사용하는 LTS(Long Term Support) 버전을 nvm으로 설치해볼까요?\n포스팅을 작성하고 있는 시점 기준으로 Node.js의 LTS 버전은 <code>16.13.0</code>입니다.</p>\n<p>최신 버전을 설치했을 때 처럼 <code>nvm install</code> 명령어 뒤에 버전을 명시해주면 됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ nvm <span class=\"token function\">install</span> <span class=\"token number\">16.13</span>.0\nDownloading and installing node v16.13.0<span class=\"token punctuation\">..</span>.\nDownloading https://nodejs.org/dist/v16.13.0/node-v16.13.0-darwin-arm64.tar.xz<span class=\"token punctuation\">..</span>.\n<span class=\"token comment\">######################################################################################################################### 100.0%</span>\nComputing checksum with shasum -a <span class=\"token number\">256</span>\nChecksums matched<span class=\"token operator\">!</span>\nNow using node v16.13.0 <span class=\"token punctuation\">(</span>npm v8.1.0<span class=\"token punctuation\">)</span></code></pre></div>\n<p>다시 <code>node -v</code> 명령어를 실행해보면 이 번에는 LTS 버전이 사용되는 것이 확인됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ node -v\nv16.13.0</code></pre></div>\n<p>LTS 버전에 한해서 편의를 위해 정확한 버전을 명시하는 대신에 사용할 수 있는 <code>--lts</code> 옵션을 제공하고 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ nvm <span class=\"token function\">install</span> --lts\nInstalling latest LTS version.\nv16.13.0 is already installed.\nNow using node v16.13.0 <span class=\"token punctuation\">(</span>npm v8.1.0<span class=\"token punctuation\">)</span></code></pre></div>\n<p>그런데, 다시 최신 버전의 Node.js를 사용하고 싶을 경우에는 어떻게 해야할까요❓</p>\n<h2 id=\"사용할-버전-선택\" style=\"position:relative;\"><a href=\"#%EC%82%AC%EC%9A%A9%ED%95%A0-%EB%B2%84%EC%A0%84-%EC%84%A0%ED%83%9D\" aria-label=\"사용할 버전 선택 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>사용할 버전 선택</h2>\n<p><code>nvm use</code> 명령어를 사용하면 자유롭게 수시로 다른 Node.js 버전을 넘나들 수 있습니다.</p>\n<p>예를 들어, 다시 최신 버전의 Node.js를 사용하고 싶다면 터미널에서 다음 명령어를 실행합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ nvm use <span class=\"token number\">17.0</span>.1\nNow using node v17.0.1 <span class=\"token punctuation\">(</span>npm v8.1.0<span class=\"token punctuation\">)</span></code></pre></div>\n<p>이제 Node.js 버전이 최신 버전인 <code>17.0.1</code>로 확인됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ node -v\nv17.0.1</code></pre></div>\n<p>설치했을 때와 동일하게 버전 자리에 <code>node</code>를 쓰면 최신 버전이 선택됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ nvm use node\nNow using node v17.0.1 <span class=\"token punctuation\">(</span>npm v8.1.0<span class=\"token punctuation\">)</span></code></pre></div>\n<p>LTS 버전으로 전환할 때도 마찬가지로 <code>--lts</code> 옵션을 쓸 수 있으니 참고하세요.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ nvm use --lts\nNow using node v16.13.0 <span class=\"token punctuation\">(</span>npm v8.1.0<span class=\"token punctuation\">)</span></code></pre></div>\n<h2 id=\"설치되어-있는-nodejs-버전-확인\" style=\"position:relative;\"><a href=\"#%EC%84%A4%EC%B9%98%EB%90%98%EC%96%B4-%EC%9E%88%EB%8A%94-nodejs-%EB%B2%84%EC%A0%84-%ED%99%95%EC%9D%B8\" aria-label=\"설치되어 있는 nodejs 버전 확인 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>설치되어 있는 Node.js 버전 확인</h2>\n<p>현재 내 컴퓨터에 <code>nvm</code>으로 설치되어 있는 모든 Node.js 버전을 확인하고 싶을 때가 있습니다.\n그럴 때는 <code>nvm ls</code> 명령어를 사용하면 되는데요.\n화살표가 가르키고 있는 버전이 현재 사용 중인 버전입니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ nvm <span class=\"token function\">ls</span>\n       v14.16.1\n        v16.6.2\n-<span class=\"token operator\">></span>     v16.13.0\n        v17.0.0\n        v17.0.1\ndefault -<span class=\"token operator\">></span> node <span class=\"token punctuation\">(</span>-<span class=\"token operator\">></span> v17.0.1<span class=\"token punctuation\">)</span>\niojs -<span class=\"token operator\">></span> N/A <span class=\"token punctuation\">(</span>default<span class=\"token punctuation\">)</span>\nunstable -<span class=\"token operator\">></span> N/A <span class=\"token punctuation\">(</span>default<span class=\"token punctuation\">)</span>\nnode -<span class=\"token operator\">></span> stable <span class=\"token punctuation\">(</span>-<span class=\"token operator\">></span> v17.0.1<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>default<span class=\"token punctuation\">)</span>\nstable -<span class=\"token operator\">></span> <span class=\"token number\">17.0</span> <span class=\"token punctuation\">(</span>-<span class=\"token operator\">></span> v17.0.1<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>default<span class=\"token punctuation\">)</span>\nlts/* -<span class=\"token operator\">></span> lts/gallium <span class=\"token punctuation\">(</span>-<span class=\"token operator\">></span> v16.13.0<span class=\"token punctuation\">)</span>\nlts/argon -<span class=\"token operator\">></span> v4.9.1 <span class=\"token punctuation\">(</span>-<span class=\"token operator\">></span> N/A<span class=\"token punctuation\">)</span>\nlts/boron -<span class=\"token operator\">></span> v6.17.1 <span class=\"token punctuation\">(</span>-<span class=\"token operator\">></span> N/A<span class=\"token punctuation\">)</span>\nlts/carbon -<span class=\"token operator\">></span> v8.17.0 <span class=\"token punctuation\">(</span>-<span class=\"token operator\">></span> N/A<span class=\"token punctuation\">)</span>\nlts/dubnium -<span class=\"token operator\">></span> v10.24.1 <span class=\"token punctuation\">(</span>-<span class=\"token operator\">></span> N/A<span class=\"token punctuation\">)</span>\nlts/erbium -<span class=\"token operator\">></span> v12.22.7 <span class=\"token punctuation\">(</span>-<span class=\"token operator\">></span> N/A<span class=\"token punctuation\">)</span>\nlts/fermium -<span class=\"token operator\">></span> v14.18.1 <span class=\"token punctuation\">(</span>-<span class=\"token operator\">></span> N/A<span class=\"token punctuation\">)</span>\nlts/gallium -<span class=\"token operator\">></span> v16.13.0</code></pre></div>\n<p>현재 제 컴퓨터에는 Node.js가 총 5개 버전이 설치되어 있으며 그 중 <code>16.13.0</code> 버전을 사용 중이네요.</p>\n<h2 id=\"특정-버전의-nodejs-삭제\" style=\"position:relative;\"><a href=\"#%ED%8A%B9%EC%A0%95-%EB%B2%84%EC%A0%84%EC%9D%98-nodejs-%EC%82%AD%EC%A0%9C\" aria-label=\"특정 버전의 nodejs 삭제 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>특정 버전의 Node.js 삭제</h2>\n<p>더 이상 필요가 없어진 Node.js 버전은 삭제해주는 것이 좋겠죠?</p>\n<p><code>nvm uninstall</code> 명령어 뒤에 삭제하고 싶은 버전을 붙여서 실행하면 됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ nvm uninstall <span class=\"token number\">16.6</span>.2\nUninstalled node v16.6.2</code></pre></div>\n<h2 id=\"프로젝트별-nodejs-버전-전환\" style=\"position:relative;\"><a href=\"#%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8%EB%B3%84-nodejs-%EB%B2%84%EC%A0%84-%EC%A0%84%ED%99%98\" aria-label=\"프로젝트별 nodejs 버전 전환 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>프로젝트별 Node.js 버전 전환</h2>\n<p>여러 자바스크립트 프로젝트를 들락날락하면서 개발을 하다보면 매번 Node.js 버전을 바뀌주는 것이 귀찮게 느껴질 수 있습니다.</p>\n<p>이럴 때는 프로젝트의 최상위 디렉토리에 <code>.nvmrc</code> 파일을 생성하고 그 안에 프로젝트에서 사용할 Node.js 버전을 명시해줍니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"16.13.0\"</span> <span class=\"token operator\">></span> .nvmrc</code></pre></div>\n<p>그러면 <code>nvm use</code> 명령어를 실행할 때 버전을 뒤에 안 붙여도 <code>.nvmrc</code> 파일에 명시된 버전으로 Node.js가 전환이 됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ nvm use\nFound <span class=\"token string\">'/Users/daleseo/work/blog/.nvmrc'</span> with version <span class=\"token operator\">&lt;</span><span class=\"token number\">16.13</span>.<span class=\"token operator\"><span class=\"token file-descriptor important\">0</span>></span>\nNow using node v16.13.0 <span class=\"token punctuation\">(</span>npm v8.1.0<span class=\"token punctuation\">)</span></code></pre></div>\n<p>여기서 한 걸음 더 나아가 프로젝트 디렉토리에 진입할 때 자동으로 Node.js의 버전이 바뀐다면 얼마나 편할까요? 🤗</p>\n<p>Mac 사용자라면 아래 스크립트를 복사해서 유저 홈 디렉토리의 <code>.zshrc</code> 파일의 제일 아래에 붙여넣어보세요.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">autoload -U add-zsh-hook\n<span class=\"token function-name function\">load-nvmrc</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token builtin class-name\">local</span> <span class=\"token assign-left variable\">node_version</span><span class=\"token operator\">=</span><span class=\"token string\">\"<span class=\"token variable\"><span class=\"token variable\">$(</span>nvm version<span class=\"token variable\">)</span></span>\"</span>\n  <span class=\"token builtin class-name\">local</span> <span class=\"token assign-left variable\">nvmrc_path</span><span class=\"token operator\">=</span><span class=\"token string\">\"<span class=\"token variable\"><span class=\"token variable\">$(</span>nvm_find_nvmrc<span class=\"token variable\">)</span></span>\"</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> -n <span class=\"token string\">\"<span class=\"token variable\">$nvmrc_path</span>\"</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span>\n    <span class=\"token builtin class-name\">local</span> <span class=\"token assign-left variable\">nvmrc_node_version</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span>nvm version <span class=\"token string\">\"<span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">cat</span> <span class=\"token string\">\"<span class=\"token variable\">${nvmrc_path}</span>\"</span><span class=\"token variable\">)</span></span>\"</span><span class=\"token variable\">)</span></span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token string\">\"<span class=\"token variable\">$nvmrc_node_version</span>\"</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"N/A\"</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span>\n      nvm <span class=\"token function\">install</span>\n    <span class=\"token keyword\">elif</span> <span class=\"token punctuation\">[</span> <span class=\"token string\">\"<span class=\"token variable\">$nvmrc_node_version</span>\"</span> <span class=\"token operator\">!=</span> <span class=\"token string\">\"<span class=\"token variable\">$node_version</span>\"</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span>\n      nvm use\n    <span class=\"token keyword\">fi</span>\n  <span class=\"token keyword\">elif</span> <span class=\"token punctuation\">[</span> <span class=\"token string\">\"<span class=\"token variable\">$node_version</span>\"</span> <span class=\"token operator\">!=</span> <span class=\"token string\">\"<span class=\"token variable\"><span class=\"token variable\">$(</span>nvm version default<span class=\"token variable\">)</span></span>\"</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span>\n    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"Reverting to nvm default version\"</span>\n    nvm use default\n  <span class=\"token keyword\">fi</span>\n<span class=\"token punctuation\">}</span>\nadd-zsh-hook chpwd load-nvmrc\nload-nvmrc</code></pre></div>\n<p>그리고 나서 새 터미널 창을 열고 해당 프로젝트 디렉토리로 진입을 해보시면 다음과 같이 자동으로 <code>.nvmrc</code> 파일에 명시된 버전으로 Node.js가 전환이 될 것입니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token builtin class-name\">cd</span> our-project\nFound <span class=\"token string\">'/Users/daleseo/our-project/.nvmrc'</span> with version <span class=\"token operator\">&lt;</span><span class=\"token number\">16.13</span>.<span class=\"token operator\"><span class=\"token file-descriptor important\">0</span>></span>\nNow using node v16.13.0 <span class=\"token punctuation\">(</span>npm v8.1.0<span class=\"token punctuation\">)</span></code></pre></div>\n<p><code>zsh</code> 대신에 <code>bash</code>나 <code>fish</code>를 사용하신다면 <a href=\"https://github.com/nvm-sh/nvm#deeper-shell-integration\">이 페이지</a>를 참고하셔서 세팅하시면 됩니다.</p>\n<h2 id=\"마치면서\" style=\"position:relative;\"><a href=\"#%EB%A7%88%EC%B9%98%EB%A9%B4%EC%84%9C\" aria-label=\"마치면서 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>마치면서</h2>\n<p>이상으로 Node.js 버전 관리 도구인 nvm을 어떻게 사용하는지에 대해서 살펴보았습니다.\n하나의 컴퓨터에서 여러 버전의 Node.js를 자유롭게 넘나들면서 사용하시는데 도움이 되셨으면 좋겠습니다.</p>","timeToRead":7,"fields":{"slug":"/js-nvm/","tags":["JavaScript","Node.js","nvm","CLI"]},"frontmatter":{"title":"nvm으로 여러 Node.js 버전 관리하기","date":"Oct 28, 2021"}},"next":{"fields":{"slug":"/js-dom-event-handling/"},"frontmatter":{"title":"자바스크립트로 이벤트 처리하기"}}}},"staticQueryHashes":["2168229929","2362167539","3056348342"]}