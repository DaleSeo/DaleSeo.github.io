{
    "componentChunkName": "component---src-templates-detail-template-jsx",
    "path": "/js-prettier-config/",
    "result": {"pageContext":{"previous":{"fields":{"slug":"/js-url-search-params/"},"frontmatter":{"title":"자바스크립트의 URLSearchParams로 쿼리 스트링 다루기"}},"node":{"html":"<p>Prettier는 일관적인 규칙에 따라서 코드를 자동으로 포맷팅해줌으로써 특히 협업 프로젝트에서 개발 생산성을 올려주는 유용한 도구입니다.\nPrettier는 대부분의 경우에 별다른 설정없이 그대로 사용할 수 있으나 간혹 개발팀의 입맛에 맞게 약간의 설정이 필요한 경우도 생길 수 있는데요.</p>\n<p>이번 글에서는 Prettier의 설정 방법을 알아보고 자주 사용되는 옵션에 대해서 살펴보겠습니다.</p>\n<blockquote>\n<p>자바스크립트에서 가장 많이 사용되는 코드 포맷터인 Prettier 자체에 대한 내용은 <a href=\"/js-prettier/\">별도 포스팅</a>에서 자세히 다루고 있으니 참고 바랍니다.</p>\n</blockquote>\n<h2 id=\"prettier-설정-방법\" style=\"position:relative;\"><a href=\"#prettier-%EC%84%A4%EC%A0%95-%EB%B0%A9%EB%B2%95\" aria-label=\"prettier 설정 방법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Prettier 설정 방법</h2>\n<p>Prettier는 크게 3가지 방법으로 설정할 수 있습니다.</p>\n<p>첫 번째 방법은 <code>prettier</code> 명령어를 실행할 때 커맨드 라인 옵션으로도 넘기는 건데요.\n일회성 설정을 해줄 때는 간편하게 쓸 수 있지만 설정할 항목이 조금만 많아져도 오히려 불편해지고 오타가 날 확률도 커질 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ prettier <span class=\"token builtin class-name\">.</span> --single-quote --print-width <span class=\"token number\">100</span> --arrow-parens avoid</code></pre></div>\n<p>두 번째 방법은 <code>package.json</code> 파일의 일부로 <code>prettier</code> 속성에 옵션을 명시하는 것입니다.</p>\n<div class=\"gatsby-code-title\">package.json</div>\n<div class=\"gatsby-highlight has-highlighted-lines\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// ...</span>\n  <span class=\"token property\">\"dependencies\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"prettier\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"^3.0.1\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token property\">\"prettier\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token property\">\"singleQuote\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token property\">\"printWidth\"</span><span class=\"token operator\">:</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span></span>    <span class=\"token property\">\"arrowParens\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"avoid\"</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>세 번째 방법은 별도의 설정 파일을 사용하는 건데요.\n<code>.prettierrc</code>, <code>.prettierrc.json</code>, <code>.prettierrc.yml</code>, <code>.prettierrc.js</code> 등 다양한 형태로 옵션을 저장할 수 있습니다.</p>\n<div class=\"gatsby-code-title\">prettierrc</div>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"singleQuote\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"printWidth\"</span><span class=\"token operator\">:</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"arrowParens\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"avoid\"</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>저는 개인적으로 마지막 방법을 선호하는데요.\n팀에 새롭게 합류하는 개발자가 폴더 구조만 보고도 해당 프로젝트에서 Prettier를 사용하는지와 설정 사항을 쉽게 확인할 수 있기 때문입니다.</p>\n<h2 id=\"홑따옴표\" style=\"position:relative;\"><a href=\"#%ED%99%91%EB%94%B0%EC%98%B4%ED%91%9C\" aria-label=\"홑따옴표 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>홑따옴표</h2>\n<p>Prettier는 문자열을 기본적으로 <code>\"</code> 기호(쌍따옴표)를 사용해서 표시하는데요.\n대신에 <code>'</code> 기호(홑따옴표)를 사용하고 싶다면 <code>singleQuote</code> 옵션을 <code>true</code>로 설정해주면 됩니다.</p>\n<div class=\"gatsby-code-title\">prettierrc</div>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"singleQuote\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>자바스크립트 개발자 중에서 홑따옴표를 선호하시는 분들이 워낙 많기 때문에 가장 흔하게 볼 수 있는 Prettier 설정인데요.\n저는 쌍따옴표가 당연히 여겨지는 다른 프로그래밍 언어도 많이 써봐서 그런지 크게 개의치 않고 그냥 기본 설정대로 두는 편입니다.</p>\n<h2 id=\"한-줄-최대-글자수\" style=\"position:relative;\"><a href=\"#%ED%95%9C-%EC%A4%84-%EC%B5%9C%EB%8C%80-%EA%B8%80%EC%9E%90%EC%88%98\" aria-label=\"한 줄 최대 글자수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>한 줄 최대 글자수</h2>\n<p>Prettier은 기본적으로 한 줄에 글자수를 최대 80자로 제한하고 있는데요.\n한 줄에 최대 글자수를 늘리고 싶다면 <code>printWidth</code> 옵션을 사용하면 됩니다.</p>\n<div class=\"gatsby-code-title\">prettierrc</div>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"printWidth\"</span><span class=\"token operator\">:</span> <span class=\"token number\">120</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>참고로 사람이 편안하게 코드를 읽으려면 한 줄에 80자 이하의 글자를 쓰는 게 좋다고 하더라고요.\n그래도 요즘에는 대형 모니터나 와이드 모니터를 사용하시는 분들이 많으니 80자가 너무 적다고 느껴질 수도 있을 것 같습니다.</p>\n<h2 id=\"세미콜론\" style=\"position:relative;\"><a href=\"#%EC%84%B8%EB%AF%B8%EC%BD%9C%EB%A1%A0\" aria-label=\"세미콜론 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>세미콜론</h2>\n<p>Prettier는 기본적으로 각 문장(statement) 뒤에 <code>;</code> 기호(세미콜론)를 자동으로 붙여주는데요.\n이 세미콜론을 생략하고 싶다면 <code>semi</code> 옵션을 <code>false</code>로 설정해주면 됩니다.</p>\n<div class=\"gatsby-code-title\">prettierrc</div>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"semi\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>참고로 자바스크립트에서는 각 문장 뒤에 세미콜론을 붙이는 오래된 관행이 있는데요.\n다른 프로그래밍 언어처럼 구문적으로 항상 붙여줘야 하는 것은 아니에요.\n세미콜론을 붙이지 않는 것이 코드가 더 깔끔해 보인다고 느끼시는 분들도 있더라고요.</p>\n<h2 id=\"후행-쉼표\" style=\"position:relative;\"><a href=\"#%ED%9B%84%ED%96%89-%EC%89%BC%ED%91%9C\" aria-label=\"후행 쉼표 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>후행 쉼표</h2>\n<p>여러 줄에서 걸쳐서 배열이나 객체, 매개변수가 작성된 경우 Prettier는 마지막 요소 뒤에도 <code>,</code> 기호(쉼표)를 붙여주는데요.\n이 쉼표를 제거하고 싶다면 <code>trailingComma</code> 옵션을 <code>\"none\"</code>으로 주면 됩니다.</p>\n<div class=\"gatsby-code-title\">prettierrc</div>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"trailingComma\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"none\"</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Prettier에서 <code>trailingComma</code> 옵션의 기본값을 <code>\"all\"</code>로 하는 이유는 코드 리뷰를 할 때 이점이 있어서 인데요.\n이렇게 마지막 요소 뒤에도 쉼표가 없으면 코드 변경과 전과 후를 비교하는 결과가 지저분하게 나오는 경향이 있거든요.</p>\n<h2 id=\"화살표-함수-괄호\" style=\"position:relative;\"><a href=\"#%ED%99%94%EC%82%B4%ED%91%9C-%ED%95%A8%EC%88%98-%EA%B4%84%ED%98%B8\" aria-label=\"화살표 함수 괄호 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>화살표 함수 괄호</h2>\n<p>화살표 함수를 작성하면 Prettier는 매개변수가 하나 밖에 없더라도 매개변수 부분을 <code>()</code> 기호(소괄호)로 감싸주는데요.\n매개변수가 하나일 때는 굳이 <code>()</code> 기호를 사용하고 싶지 않다면 <code>arrowParens</code> 옵션을 <code>\"avoid\"</code>로 주면 됩니다.</p>\n<div class=\"gatsby-code-title\">prettierrc</div>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"arrowParens\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"avoid\"</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"탭-사용\" style=\"position:relative;\"><a href=\"#%ED%83%AD-%EC%82%AC%EC%9A%A9\" aria-label=\"탭 사용 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>탭 사용</h2>\n<p>Prettier는 들여쓰기를 할 때 기본적으로 탭 문자 대신에 여러 개의 공백 문자를 사용합니다.\n만약에 탭 문자로 들여쓰기를 하고 싶다면 <code>useTabs</code> 옵션을 <code>true</code>로 설정해주면 됩니다.</p>\n<div class=\"gatsby-code-title\">prettierrc</div>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"useTabs\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"탭-너비\" style=\"position:relative;\"><a href=\"#%ED%83%AD-%EB%84%88%EB%B9%84\" aria-label=\"탭 너비 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>탭 너비</h2>\n<p>Prettier는 기본적으로 공백 2칸을 탭 너비로 사용하는데요.\n만약에 탭 너비를 조정하고 싶다면 <code>tabWidth</code> 옵션을 바꿔주시면 됩니다.</p>\n<div class=\"gatsby-code-title\">prettierrc</div>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"tabWidth\"</span><span class=\"token operator\">:</span> <span class=\"token number\">4</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>당연히 이 옵션은 <code>useTabs</code>를 <code>true</code>로 설정해준 경우에는 의미가 없어지겠죠?</p>\n<h2 id=\"prettierignore\" style=\"position:relative;\"><a href=\"#prettierignore\" aria-label=\"prettierignore permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>.prettierignore</h2>\n<p>Prettier는 기본적으로 Git과 같은 버전 컨트롤 시스템에서 사용하는 디렉토리와 npm 패키지가 저장되어 있는 <code>node_modules</code> 디렉토리를 상대로는 포맷팅을 수행하지 않습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"txt\"><pre class=\"language-txt\"><code class=\"language-txt\">**/.git\n**/.svn\n**/.hg\n**/node_modules</code></pre></div>\n<p>만약에 이 밖에도 프로젝트 내에 포맷팅을 하지 말야하는 영역이 있다면 <code>.prettierignore</code> 파일을 생성하고 그 안에 경로를 나열하면 됩니다.</p>\n<p>예를 들어, <code>dist</code> 디렉토리와 <code>package.json</code>과 <code>package-lock.json</code> 파일을 포멧팅에서 제외하려면 다음과 같이 <code>.prettierignore</code> 파일을 작성하면 됩니다.</p>\n<div class=\"gatsby-code-title\">.prettierignore</div>\n<div class=\"gatsby-highlight\" data-language=\"txt\"><pre class=\"language-txt\"><code class=\"language-txt\">dist\npackage.json\npackage-lock.json</code></pre></div>\n<h2 id=\"마치면서\" style=\"position:relative;\"><a href=\"#%EB%A7%88%EC%B9%98%EB%A9%B4%EC%84%9C\" aria-label=\"마치면서 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>마치면서</h2>\n<p>이상으로 Prettier의 자주 사용되는 옵션을 위주로 어떻게 설정하는지에 대해서 살펴보았습니다.\n이 밖에 다른 옵션이 필요하시다면 <a href=\"https://prettier.io/docs/en/options\">공식 레퍼런스 페이지</a>를 찾아보시면 좋을 것 같습니다.</p>\n<p>Prettier는 다른 포맷터에 대비 상대적으로 설정할 수 있는 부분이 제한적인데요.\n사실 의도적으로 그렇게 설계되었다고 합니다.\n그래서 저는 가급적 Prettier 설정을 최소화하시라고 추천드리고 싶어요.</p>\n<p>Prettier의 기본 설정값들은 자바스크립트 커뮤니티에서 오랫동안 합의된 관행과 모범 사례를 기반으로 결정되었습니다.\n또한 사용자의 피드백을 수렴하고 최신 트랜드를 반영하여 버전 업 시 기본 설정값이 변경되기도 합니다.</p>\n<p>예를 들어, Prettier v2가 출시되었을 때는 <code>arrowParens</code> 옵션의 기본값이 <code>\"always\"</code>로 바뀌었었는데요.\n얼마 전에 출시된 Prettier v3에서는 <code>trailingComma</code> 옵션의 기본값이 <code>\"all\"</code>로 바뀌었더라고요.</p>","timeToRead":4,"fields":{"slug":"/js-prettier-config/","tags":["JavaScript","Prettier","Format"]},"frontmatter":{"title":"Prettier 상세 설정 가이드","date":"Aug 5, 2023"}},"next":{"fields":{"slug":"/js-url-api/"},"frontmatter":{"title":"자바스크립트의 URL API로 웹 주소 다루기"}}}},
    "staticQueryHashes": ["2168229929","2362167539","3056348342"]}