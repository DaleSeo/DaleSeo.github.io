{"componentChunkName":"component---src-templates-detail-template-jsx","path":"/gitignore/","result":{"pageContext":{"previous":{"fields":{"slug":"/js-node-path/"},"frontmatter":{"title":"Node.js의 path 모듈로 경로 다루기"}},"node":{"html":"<p>이번 포스팅에서는 <code>.gitignore</code> 파일을 이용하여 Git으로 프로젝트의 버전 관리를 할 때 특정 파일이나 디렉토리를 제외시키는 방법에 대해서 알아보겠습니다.</p>\n<h2 id=\"버전-관리를-하지-않는-파일과-디렉토리\" style=\"position:relative;\"><a href=\"#%EB%B2%84%EC%A0%84-%EA%B4%80%EB%A6%AC%EB%A5%BC-%ED%95%98%EC%A7%80-%EC%95%8A%EB%8A%94-%ED%8C%8C%EC%9D%BC%EA%B3%BC-%EB%94%94%EB%A0%89%ED%86%A0%EB%A6%AC\" aria-label=\"버전 관리를 하지 않는 파일과 디렉토리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>버전 관리를 하지 않는 파일과 디렉토리</h2>\n<p>어떤 프로그래밍 언어로 프로젝트를 하든 버전 관리를 할 필요가 없거나 하지 말아야하는 파일이나 디렉토리가 생기기 마련입니다.</p>\n<p>대표적인 예로, 자바스크립트(JavaScript) 프로젝트에서는 의존성을 설치하고 나면, 프로젝트에 <code>node_modules</code> 디텍토리가 생성되고 그 안에 <code>npm</code> 저장소로 부터 내려받은 라이브러리 코드가 저장됩니다.\n오픈 소스 라이브러리 기반으로 개발되는 프로젝트의 경우 <code>node_modules</code> 디텍토리의 용량은 개발자가 다운로드 받기에는 부담스럽게 크며 <code>npm install</code> 명령어로 언제든지 다시 생성할 수 있기 때문에 일반적으로 <code>node_modules</code> 디텍토리는 버전 관리를 하지 않습니다.</p>\n<p>또 다른 예로, 자바(Java) 프로젝트에서는 컴파일(compile) 결과로 생성되는 확장자가 <code>.class</code>인 파일과 패키징(packaging) 결과로 확장자가 <code>.jar</code> 또는 <code>.war</code> 파일도 일반적으로 버전 관리에서 제외를 시킵니다. 이렇게 빌드(build) 과정에서 생성되는 부산물은 개발자가 육안으로 이해하기 어려우며 따라서 코드 리뷰도 어렵기 때문에 굳이 번거롭게 버전 관리를 할 이유가 없습니다.</p>\n<p>이 밖에도 보안상 민감한 데이터를 담고 있는 파일이 원격 코드 저장소에 업로드하면, 특히 GitHub와 같은 서비스를 사용할 경우, 외부에 유출이 되어 크게 곤란한 일이 겪을 수도 있습니다.</p>\n<p>따라서 이렇게 버전 관리를 할 필요가 없는 파일이나 디렉토리는 Git에게 무시하라고 알려줘야하는데요.\n이 때 사용하는 것이 바로 <code>.gitignore</code> 파일입니다.</p>\n<h2 id=\"실습-프로젝트-구성\" style=\"position:relative;\"><a href=\"#%EC%8B%A4%EC%8A%B5-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EA%B5%AC%EC%84%B1\" aria-label=\"실습 프로젝트 구성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>실습 프로젝트 구성</h2>\n<p>간단한 실습을 위해서 디렉토리를 하나 생성해보겠습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">mkdir</span> our-project\n$ <span class=\"token builtin class-name\">cd</span> our-project</code></pre></div>\n<p>생성한 디렉토리에서 Git으로 버전 관리를 시작하겠습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">git</span> init\nInitialized empty Git repository <span class=\"token keyword\">in</span> /Users/daleseo/temp/our-project/.git/</code></pre></div>\n<p>실습 프로젝트에 텍스트 파일 3개 <code>a.txt</code>, <code>b.txt</code>, <code>c.txt</code>를 생성해보겠습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">touch</span> a.txt b.txt c.txt\n$ <span class=\"token function\">ls</span>\na.txt b.txt c.txt</code></pre></div>\n<p>Git에게 현재 상태를 물어보니 예상대로 3개의 파일을 추적해야 한다고 나옵니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">git</span> status\nOn branch main\n\nNo commits yet\n\nUntracked files:\n  <span class=\"token punctuation\">(</span>use <span class=\"token string\">\"git add &lt;file>...\"</span> to include <span class=\"token keyword\">in</span> what will be committed<span class=\"token punctuation\">)</span>\n\ta.txt\n\tb.txt\n\tc.txt\n\nnothing added to commit but untracked files present <span class=\"token punctuation\">(</span>use <span class=\"token string\">\"git add\"</span> to track<span class=\"token punctuation\">)</span></code></pre></div>\n<h2 id=\"gitignore-파일-생성\" style=\"position:relative;\"><a href=\"#gitignore-%ED%8C%8C%EC%9D%BC-%EC%83%9D%EC%84%B1\" aria-label=\"gitignore 파일 생성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>.gitignore 파일 생성</h2>\n<p>이제 실습 프로젝트 안에 <code>.gitignore</code> 파일을 생성해보겠습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">touch</span> .gitignore</code></pre></div>\n<p>자연스럽게 <code>.gitignore</code> 파일 자체도 일반 파일처럼 Git이 추적해야하는 파일로 나옵니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">git</span> status\nOn branch main\n\nNo commits yet\n\nUntracked files:\n  <span class=\"token punctuation\">(</span>use <span class=\"token string\">\"git add &lt;file>...\"</span> to include <span class=\"token keyword\">in</span> what will be committed<span class=\"token punctuation\">)</span>\n\t.gitignore\n\ta.txt\n\tb.txt\n\tc.txt\n\nnothing added to commit but untracked files present <span class=\"token punctuation\">(</span>use <span class=\"token string\">\"git add\"</span> to track<span class=\"token punctuation\">)</span></code></pre></div>\n<h2 id=\"특정-파일을-버전-관리에서-제외\" style=\"position:relative;\"><a href=\"#%ED%8A%B9%EC%A0%95-%ED%8C%8C%EC%9D%BC%EC%9D%84-%EB%B2%84%EC%A0%84-%EA%B4%80%EB%A6%AC%EC%97%90%EC%84%9C-%EC%A0%9C%EC%99%B8\" aria-label=\"특정 파일을 버전 관리에서 제외 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>특정 파일을 버전 관리에서 제외</h2>\n<p>실습 프로젝트의 3개의 텍스트 파일 중에서 <code>b.txt</code> 파일을 버전 관리에서 제외시키려면 어떻게 해야할까요?</p>\n<p><code>.gitignore</code> 파일에 <code>b.txt</code>를 추가해줍니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"b.txt\"</span> <span class=\"token operator\">>></span> .gitignore\n$ <span class=\"token function\">cat</span> .gitignore\nb.txt</code></pre></div>\n<p>이제 다시 Git에게 현재 상태를 물어보면 <code>b.txt</code>는 추적할 파일에서 빠져있는 것을 볼 수 있죠?</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">git</span> status\nOn branch main\n\nNo commits yet\n\nUntracked files:\n  <span class=\"token punctuation\">(</span>use <span class=\"token string\">\"git add &lt;file>...\"</span> to include <span class=\"token keyword\">in</span> what will be committed<span class=\"token punctuation\">)</span>\n\t.gitignore\n\ta.txt\n\tc.txt\n\nnothing added to commit but untracked files present <span class=\"token punctuation\">(</span>use <span class=\"token string\">\"git add\"</span> to track<span class=\"token punctuation\">)</span></code></pre></div>\n<p>현재 변경 사항을 스테이징(staging) 영역에 추가하고 커밋(commit)해보겠습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">git</span> <span class=\"token function\">add</span> <span class=\"token builtin class-name\">.</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">git</span> commit -m <span class=\"token string\">\"ignore b.txt\"</span>\n<span class=\"token punctuation\">[</span>main <span class=\"token punctuation\">(</span>root-commit<span class=\"token punctuation\">)</span> be4069a<span class=\"token punctuation\">]</span> ignore b.txt\n <span class=\"token number\">3</span> files changed, <span class=\"token number\">2</span> insertions<span class=\"token punctuation\">(</span>+<span class=\"token punctuation\">)</span>\n create mode <span class=\"token number\">100644</span> .gitignore\n create mode <span class=\"token number\">100644</span> a.txt\n create mode <span class=\"token number\">100644</span> c.txt</code></pre></div>\n<h2 id=\"무시된-파일-수정\" style=\"position:relative;\"><a href=\"#%EB%AC%B4%EC%8B%9C%EB%90%9C-%ED%8C%8C%EC%9D%BC-%EC%88%98%EC%A0%95\" aria-label=\"무시된 파일 수정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>무시된 파일 수정</h2>\n<p>무시된 <code>b.txt</code> 파일에 한 번 내용을 추가해보겠습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"BBB\"</span> <span class=\"token operator\">>></span> b.txt\n$ <span class=\"token function\">cat</span> b.txt\nBBB</code></pre></div>\n<p>Git은 <code>b.txt</code>의 변경 사항을 신경쓰지 않는 것을 알 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">git</span> status\nOn branch main\nnothing to commit, working tree clean</code></pre></div>\n<h2 id=\"주의-사항\" style=\"position:relative;\"><a href=\"#%EC%A3%BC%EC%9D%98-%EC%82%AC%ED%95%AD\" aria-label=\"주의 사항 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>주의 사항</h2>\n<p><code>.gitignore</code> 파일을 사용할 때 많은 분들이 실수하는 부분이 있는데요.\n바로 Git이 일단 한 번 추적하기 시작한 파일은 <code>.gitignore</code> 파일에 추가해도 제외되지 않는다는 것입니다.</p>\n<p>예를 들어, 방금 커밋을 했던 <code>c.txt</code> 파일을 <code>.gitignore</code> 파일에 추가해보겠습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"c.txt\"</span> <span class=\"token operator\">>></span> .gitignore\n$ <span class=\"token function\">cat</span> .gitignore\nb.txt\nc.txt</code></pre></div>\n<p>그리고 변경 사항을 커밋합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">git</span> commit -am <span class=\"token string\">\"ignore c.txt\"</span>\n<span class=\"token punctuation\">[</span>main 94ce86d<span class=\"token punctuation\">]</span> ignore c.txt\n <span class=\"token number\">1</span> <span class=\"token function\">file</span> changed, <span class=\"token number\">1</span> insertion<span class=\"token punctuation\">(</span>+<span class=\"token punctuation\">)</span></code></pre></div>\n<p>이제 <code>c.txt</code> 파일을 수정해보겠습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"CCC\"</span> <span class=\"token operator\">>></span> c.txt\n$ <span class=\"token function\">cat</span> c.txt\nCCC</code></pre></div>\n<p>그리고 Git에게 상태를 물어보면 <code>.gitignore</code> 파일에 <code>c.txt</code>를 추가했음에도 불구하고, <code>c.txt</code>의 변경 내역이 잡히는 것을 볼 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">git</span> status\nOn branch main\nChanges not staged <span class=\"token keyword\">for</span> commit:\n  <span class=\"token punctuation\">(</span>use <span class=\"token string\">\"git add &lt;file>...\"</span> to update what will be committed<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">(</span>use <span class=\"token string\">\"git restore &lt;file>...\"</span> to discard changes <span class=\"token keyword\">in</span> working directory<span class=\"token punctuation\">)</span>\n\tmodified:   c.txt\n\nno changes added to commit <span class=\"token punctuation\">(</span>use <span class=\"token string\">\"git add\"</span> and/or <span class=\"token string\">\"git commit -a\"</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>정리하면 <code>.gitignore</code> 파일의 목적은 Git이 애초부터 파일이나 디렉토리가 추적되지 못하도록 <strong>예방</strong>하는 것입니다.\n일단 Git이 추적을 시작한 파일은 <code>.gitignore</code> 파일로 추척을 막기에는 늦었다는 점 명심하세요.</p>\n<h2 id=\"이미-추적이-시작한-파일은-어떻게\" style=\"position:relative;\"><a href=\"#%EC%9D%B4%EB%AF%B8-%EC%B6%94%EC%A0%81%EC%9D%B4-%EC%8B%9C%EC%9E%91%ED%95%9C-%ED%8C%8C%EC%9D%BC%EC%9D%80-%EC%96%B4%EB%96%BB%EA%B2%8C\" aria-label=\"이미 추적이 시작한 파일은 어떻게 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>이미 추적이 시작한 파일은 어떻게?</h2>\n<p>이미 Git이 추적을 시작한 파일을 추적을 멈추도록 하고 싶다면 어떻게 해야할까요?</p>\n<p>일단 명시적으로 해당 파일을 삭제를 하고, Git에 커밋을 합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">rm</span> c.txt\n$ <span class=\"token function\">git</span> <span class=\"token function\">add</span> <span class=\"token builtin class-name\">.</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">git</span> commit <span class=\"token string\">\"delete c.txt\"</span></code></pre></div>\n<p>다시 <code>c.txt</code> 파일을 생성해보면, 이 번에는 <code>.gitignore</code> 파일에 추가했던 <code>c.txt</code>가 효력이 발휘하여 Git은 이 파일이 생성되었는지 인식조차 못하게 됩니다.\n이제부터는 아무리 <code>c.txt</code> 파일을 변경해도 Git은 알아차리지 못할 것입니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">touch</span> c.txt\n$ <span class=\"token function\">git</span> status\nOn branch main\nnothing to commit, working tree clean</code></pre></div>\n<p>이처럼 한 번 Git이 추적을 시작한 파일은 반드시 명시적으로 삭제한 후 커밋을 해줘야지만 <code>.gitignore</code> 파일이 의도했던데로 작동하게 됩니다.</p>\n<h2 id=\"gitignore-자동-생성\" style=\"position:relative;\"><a href=\"#gitignore-%EC%9E%90%EB%8F%99-%EC%83%9D%EC%84%B1\" aria-label=\"gitignore 자동 생성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>.gitignore 자동 생성</h2>\n<p><code>.gitignore</code> 파일에 일일이 버전 관리를 하지 않을 파일이나 디렉토리를 추가하는 것은 번거로울 뿐만 아니라 누락할 위험까지 있습니다.\n그래서 실제 프로젝트에서는 프로그래밍 언어나 개발 도구에 따라서 커뮤니티에서 미리 정리해놓은 관행을 따르는 것이 일반적인데요.\n대표적으로 웹사이트로 <a href=\"https://www.gitignore.io/\">https://www.gitignore.io/</a>를 들 수 있습니다.</p>\n<p>이 사이트를 방문해서 프로젝트에서 사용하는 프로그래밍 언어나 개발 도구의 이름을 입력하면 최적화된 <code>.gitignore</code> 파일을 자동으로 생성해줍니다.\n대부분의 프로젝트에서는 이렇게 자동 생성된 <code>.gitignore</code> 파일에 해당 프로젝트에서만 특별하게 버전 관리를 하지 않을 파일이나 디렉토리만 추가해주면 됩니다.</p>\n<h2 id=\"추가-팁-git-ignore-커맨드\" style=\"position:relative;\"><a href=\"#%EC%B6%94%EA%B0%80-%ED%8C%81-git-ignore-%EC%BB%A4%EB%A7%A8%EB%93%9C\" aria-label=\"추가 팁 git ignore 커맨드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[추가 팁] git ignore 커맨드</h2>\n<p>저는 개인적으로 새로운 Git의 별칭(alias) 기능을 활용해서 브라우저에서 위 사이트를 방문하지 않고 터미널에서 커맨드로 <code>.gitignore</code> 파일을 자동 생성합니다.</p>\n<p>먼저 터미널에서 Git에 <code>ignore</code>라는 별칭 커맨드를 등록합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">git</span> config --global alias.ignore <span class=\"token string\">'!gi() { curl -L -s https://www.gitignore.io/api/$@ ;}; gi'</span></code></pre></div>\n<p>그리고 나서 <code>git ignore</code> 명령어를 뒤에 프로그래밍 언어나 개발 도구의 이름을 붙여서 실행해봅니다.\n버전 관리에서 제외될 파일과 디렉토리를 콘솔에서 미리 확인해볼 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">git</span> ignore java\n\n<span class=\"token comment\"># Created by https://www.toptal.com/developers/gitignore/api/java</span>\n<span class=\"token comment\"># Edit at https://www.toptal.com/developers/gitignore?templates=java</span>\n\n<span class=\"token comment\">### Java ###</span>\n<span class=\"token comment\"># Compiled class file</span>\n*.class\n\n<span class=\"token comment\"># Log file</span>\n*.log\n\n<span class=\"token comment\"># BlueJ files</span>\n*.ctxt\n\n<span class=\"token comment\"># Mobile Tools for Java (J2ME)</span>\n.mtj.tmp/\n\n<span class=\"token comment\"># Package Files #</span>\n*.jar\n*.war\n*.nar\n*.ear\n*.zip\n*.tar.gz\n*.rar\n\n<span class=\"token comment\"># virtual machine crash logs, see http://www.java.com/en/download/help/error_hotspot.xml</span>\nhs_err_pid*\n\n<span class=\"token comment\"># End of https://www.toptal.com/developers/gitignore/api/java</span></code></pre></div>\n<p>이제 해당 내용을 콘솔에 출력하는 대신에 <code>.gitignore</code> 파일에 쓰기만 하면 되겠죠?</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">git</span> ignore java <span class=\"token operator\">>></span> .gitignore</code></pre></div>\n<h2 id=\"마치면서\" style=\"position:relative;\"><a href=\"#%EB%A7%88%EC%B9%98%EB%A9%B4%EC%84%9C\" aria-label=\"마치면서 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>마치면서</h2>\n<p>이상으로 Git이 특정 파일이나 디렉토리를 추적하지 못하게 하기 위해서 사용하는 <code>.gitignore</code> 파일에 대해서 알아보았습니다.</p>","timeToRead":7,"fields":{"slug":"/gitignore/","tags":["Git","GitHub",".gitignore"]},"frontmatter":{"title":".gitignore 파일 사용법","date":"Nov 1, 2021"}},"next":{"fields":{"slug":"/js-nvm/"},"frontmatter":{"title":"nvm으로 여러 Node.js 버전 관리하기"}}}},"staticQueryHashes":["2168229929","2362167539","3056348342"]}