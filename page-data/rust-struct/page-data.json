{
    "componentChunkName": "component---src-templates-detail-template-jsx",
    "path": "/rust-struct/",
    "result": {"pageContext":{"previous":null,"node":{"html":"<p>Rust에 내장된 <a href=\"/rust-primitives/\">원시 자료형</a>만으로는 실제 비지니스에서 필요한 복잡한 구조의 데이터를 표현하는데는 한계가 있습니다.\n그래서 구조체(Structure)를 통해서 여러 개의 관련된 데이터를 한 곳에 묶어서 추상화하게 되죠.</p>\n<p>이 글에서는 Rust에서 구조체를 정의하고 사용하는 방법을 예제와 함께 살펴보겠습니다.</p>\n<h2 id=\"구조체란\" style=\"position:relative;\"><a href=\"#%EA%B5%AC%EC%A1%B0%EC%B2%B4%EB%9E%80\" aria-label=\"구조체란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>구조체란?</h2>\n<p>구조체(struct)는 여러 필드를 가진 사용자 정의(custom) 자료형(type)입니다.\n<code>struct</code> 키워드로 구조체의 이름을 붙이고, 중괄호 안에 각 필드의 이름과 자료형을 나열하면 됩니다.</p>\n<p>예를 들어, 번호, 이메일, 활성화 여부로 이루어진 사용자 정보를 나타내는 간단한 구조체를 다음과 같이 정의할 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"rust\"><pre class=\"language-rust\"><code class=\"language-rust\"><span class=\"token keyword\">struct</span> <span class=\"token type-definition class-name\">User</span> <span class=\"token punctuation\">{</span>\n    no<span class=\"token punctuation\">:</span> <span class=\"token keyword\">u16</span><span class=\"token punctuation\">,</span>\n    email<span class=\"token punctuation\">:</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span>\n    active <span class=\"token keyword\">bool</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Java와 같은 객체 지향 프로그래밍 언어를 써보셨다면 클래스(class)와 개념적으로 유사하다고 느끼실 것 같습니다.</p>\n<h2 id=\"인스턴스-생성\" style=\"position:relative;\"><a href=\"#%EC%9D%B8%EC%8A%A4%ED%84%B4%EC%8A%A4-%EC%83%9D%EC%84%B1\" aria-label=\"인스턴스 생성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>인스턴스 생성</h2>\n<p>구조체를 사용하려면 각 필드의 값을 지정하여 인스턴스를 생성해야 합니다.\nRust에서 인스턴스를 생성할 때는 <code>new</code> 키워드는 필요없으며, 구조체 이름 뒤에 중괄호로 각 필드의 이름과 값을 명시해주면 됩니다.</p>\n<p>구조체 인스턴스를 생성하려면 필드 값을 지정해야 합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"rust\"><pre class=\"language-rust\"><code class=\"language-rust\"><span class=\"token keyword\">let</span> user <span class=\"token operator\">=</span> <span class=\"token class-name\">User</span> <span class=\"token punctuation\">{</span>\n    no<span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n    email<span class=\"token punctuation\">:</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">::</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"test@user.com\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    active<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>변수 이름과 필드 이름이 동일한 경우에는 인스턴스를 생성할 때 굳이 같은 이름을 두 번 반복할 필요없이 생략가능합니다.</p>\n<div class=\"gatsby-highlight has-highlighted-lines\" data-language=\"rust\"><pre class=\"language-rust\"><code class=\"language-rust\"><span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">let</span> no <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">let</span> email <span class=\"token operator\">=</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">::</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"test@user.com\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>\n<span class=\"token keyword\">let</span> user <span class=\"token operator\">=</span> <span class=\"token class-name\">User</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">    no<span class=\"token punctuation\">,</span> <span class=\"token comment\">// `no: no,`와 동일</span></span><span class=\"gatsby-highlight-code-line\">    email<span class=\"token punctuation\">,</span> <span class=\"token comment\">// `email: email,`와 동일</span></span>    active<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>기존 구조체 인스턴를 기반으로 새로운 구조체 인스턴스를 만드는 것도 가능합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"rust\"><pre class=\"language-rust\"><code class=\"language-rust\"><span class=\"token keyword\">let</span> otherUser <span class=\"token operator\">=</span> <span class=\"token class-name\">User</span> <span class=\"token punctuation\">{</span>\n    no<span class=\"token punctuation\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">..</span>user\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"필드-접근\" style=\"position:relative;\"><a href=\"#%ED%95%84%EB%93%9C-%EC%A0%91%EA%B7%BC\" aria-label=\"필드 접근 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>필드 접근</h2>\n<p>구조체의 필드 값은 <code>.</code> 연산자를 통해 <code>인스턴스명.필드명</code>의 형식으로 접근할 수 있습니다.</p>\n<div class=\"gatsby-highlight has-highlighted-lines\" data-language=\"rust\"><pre class=\"language-rust\"><code class=\"language-rust\"><span class=\"token keyword\">fn</span> <span class=\"token function-definition function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> user <span class=\"token operator\">=</span> <span class=\"token class-name\">User</span> <span class=\"token punctuation\">{</span>\n        no<span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n        email<span class=\"token punctuation\">:</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">::</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"test@user.com\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        active<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token macro property\">println!</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"번호: {}\"</span><span class=\"token punctuation\">,</span> user<span class=\"token punctuation\">.</span>no<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token macro property\">println!</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"이메일: {}\"</span><span class=\"token punctuation\">,</span> user<span class=\"token punctuation\">.</span>email<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token macro property\">println!</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"활성화 여부: {}\"</span><span class=\"token punctuation\">,</span> user<span class=\"token punctuation\">.</span>active<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gatsby-code-title\">결과</div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">번호: <span class=\"token number\">1</span>\n이메일: test@uesr.com\n활성화 여부: <span class=\"token boolean\">true</span></code></pre></div>\n<p>구조체 분해 할당(Destructuring)을 통해서 동시에 필드 값을 여러 변수에 할당할 후에 접근할 수도 있습니다.</p>\n<div class=\"gatsby-highlight has-highlighted-lines\" data-language=\"rust\"><pre class=\"language-rust\"><code class=\"language-rust\"><span class=\"token keyword\">fn</span> <span class=\"token function-definition function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> user <span class=\"token operator\">=</span> <span class=\"token class-name\">User</span> <span class=\"token punctuation\">{</span>\n        no<span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n        email<span class=\"token punctuation\">:</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">::</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"test@user.com\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        active<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">let</span> <span class=\"token class-name\">User</span> <span class=\"token punctuation\">{</span> no<span class=\"token punctuation\">,</span> email<span class=\"token punctuation\">,</span> active <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> user<span class=\"token punctuation\">;</span></span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token macro property\">println!</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"번호: {no}\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token macro property\">println!</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"이메일: {email}\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token macro property\">println!</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"활성화 여부: {active}\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gatsby-code-title\">결과</div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">번호: <span class=\"token number\">1</span>\n이메일: test@uesr.com\n활성화 여부: <span class=\"token boolean\">true</span></code></pre></div>\n<h2 id=\"메서드-추가\" style=\"position:relative;\"><a href=\"#%EB%A9%94%EC%84%9C%EB%93%9C-%EC%B6%94%EA%B0%80\" aria-label=\"메서드 추가 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>메서드 추가</h2>\n<p>구조체를 이루고 있는 데이터를 상대로 어떤 작업이 빈번하게 일어나야 한다면 구조체에 메서드로 추가할 수 있습니다.\n이렇게 특정 구조체를 위해 작성하는 함수를 메서드라고 합니다.</p>\n<p><code>impl</code> 키워드로 대상 구조체의 이름을 명시하고, 중괄호 안에 메서드를 일반 함수 정의하듯이 나열해주면 됩니다.\n메서드 안에서 인스턴스의 필드에 접근할 수 있도록, 첫 번째 매개변수인 <code>self</code>를 통해서 인스턴스 자신이 넘어오게 되어있습니다.</p>\n<p>예를 들어, 위에서 정의한 <code>User</code> 구조체에 활성화 여부에 따라 다른 메시지를 출력해주는 <code>display()</code> 메서드를 추가해보겠습니다.</p>\n<div class=\"gatsby-highlight has-highlighted-lines\" data-language=\"rust\"><pre class=\"language-rust\"><code class=\"language-rust\"><span class=\"token keyword\">struct</span> <span class=\"token type-definition class-name\">User</span> <span class=\"token punctuation\">{</span>\n    no<span class=\"token punctuation\">:</span> <span class=\"token keyword\">u16</span><span class=\"token punctuation\">,</span>\n    email<span class=\"token punctuation\">:</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span>\n    active <span class=\"token keyword\">bool</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">impl</span> <span class=\"token class-name\">User</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">fn</span> <span class=\"token function-definition function\">display</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span><span class=\"token keyword\">self</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">        <span class=\"token keyword\">if</span> <span class=\"token keyword\">self</span><span class=\"token punctuation\">.</span>active <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">            <span class=\"token macro property\">println!</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"사용자 {}: {}\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">self</span><span class=\"token punctuation\">.</span>no<span class=\"token punctuation\">,</span> <span class=\"token keyword\">self</span><span class=\"token punctuation\">.</span>email<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">            <span class=\"token macro property\">println!</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"비활성화된 사용자입니다.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">        <span class=\"token punctuation\">}</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token punctuation\">}</span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token punctuation\">}</span></span></code></pre></div>\n<p>그러면 이렇게 구조체의 인스턴스를 상대로 메서드를 호출할 수 있습니다.</p>\n<div class=\"gatsby-highlight has-highlighted-lines\" data-language=\"rust\"><pre class=\"language-rust\"><code class=\"language-rust\"><span class=\"token keyword\">fn</span> <span class=\"token function-definition function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> user <span class=\"token operator\">=</span> <span class=\"token class-name\">User</span> <span class=\"token punctuation\">{</span>\n        no<span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n        email<span class=\"token punctuation\">:</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">::</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"test@user.com\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        active<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"gatsby-highlight-code-line\">    user<span class=\"token punctuation\">.</span><span class=\"token function\">display</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gatsby-code-title\">결과</div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">사용자 <span class=\"token number\">1</span>: test@user.com</code></pre></div>\n<h2 id=\"튜플-구조체\" style=\"position:relative;\"><a href=\"#%ED%8A%9C%ED%94%8C-%EA%B5%AC%EC%A1%B0%EC%B2%B4\" aria-label=\"튜플 구조체 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>튜플 구조체</h2>\n<p>구조체를 정의할 때 필드 이름없이 필드 자료형만 나열할 수도 있는데 이를 튜플 구조체(Tuple Structure)라고 합니다.</p>\n<p>이름이 있는 튜플처럼 사용할 수 있는 구조체입니다:</p>\n<div class=\"gatsby-highlight\" data-language=\"rust\"><pre class=\"language-rust\"><code class=\"language-rust\"><span class=\"token keyword\">struct</span> <span class=\"token type-definition class-name\">Point</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">i32</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">i32</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">fn</span> <span class=\"token function-definition function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> p <span class=\"token operator\">=</span> <span class=\"token class-name\">Point</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token macro property\">println!</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"({}, {})\"</span><span class=\"token punctuation\">,</span> p<span class=\"token number\">.0</span><span class=\"token punctuation\">,</span> p<span class=\"token number\">.1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>튜플 구조체는 필드의 이름이 없고 대신 필드의 순서가 있기 때문에 인덱스를 통해서 필드 값에 접근합니다.</p>\n<p>파이썬을 사용해보셨다면 <a href=\"/python-immutable-datatypes/\">Namedtuple</a>과 비슷한 개념이라고 볼 수 있겠습니다.</p>\n<h2 id=\"유닛-구조체\" style=\"position:relative;\"><a href=\"#%EC%9C%A0%EB%8B%9B-%EA%B5%AC%EC%A1%B0%EC%B2%B4\" aria-label=\"유닛 구조체 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>유닛 구조체</h2>\n<p>유닛 구조체(Unit Structure)라는 아예 필드가 없는 특수한 형태의 구조체도 있습니다.\n어떤 타입의 태그나 마커처럼 활용됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"rust\"><pre class=\"language-rust\"><code class=\"language-rust\"><span class=\"token keyword\">struct</span> <span class=\"token type-definition class-name\">Marker</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">fn</span> <span class=\"token function-definition function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> _m <span class=\"token operator\">=</span> <span class=\"token class-name\">Marker</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>주로 Trait 구현 시 타입 구분자로 많이 볼 수 있습니다.</p>\n<h2 id=\"디버깅-요령\" style=\"position:relative;\"><a href=\"#%EB%94%94%EB%B2%84%EA%B9%85-%EC%9A%94%EB%A0%B9\" aria-label=\"디버깅 요령 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>디버깅 요령</h2>\n<p>기본적으로 구조체의 인스턴스는 <code>println!</code>과 같은 <a href=\"/rust-print/\">출력 메크로</a>를 통해서 출력이 불가능합니다.</p>\n<div class=\"gatsby-code-title\">결과</div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">println<span class=\"token operator\">!</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"{user}\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          ^^^^^^ <span class=\"token variable\"><span class=\"token variable\">`</span>User<span class=\"token variable\">`</span></span> cannot be formatted with the default formatter</code></pre></div>\n<p>이 문제는 <code>Display</code> 트레잇을 직접 구현하거나 <code>Debug</code> 트레잇을 자동 파생시켜서 해결할 수 있습니다.</p>\n<p>예를 들어, 우리가 작성한 <code>User</code> 구조체에 <code>Debug</code> 트레잇을 파생시킨 후 인스턴스를 출력해보겠습니다.</p>\n<div class=\"gatsby-highlight has-highlighted-lines\" data-language=\"rust\"><pre class=\"language-rust\"><code class=\"language-rust\"><span class=\"gatsby-highlight-code-line\"><span class=\"token attribute attr-name\">#[derive(Debug)]</span></span><span class=\"token keyword\">struct</span> <span class=\"token type-definition class-name\">User</span> <span class=\"token punctuation\">{</span>\n    username<span class=\"token punctuation\">:</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span>\n    email<span class=\"token punctuation\">:</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span>\n    active<span class=\"token punctuation\">:</span> <span class=\"token keyword\">bool</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">fn</span> <span class=\"token function-definition function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> user <span class=\"token operator\">=</span> <span class=\"token class-name\">User</span> <span class=\"token punctuation\">{</span>\n        no<span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n        email<span class=\"token punctuation\">:</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">::</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"test@user.com\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        active<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token macro property\">println!</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"{user:?}\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 한 줄 출력</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token macro property\">println!</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"{user:#?}\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 예쁘게 출력</span></span><span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gatsby-code-title\">결과</div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">User <span class=\"token punctuation\">{</span> no: <span class=\"token number\">1</span>, email: <span class=\"token string\">\"test@user.com\"</span>, active: <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span>\nUser <span class=\"token punctuation\">{</span>\n    no: <span class=\"token number\">1</span>,\n    email: <span class=\"token string\">\"test@user.com\"</span>,\n    active: true,\n<span class=\"token punctuation\">}</span></code></pre></div>\n<blockquote>\n<p>출력 메크로와 Display, Debug 트레잇에 대해서는 <a href=\"/rust-print/\">별도 포스팅</a>에서 자세히 다루고 있으니 참고바랍니다.</p>\n</blockquote>\n<h2 id=\"전체-코드\" style=\"position:relative;\"><a href=\"#%EC%A0%84%EC%B2%B4-%EC%BD%94%EB%93%9C\" aria-label=\"전체 코드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>전체 코드</h2>\n<p>본 포스팅에서 작성한 실습 코드는 <a href=\"https://play.rust-lang.org/?version=stable&#x26;mode=debug&#x26;edition=2024&#x26;code=%23%5Bderive%28Debug%29%5D%0Astruct+User+%7B%0A++++no%3A+u16%2C%0A++++email%3A+String%2C%0A++++active%3A+bool%2C%0A%7D%0A%0Aimpl+User+%7B%0A++++fn+display%28%26self%29+%7B%0A++++++++if+self.active+%7B%0A++++++++++++println%21%28%22%EC%82%AC%EC%9A%A9%EC%9E%90+%7B%7D%3A+%7B%7D%22%2C+self.no%2C+self.email%29%3B%0A++++++++%7D+else+%7B%0A++++++++++++println%21%28%22%EB%B9%84%ED%99%9C%EC%84%B1%ED%99%94%EB%90%9C+%EC%82%AC%EC%9A%A9%EC%9E%90%EC%9E%85%EB%8B%88%EB%8B%A4.%22%29%3B%0A++++++++%7D%0A++++%7D%0A%7D%0A%0Afn+main%28%29+%7B%0A++++let+no+%3D+1%3B%0A++++let+email+%3D+String%3A%3Afrom%28%22test%40user.com%22%29%3B%0A%0A++++let+user+%3D+User+%7B%0A++++++++no%2C%0A++++++++email%2C%0A++++++++active%3A+true%2C%0A++++%7D%3B%0A%0A++++println%21%28%22%EB%B2%88%ED%98%B8%3A+%7B%7D%22%2C+user.no%29%3B%0A++++println%21%28%22%EC%9D%B4%EB%A9%94%EC%9D%BC%3A+%7B%7D%22%2C+user.email%29%3B%0A++++println%21%28%22%ED%99%9C%EC%84%B1%ED%99%94+%EC%97%AC%EB%B6%80%3A+%7B%7D%22%2C+user.active%29%3B%0A%0A++++println%21%28%22%7Buser%3A%3F%7D%22%29%3B+%2F%2F+%ED%95%9C+%EC%A4%84+%EC%B6%9C%EB%A0%A5%0A++++println%21%28%22%7Buser%3A%23%3F%7D%22%29%3B+%2F%2F+%EC%98%88%EC%81%98%EA%B2%8C+%EC%B6%9C%EB%A0%A5%0A%0A++++let+otherUser+%3D+User+%7B%0A++++++++no%3A+2%2C%0A++++++++..user%0A++++%7D%3B%0A%0A++++otherUser.display%28%29%3B%0A++++%0A++++let+User+%7B+no%2C+email%2C+active+%7D+%3D+otherUser%3B%0A%0A++++println%21%28%22%EB%B2%88%ED%98%B8%3A+%7Bno%7D%22%29%3B%0A++++println%21%28%22%EC%9D%B4%EB%A9%94%EC%9D%BC%3A+%7Bemail%7D%22%29%3B%0A++++println%21%28%22%ED%99%9C%EC%84%B1%ED%99%94+%EC%97%AC%EB%B6%80%3A+%7Bactive%7D%22%29%3B%0A%7D%0A\">여기서</a> 확인하시고 직접 실행해보실 수 있습니다.</p>\n<h2 id=\"마무리\" style=\"position:relative;\"><a href=\"#%EB%A7%88%EB%AC%B4%EB%A6%AC\" aria-label=\"마무리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>마무리</h2>\n<p>Rust의 구조체는 단순한 데이터 추상화 도구를 넘어서 메서드까지 추가하면 강력한 캡슐화 도구로 발전합니다.\n다양한 구조체 표현법과 활용 방법을 익혀두면, 앞으로 Rust 프로젝트에서 데이터 모델링이 훨씬 쉬워질 것입니다.</p>","timeToRead":7,"fields":{"slug":"/rust-struct/","tags":["Rust","structure"]},"frontmatter":{"title":"Rust 기초: 구조체 (Structure) 사용법","date":"Jun 29, 2025"}},"next":{"fields":{"slug":"/rust-primitives/"},"frontmatter":{"title":"Rust 기초: 원시 자료형(Primitives) 정리"}}}},
    "staticQueryHashes": ["2168229929","2362167539","3056348342"]}