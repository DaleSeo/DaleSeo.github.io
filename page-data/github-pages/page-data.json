{
    "componentChunkName": "component---src-templates-detail-template-jsx",
    "path": "/github-pages/",
    "result": {"pageContext":{"previous":{"fields":{"slug":"/github-pages-custom-domain/"},"frontmatter":{"title":"GitHub Pages에 커스텀 도메인 연결하기"}},"node":{"html":"<div class=\"gatsby-resp-iframe-wrapper\" style=\"padding-bottom: 56.25%; position: relative; height: 0; overflow: hidden; \" > <iframe src=\"https://www.youtube.com/embed/rd1C-LFz8fU?si=m5Y1VSJmwaIoHcUT\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" referrerpolicy=\"strict-origin-when-cross-origin\" allowfullscreen=\"\" style=\" position: absolute; top: 0; left: 0; width: 100%; height: 100%; \"></iframe> </div>\n<p>GitHub Pages는 깃허브에서 코드 저장소에 딸려오는 무료 호스팅 서비스입니다.\nGitHub Pages를 사용하면 정적 웹사이트, 블로그, 포트폴리오, 프로젝트 문서 등을 아주 손쉽게 웹에 배포할 수 있죠.</p>\n<p>이번 포스팅에서는 간단한 실습을 통해서 GitHub Pages에 웹사이트를 배포하는 가장 기초적인 방법을 알려드리겠습니다.</p>\n<h2 id=\"github-pages란\" style=\"position:relative;\"><a href=\"#github-pages%EB%9E%80\" aria-label=\"github pages란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>GitHub Pages란?</h2>\n<p>GitHub Pages는 깃허브 저장소에 올려놓은 웹 프로젝트를 최소한의 노력으로 호스팅할 수 있는 서비스입니다.\n깃허브에서 거의 초창기부터 무료로 제공하고 있는데 은근히 모르시는 분들이 많아서 개인적으로 아쉬웠던 완전 혜자 기능인데요.\n백엔드 서버나 데이터베이스를 필요로 하지 않는 단순한 웹사이트를 호스팅하는데 아주 적합합니다.</p>\n<p>사실 요즘 Netlify나 Vercel과 같은 훌륭한 호스팅 플랫폼이 워낙 많지만 제대로 사용하려면 해당 서비스를 공부를 해야 한다는 부담이 있죠.\n하지만 GitHub Pages를 활용하면 이러한 학습 곡선을 최소화하면서 아주 쉽게 웹사이트를 배포할 수 있습니다.</p>\n<p>GitHub Pages는 깃허브 계정이 있는 누구나 사용할 수 있으며, 기본적으로 <code>github.io</code> 서브 도메인을 제공해주며 별도로 구매한 커스텀 도메인도 연결할 수 있습니다.\nGitHub Pages를 통해 배포된 웹사이트는 깃허브의 빠르고 안정적인 글로벌 CDN의 혜택을 누릴 수 있다는 것도 큰 매력입니다.</p>\n<p>월간 방문자가 10만명이 넘는 제 블로그도 GitHub Pages로 호스팅하고 있는데 아주 만족하며 쓰고 있어요 😎👍</p>\n<h2 id=\"github-pages-배포-방법\" style=\"position:relative;\"><a href=\"#github-pages-%EB%B0%B0%ED%8F%AC-%EB%B0%A9%EB%B2%95\" aria-label=\"github pages 배포 방법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>GitHub Pages 배포 방법</h2>\n<p>GitHub Pages를 통해서 우리는 크게 2가지 방법으로 웹사이트를 배포할 수 있습니다.</p>\n<p>첫 번째 방법은 저장소의 특정 브랜치의 특정 디렉토리를 배포 소스(source)로 설정하는 것입니다.\n그러면 설정한 폴더에 새로운 웹사이트의 코드가 들어올(push) 때 마다 자동으로 재배포가 일어납니다.</p>\n<p>두 번째 방법은 사용하여 웹사이트의 빌드와 배포를 위한 <a href=\"/?tag=GitHubActions\">GitHub Actions</a> 워크플로우를 직접 구성하는 것입니다.</p>\n<p>본 포스팅에서는 GitHub Pages를 처음 사용하는 분들을 위해서 아주 쉬운 첫 번째 방법만 다루겠습니다.\n두 번째 방법은 추후 기회가 되면 후속 포스팅에서 다루도록 하겠습니다.</p>\n<h2 id=\"코드-저장소-생성\" style=\"position:relative;\"><a href=\"#%EC%BD%94%EB%93%9C-%EC%A0%80%EC%9E%A5%EC%86%8C-%EC%83%9D%EC%84%B1\" aria-label=\"코드 저장소 생성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>코드 저장소 생성</h2>\n<p>간단한 실습을 위해서 본인 깃허브 계정에 새로운 코드 저장소(repository)를 하나를 만들겠습니다.</p>\n<ul>\n<li>저장소 이름은 원하는 거 아무거나로 하시면 됩니다.</li>\n<li>GitHub Pages를 공짜로 쓰시려면 반드시 공개(Public) 저장소로 만드셔야 합니다.</li>\n<li>실습의 편의를 위해서 <code>README.md</code> 파일도 같이 생성해주세요.</li>\n</ul>\n<p><img src=\"https://res.cloudinary.com/daleseo/image/upload/v1733700580/github-pages-new-repository.png\" alt=\"코드 저장소 생성\"></p>\n<h2 id=\"github-pages-활성화\" style=\"position:relative;\"><a href=\"#github-pages-%ED%99%9C%EC%84%B1%ED%99%94\" aria-label=\"github pages 활성화 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>GitHub Pages 활성화</h2>\n<p>저장소만 생성하면 그 즉시 GitHub Pages 기능을 활성화시킬 수 있습니다.\n<code>Settings</code> 탭에 들어가서 좌측 사이드 메뉴에서 <code>Pages</code>를 클릭합니다.</p>\n<ol>\n<li><code>Deploy from a branch</code>를 선택합니다. (기존에 건드신 적이 없다면 이미 선택되어 있을 것입니다.)</li>\n<li><code>main</code> 브랜치의 루트(<code>/</code>) 디렉토리를 선택합니다.</li>\n<li><code>Save</code> 버튼을 눌러서 설정 사항을 반영합니다.</li>\n</ol>\n<p><img src=\"https://res.cloudinary.com/daleseo/image/upload/v1733701186/%08github-pages-settings.png\" alt=\"GitHub Pages 설정\"></p>\n<h2 id=\"github-actions-대기\" style=\"position:relative;\"><a href=\"#github-actions-%EB%8C%80%EA%B8%B0\" aria-label=\"github actions 대기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>GitHub Actions 대기</h2>\n<p>설정 사항을 저장한 후 <code>Actions</code> 탭에 들어가면 <code>pages-build-deployment</code>라는 워크플로우가 실행되고 있을텐데요.\n한 30초 정도 기다리면 웹사이트 배포가 완료되어 접속할 수 있는 URL을 얻으실 수 있으실 것입니다.</p>\n<p><img src=\"https://res.cloudinary.com/daleseo/image/upload/v1733701140/github-pages-actions.png\" alt=\"GitHub Actions 확인\"></p>\n<p>브라우저에서 해당 URL을 열어보면 <code>README.md</code> 파일의 내용이 HTML로 변환되어 뜰 것입니다.</p>\n<p><img src=\"https://res.cloudinary.com/daleseo/image/upload/v1733701141/github-pages-deploy-1.png\" alt=\"1차 배포 결과\"></p>\n<p>어떤가요? 정말 너무 쉽지 않나요?\n축하합니다! 🎉 여러분은 방금 GitHub Pages에 첫 번째 웹사이트를 성공적으로 배포하셨습니다! 🥳</p>\n<h2 id=\"readmemd-파일-변경\" style=\"position:relative;\"><a href=\"#readmemd-%ED%8C%8C%EC%9D%BC-%EB%B3%80%EA%B2%BD\" aria-label=\"readmemd 파일 변경 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>README.md 파일 변경</h2>\n<p>저장소의 루트 디렉토리에 새로운 웹사이트의 코드가 들어올 때 마다 자동으로 재배포가 일어나야 합니다.\n이를 테스트하기 위해서 <code>README.md</code> 파일에 <code>안녕하세요?</code>를 추가해보겠습니다.\n파일 변경 작업은 웹에서 바로 하셔도 되고 로컬하신 변경하신 후 <code>git push</code>를 하셔도 됩니다.</p>\n<div class=\"gatsby-code-title\">README.md</div>\n<div class=\"gatsby-highlight\" data-language=\"md\"><pre class=\"language-md\"><code class=\"language-md\"><span class=\"token title important\"><span class=\"token punctuation\">#</span> github-pages</span>\n\n안녕하세요?</code></pre></div>\n<p><code>README.md</code> 파일을 변경 후 <code>Actions</code> 탭에 들어가보면 다시 <code>pages-build-deployment</code> 워크플로우가 실행되고 있을 것입니다.</p>\n<p>워크플로우가 끝난 후 기존 URL을 브라우저에서 새로고침을 해보시면 변경된 컨텐츠가 웹사이트에 반영이 될 것입니다.</p>\n<p><img src=\"https://res.cloudinary.com/daleseo/image/upload/v1733701688/github-pages-deploy-2.png\" alt=\"2차 배포 결과\"></p>\n<h2 id=\"indexhtml-파일-생성\" style=\"position:relative;\"><a href=\"#indexhtml-%ED%8C%8C%EC%9D%BC-%EC%83%9D%EC%84%B1\" aria-label=\"indexhtml 파일 생성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>index.html 파일 생성</h2>\n<p>GitHub Pages는 <code>README.md</code> 뿐만 아니라 <code>index.md</code>와 <code>index.html</code>도 웹사이트의 진입 파일(entry file)로 인식합니다.\n실제 웹 프로젝트에서는 <code>index.html</code>을 진입 파일로 사용하는 경우가 압도적으로 많은 것이므로, 저장소에 아래과 같은 간단한 <code>index.html</code> 파일을 작성한 후 코드 저장소로 올려보겠습니다.</p>\n<div class=\"gatsby-code-title\">index.html</div>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span>Our Website<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span> <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value css language-css\"><span class=\"token property\">color</span><span class=\"token punctuation\">:</span> blue<span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">></span></span>반갑습니다!<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>마찬가지로 웹사이트 배포가 끝난 후 URL을 브라우저에서 새로고침을 해보시면 우리가 작성한 <code>index.html</code> 파일의 컨텐츠가 나타날 것입니다.</p>\n<p><img src=\"https://res.cloudinary.com/daleseo/image/upload/v1733701846/github-pages-deploy-3.png\" alt=\"3차 배포 결과\"></p>\n<h2 id=\"github-pages-url\" style=\"position:relative;\"><a href=\"#github-pages-url\" aria-label=\"github pages url permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>GitHub Pages URL</h2>\n<p>GitHub Pages를 통해서 배포된 웹사이트 URL은 다음과 같은 형태로 결정됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">https://&lt;조직이나 사용자 이름>.github.io/&lt;저장소 이름>/</code></pre></div>\n<p>예를 들어, 저는 <code>daleschool</code>라는 조직에 <code>github-pages</code>라는 저장소에서 GitHub Pages를 사용했으므로 URL이 다음과 같습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">https://daleschool.github.io/github-pages/</code></pre></div>\n<p>예외로 저장소 이름을 <code>&#x3C;조직이나 사용자 이름>.github.io</code>로 지으면 <code>https://&#x3C;조직이나 사용자 이름>.github.io/</code>로 URL이 결정되는데요.\n즉, URL 맨 뒤에 있는 저장소 이름이 사라져서 URL이 간소화되는 장점이 있습니다.</p>\n<p>참고로 GitHub Pages URL은 <code>Settings</code> 탭에 들어가시면 언제나 확인해보실 수 있습니다.</p>\n<p><img src=\"https://res.cloudinary.com/daleseo/image/upload/v1733702037/github-pages-url.png\" alt=\"GitHub Pages URL\"></p>\n<p>GitHub Pages에서 제공해주는 기본 도메인을 사용하지 않고 별도로 구매한 커스텀 도메인을 사용할 수도 있는데요.\n이 부분에 대해서는 후속 포스팅에서 다루도록 하겠습니다.</p>\n<h2 id=\"마치면서\" style=\"position:relative;\"><a href=\"#%EB%A7%88%EC%B9%98%EB%A9%B4%EC%84%9C\" aria-label=\"마치면서 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>마치면서</h2>\n<p>지금까지 깃허브에서 제공하는 웹사이트 호스팅 서비스인 GitHub Pages에 대해서 살펴보았습니다.\n깃허브에 코드 저장소를 가지고 계시다면 배포 과정이 정말 간편해서 꼭 써보시라고 강력 추천드리고 싶습니다.\nGitHub Pages를 잘 활용하셔서 여러분의 웹 프로젝트를 쉽고 빠르게 배포하실 수 있으셨으면 좋겠습니다.</p>\n<blockquote>\n<p>GitHub Pages 관련 포스팅은 <a href=\"/?tag=GitHubPages\">GitHub Pages 태그</a>를 통해서 쉽게 만나보세요!</p>\n</blockquote>","timeToRead":4,"fields":{"slug":"/github-pages/","tags":["GitHub","GitHubPages"]},"frontmatter":{"title":"GitHub Pages에 웹사이트 배포하기","date":"Dec 5, 2024"}},"next":{"fields":{"slug":"/css-has/"},"frontmatter":{"title":"CSS의 :has() 가상 클래스 사용법"}}}},
    "staticQueryHashes": ["2168229929","2362167539","3056348342"]}