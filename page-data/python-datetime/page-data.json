{"componentChunkName":"component---src-templates-detail-template-jsx","path":"/python-datetime/","result":{"pageContext":{"previous":{"fields":{"slug":"/js-nullish-coalescing/"},"frontmatter":{"title":"[ES2020] ?? 연산자 - Nullish Coalescing"}},"node":{"html":"<p>어떤 언어를 사용하든지 프로그래밍을 하면서 날짜와 시간 처리는 피하기 어려운 부분입니다.\n파이썬은 내장 모듈인 <code>datetime</code>을 통해서 어떻게 날짜와 시간 데이터를 처리를 지원하고 있는지 알아보겠습니다.</p>\n<h2 id=\"timedelta\" style=\"position:relative;\"><a href=\"#timedelta\" aria-label=\"timedelta permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>timedelta</h2>\n<p><code>datetime</code> 내장 모듈의 <code>timedelta</code> 클래스는 기간을 표현하기 위해서 사용됩니다.</p>\n<p><code>timedelta</code> 클래스의 생성자는 주, 일, 시, 분, 초, 마이크로 초, 밀리 초를 인자로 받습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">from</span> datetime <span class=\"token keyword\">import</span> timedelta\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> timedelta<span class=\"token punctuation\">(</span>days<span class=\"token operator\">=</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> hours<span class=\"token operator\">=</span><span class=\"token number\">17</span><span class=\"token punctuation\">,</span> minutes<span class=\"token operator\">=</span><span class=\"token number\">30</span><span class=\"token punctuation\">)</span>\ndatetime<span class=\"token punctuation\">.</span>timedelta<span class=\"token punctuation\">(</span>days<span class=\"token operator\">=</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> seconds<span class=\"token operator\">=</span><span class=\"token number\">63000</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p><code>timedelta</code> 객체는 내부적으로 일, 초, 마이크로 초 단위만 저장하기 때문에 위와 같이 해당 정보만 표시됩니다.</p>\n<p>파이썬의 날짜/시간 계산은 다른 언어에 비해서 매우 간결하고 직관적인데요.\n바로 이 <code>timedelta</code>를 통해 산술/대소 연산자를 사용할 수 있기 때문입니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">from</span> datetime <span class=\"token keyword\">import</span> date<span class=\"token punctuation\">,</span> timedelta\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> week <span class=\"token operator\">=</span> timedelta<span class=\"token punctuation\">(</span>weeks<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> week\ndatetime<span class=\"token punctuation\">.</span>timedelta<span class=\"token punctuation\">(</span>days<span class=\"token operator\">=</span><span class=\"token number\">7</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> next_week <span class=\"token operator\">=</span> date<span class=\"token punctuation\">.</span>today<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> week\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> next_week\ndatetime<span class=\"token punctuation\">.</span>date<span class=\"token punctuation\">(</span><span class=\"token number\">2020</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">25</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> two_weeks <span class=\"token operator\">=</span> week <span class=\"token operator\">*</span> <span class=\"token number\">2</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> two_weeks\ndatetime<span class=\"token punctuation\">.</span>timedelta<span class=\"token punctuation\">(</span>days<span class=\"token operator\">=</span><span class=\"token number\">14</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> week <span class=\"token operator\">&lt;</span> two_weeks\n<span class=\"token boolean\">True</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> two_weeks <span class=\"token operator\">==</span> timedelta<span class=\"token punctuation\">(</span>weeks<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n<span class=\"token boolean\">True</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> last_week <span class=\"token operator\">=</span> next_week <span class=\"token operator\">-</span> two_weeks\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> last_week\ndatetime<span class=\"token punctuation\">.</span>date<span class=\"token punctuation\">(</span><span class=\"token number\">2020</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>위와 같이 앞으로 다룰 <code>date</code>나 <code>time</code>, <code>datetime</code> 객체를 대상으로 유연한 날짜/시간 계산을 할 수 있습니다.</p>\n<h2 id=\"timezone\" style=\"position:relative;\"><a href=\"#timezone\" aria-label=\"timezone permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>timezone</h2>\n<p><code>datetime</code> 내장 모듈의 <code>timezone</code> 클래스는 시간대를 표현하기 위해서 사용됩니다.</p>\n<p><code>timezone</code> 클래스의 생성자는 UTC 기준으로 시차를 표현하는 <code>timedelta</code> 객체를 인자로 받아 <code>timezone</code> 객체를 생성해줍니다.\n예를 들어, 한국은 UTC 기준으로 9시간이 빠르므로 다음과 같이 <code>timezone</code> 객체를 생성할 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">from</span> datetime <span class=\"token keyword\">import</span> timedelta<span class=\"token punctuation\">,</span> timezone\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> timezone<span class=\"token punctuation\">(</span>timedelta<span class=\"token punctuation\">(</span>hours<span class=\"token operator\">=</span><span class=\"token number\">9</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\ndatetime<span class=\"token punctuation\">.</span>timezone<span class=\"token punctuation\">(</span>datetime<span class=\"token punctuation\">.</span>timedelta<span class=\"token punctuation\">(</span>seconds<span class=\"token operator\">=</span><span class=\"token number\">32400</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>모든 시간대의 기준이 되는 UTC 시간대는 <code>utc</code> 속성을 통해 바로 얻을 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> timezone<span class=\"token punctuation\">(</span>timedelta<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\ndatetime<span class=\"token punctuation\">.</span>timezone<span class=\"token punctuation\">.</span>utc\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> timezone<span class=\"token punctuation\">.</span>utc\ndatetime<span class=\"token punctuation\">.</span>timezone<span class=\"token punctuation\">.</span>utc</code></pre></div>\n<p><code>timezone</code> 객체는 앞으로 다룰 <code>time</code>과 <code>datetime</code> 객체의 <code>tzinfo</code> 속성값으로 사용됩니다.</p>\n<h2 id=\"date\" style=\"position:relative;\"><a href=\"#date\" aria-label=\"date permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>date</h2>\n<p><code>datetime</code> 내장 모듈의 <code>date</code> 클래스는 날짜를 표현하는데 사용됩니다.</p>\n<p><code>date</code> 클래스의 생성자는 연, 월, 일 데이터를 인자로 받습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">from</span> datetime <span class=\"token keyword\">import</span> date\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> date<span class=\"token punctuation\">(</span><span class=\"token number\">2019</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12</span><span class=\"token punctuation\">,</span> <span class=\"token number\">25</span><span class=\"token punctuation\">)</span>\ndatetime<span class=\"token punctuation\">.</span>date<span class=\"token punctuation\">(</span><span class=\"token number\">2019</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12</span><span class=\"token punctuation\">,</span> <span class=\"token number\">25</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>오늘 날짜를 얻고 싶다면 <code>date</code> 클래스의 <code>today()</code> 메서드를 사용합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> date<span class=\"token punctuation\">.</span>today<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\ndatetime<span class=\"token punctuation\">.</span>date<span class=\"token punctuation\">(</span><span class=\"token number\">2020</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">18</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p><code>date</code> 클래스의 <code>isoformat()</code> 메서드는 <code>date</code> 객체를 <code>YYYY-MM-DD</code> 형태의 문자열로 변환해줍니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> today<span class=\"token punctuation\">.</span>isoformat<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token string\">'2020-07-18'</span></code></pre></div>\n<p>반대로 <code>date</code> 클래스의 <code>fromisoformat()</code> 메서드는 <code>YYYY-MM-DD</code> 형태의 문자열을 <code>date</code> 객체로 변환해줍니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> date<span class=\"token punctuation\">.</span>fromisoformat<span class=\"token punctuation\">(</span><span class=\"token string\">'2020-07-18'</span><span class=\"token punctuation\">)</span>\ndatetime<span class=\"token punctuation\">.</span>date<span class=\"token punctuation\">(</span><span class=\"token number\">2020</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">18</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p><code>date</code> 객체가 보관하고 있는 연, 월, 일 데이터는 각각 <code>year</code>, <code>month</code>, <code>day</code> 속성을 통해 접근할 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> today <span class=\"token operator\">=</span> date<span class=\"token punctuation\">.</span>today<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> today<span class=\"token punctuation\">.</span>year\n<span class=\"token number\">2020</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> today<span class=\"token punctuation\">.</span>month\n<span class=\"token number\">7</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> today<span class=\"token punctuation\">.</span>day\n<span class=\"token number\">18</span></code></pre></div>\n<p><code>date</code> 클래스의 <code>weekday()</code>와 <code>isoweekday()</code> 메서드는 해당 날짜가 무슨 요일인지를 파악하기 위해서 사용됩니다.\n두 메서드는 차이는 <code>weekday()</code>에서는 월요일이 0으로 시작하는 반면에, <code>isoweekday()</code>에서는 월요일이 1로 시작한다는 점입니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> today<span class=\"token punctuation\">.</span>weekday<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token number\">5</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> today<span class=\"token punctuation\">.</span>isoweekday<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token number\">6</span></code></pre></div>\n<p><code>date</code> 클래스의 <code>replace</code> 함수를 사용하면 <code>date</code> 객체의 연, 월, 일 데이터를 변경할 수 있습니다.\n좀 더 엄밀히 얘기하면, <code>date</code> 객체는 불변(immutable)하기 때문에 속성값이 변경된 새로운 <code>date</code> 객체를 생성하여 반환합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> today<span class=\"token punctuation\">.</span>replace<span class=\"token punctuation\">(</span>year<span class=\"token operator\">=</span><span class=\"token number\">2019</span><span class=\"token punctuation\">)</span>\ndatetime<span class=\"token punctuation\">.</span>date<span class=\"token punctuation\">(</span><span class=\"token number\">2019</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">18</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p><code>date</code> 클래스는 시간에 대한 정보를 담지 않기 때문에 시간대(time zone) 개념을 지원하지 않습니다.</p>\n<h2 id=\"time\" style=\"position:relative;\"><a href=\"#time\" aria-label=\"time permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>time</h2>\n<p><code>time</code> 클래스는 시간을 표현하기 위해서 사용됩니다.</p>\n<p><code>time</code> 클래스의 생성자는 시, 분, 초, 마이크로 초, 시간대를 인자로 받습니다.\n모든 인자가 필수 인자가 아니며, 생략할 경우, 0이 기본값으로 사용됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">from</span> datetime <span class=\"token keyword\">import</span> time\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> time<span class=\"token punctuation\">(</span><span class=\"token number\">13</span><span class=\"token punctuation\">,</span> <span class=\"token number\">42</span><span class=\"token punctuation\">,</span> <span class=\"token number\">35</span><span class=\"token punctuation\">)</span>\ndatetime<span class=\"token punctuation\">.</span>time<span class=\"token punctuation\">(</span><span class=\"token number\">13</span><span class=\"token punctuation\">,</span> <span class=\"token number\">42</span><span class=\"token punctuation\">,</span> <span class=\"token number\">35</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p><code>time</code> 클래스의 <code>fromisoformat()</code> 메서드는 <code>HH[:MM[:SS[.fff[fff]]]][+HH:MM[:SS[.ffffff]]]</code> 형태의 문자열을 <code>time</code> 객체로 변환해줍니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> time<span class=\"token punctuation\">.</span>fromisoformat<span class=\"token punctuation\">(</span><span class=\"token string\">'13:42:35.458+09:00'</span><span class=\"token punctuation\">)</span>\ndatetime<span class=\"token punctuation\">.</span>time<span class=\"token punctuation\">(</span><span class=\"token number\">13</span><span class=\"token punctuation\">,</span> <span class=\"token number\">42</span><span class=\"token punctuation\">,</span> <span class=\"token number\">35</span><span class=\"token punctuation\">,</span> <span class=\"token number\">458000</span><span class=\"token punctuation\">,</span> tzinfo<span class=\"token operator\">=</span>datetime<span class=\"token punctuation\">.</span>timezone<span class=\"token punctuation\">(</span>datetime<span class=\"token punctuation\">.</span>timedelta<span class=\"token punctuation\">(</span>seconds<span class=\"token operator\">=</span><span class=\"token number\">32400</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>반대로 <code>time</code> 클래스의 <code>isoformat</code> 메서드는 <code>time</code> 객체를 <code>HH[:MM[:SS[.fff[fff]]]][+HH:MM[:SS[.ffffff]]]</code> 형태의 문자열로 변환해줍니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">from</span> datetime <span class=\"token keyword\">import</span> time<span class=\"token punctuation\">,</span> timedelta<span class=\"token punctuation\">,</span> timezone\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> t <span class=\"token operator\">=</span> time<span class=\"token punctuation\">(</span><span class=\"token number\">13</span><span class=\"token punctuation\">,</span> <span class=\"token number\">42</span><span class=\"token punctuation\">,</span> <span class=\"token number\">35</span><span class=\"token punctuation\">,</span> <span class=\"token number\">458000</span><span class=\"token punctuation\">,</span> tzinfo<span class=\"token operator\">=</span>timezone<span class=\"token punctuation\">(</span>timedelta<span class=\"token punctuation\">(</span>hours<span class=\"token operator\">=</span><span class=\"token number\">9</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> t<span class=\"token punctuation\">.</span>isoformat<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token string\">'13:42:35.458000+09:00'</span></code></pre></div>\n<p><code>time</code> 객체가 보관하고 있는 시, 분, 초 데이터는 각각 <code>hour</code>, <code>minute</code>, <code>second</code> 속성을 통해 접근할 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> t <span class=\"token operator\">=</span> time<span class=\"token punctuation\">(</span><span class=\"token number\">13</span><span class=\"token punctuation\">,</span> <span class=\"token number\">42</span><span class=\"token punctuation\">,</span> <span class=\"token number\">35</span><span class=\"token punctuation\">,</span> <span class=\"token number\">458000</span><span class=\"token punctuation\">,</span> tzinfo<span class=\"token operator\">=</span>timezone<span class=\"token punctuation\">(</span>timedelta<span class=\"token punctuation\">(</span>hours<span class=\"token operator\">=</span><span class=\"token number\">9</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> t<span class=\"token punctuation\">.</span>hour\n<span class=\"token number\">13</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> t<span class=\"token punctuation\">.</span>minute\n<span class=\"token number\">42</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> t<span class=\"token punctuation\">.</span>second\n<span class=\"token number\">35</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> t<span class=\"token punctuation\">.</span>microsecond\n<span class=\"token number\">458000</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> t<span class=\"token punctuation\">.</span>tzinfo\ndatetime<span class=\"token punctuation\">.</span>timezone<span class=\"token punctuation\">(</span>datetime<span class=\"token punctuation\">.</span>timedelta<span class=\"token punctuation\">(</span>seconds<span class=\"token operator\">=</span><span class=\"token number\">32400</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p><code>time</code> 클래스의 <code>replace</code> 메서드를 사용하면 <code>time</code> 객체의 시, 분, 초 데이터를 변경할 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> t<span class=\"token punctuation\">.</span>replace<span class=\"token punctuation\">(</span>hour<span class=\"token operator\">=</span><span class=\"token number\">14</span><span class=\"token punctuation\">)</span>\ndatetime<span class=\"token punctuation\">.</span>time<span class=\"token punctuation\">(</span><span class=\"token number\">14</span><span class=\"token punctuation\">,</span> <span class=\"token number\">42</span><span class=\"token punctuation\">,</span> <span class=\"token number\">35</span><span class=\"token punctuation\">,</span> <span class=\"token number\">458000</span><span class=\"token punctuation\">,</span> tzinfo<span class=\"token operator\">=</span>datetime<span class=\"token punctuation\">.</span>timezone<span class=\"token punctuation\">(</span>datetime<span class=\"token punctuation\">.</span>timedelta<span class=\"token punctuation\">(</span>seconds<span class=\"token operator\">=</span><span class=\"token number\">32400</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p><code>date</code> 클래스와 마찬가지로 <code>time</code> 클래스도 불변하기 때문에 새로운 <code>time</code> 객체가 생성되어 반환됩니다.</p>\n<h2 id=\"datetime\" style=\"position:relative;\"><a href=\"#datetime\" aria-label=\"datetime permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>datetime</h2>\n<p><code>datetime</code> 클래스는 날짜와 시간을 동시에 표현하기 위해서 사용되며, 위에서 다룬 <code>date</code>와 <code>time</code> 클래스에서 지원하는 대부분의 기능을 지원합니다.</p>\n<p><code>datetime</code> 클래스의 생성자는 연, 월, 일, 시, 분, 초, 마이크로 초, 시간대를 인자로 받습니다.\n시간 이하의 인자는 필수 인자가 아니며 생략할 경우, 0이 기본값으로 사용됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">from</span> datetime <span class=\"token keyword\">import</span> datetime\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> datetime<span class=\"token punctuation\">(</span><span class=\"token number\">2020</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">18</span><span class=\"token punctuation\">,</span> <span class=\"token number\">13</span><span class=\"token punctuation\">,</span> <span class=\"token number\">26</span><span class=\"token punctuation\">,</span> <span class=\"token number\">23</span><span class=\"token punctuation\">)</span>\ndatetime<span class=\"token punctuation\">.</span>datetime<span class=\"token punctuation\">(</span><span class=\"token number\">2020</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">18</span><span class=\"token punctuation\">,</span> <span class=\"token number\">13</span><span class=\"token punctuation\">,</span> <span class=\"token number\">26</span><span class=\"token punctuation\">,</span> <span class=\"token number\">23</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p><code>datetime</code> 클래스의 <code>combine()</code> 메서드를 사용하면 기존에 생성해둔 <code>date</code>나 <code>time</code> 객체를 활용해서 <code>datetime</code> 객체를 생성할 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">from</span> datetime <span class=\"token keyword\">import</span> date<span class=\"token punctuation\">,</span> datetime<span class=\"token punctuation\">,</span> time\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> d <span class=\"token operator\">=</span> date<span class=\"token punctuation\">(</span><span class=\"token number\">2020</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">18</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> t <span class=\"token operator\">=</span> time<span class=\"token punctuation\">(</span><span class=\"token number\">13</span><span class=\"token punctuation\">,</span> <span class=\"token number\">26</span><span class=\"token punctuation\">,</span> <span class=\"token number\">23</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> datetime<span class=\"token punctuation\">.</span>combine<span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">,</span> t<span class=\"token punctuation\">)</span>\ndatetime<span class=\"token punctuation\">.</span>datetime<span class=\"token punctuation\">(</span><span class=\"token number\">2020</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">18</span><span class=\"token punctuation\">,</span> <span class=\"token number\">13</span><span class=\"token punctuation\">,</span> <span class=\"token number\">26</span><span class=\"token punctuation\">,</span> <span class=\"token number\">23</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>현재 시각을 얻고 싶다면 <code>datetime</code> 클래스의 <code>now()</code> 메서드를 사용하면 됩니다.\n<code>now()</code> 메서드에 시간대를 인자로 넘기면 해당 시간대가 적용된 <code>datetime</code> 객체가 생성됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">from</span> datetime <span class=\"token keyword\">import</span> datetime<span class=\"token punctuation\">,</span> timezone\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> datetime<span class=\"token punctuation\">.</span>now<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\ndatetime<span class=\"token punctuation\">.</span>datetime<span class=\"token punctuation\">(</span><span class=\"token number\">2020</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">18</span><span class=\"token punctuation\">,</span> <span class=\"token number\">13</span><span class=\"token punctuation\">,</span> <span class=\"token number\">40</span><span class=\"token punctuation\">,</span> <span class=\"token number\">30</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20143</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> datetime<span class=\"token punctuation\">.</span>now<span class=\"token punctuation\">(</span>timezone<span class=\"token punctuation\">.</span>utc<span class=\"token punctuation\">)</span>\ndatetime<span class=\"token punctuation\">.</span>datetime<span class=\"token punctuation\">(</span><span class=\"token number\">2020</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">18</span><span class=\"token punctuation\">,</span> <span class=\"token number\">17</span><span class=\"token punctuation\">,</span> <span class=\"token number\">41</span><span class=\"token punctuation\">,</span> <span class=\"token number\">26</span><span class=\"token punctuation\">,</span> <span class=\"token number\">814580</span><span class=\"token punctuation\">,</span> tzinfo<span class=\"token operator\">=</span>datetime<span class=\"token punctuation\">.</span>timezone<span class=\"token punctuation\">.</span>utc<span class=\"token punctuation\">)</span></code></pre></div>\n<p><code>datetime</code> 클래스의 <code>strftime()</code> 메서드는 <code>datetime</code> 객체를 다양한 포멧의 문자열로 변환해줍니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> today<span class=\"token punctuation\">.</span>strftime<span class=\"token punctuation\">(</span><span class=\"token string\">'%Y/%m/%d'</span><span class=\"token punctuation\">)</span>\n<span class=\"token string\">'2020/07/18'</span></code></pre></div>\n<p>반대로 <code>datetime</code> 클래스의 <code>strptime()</code> 메서드는 다양한 포멧의 문자열을 <code>datetime</code> 객체로 변환해줍니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> datetime<span class=\"token punctuation\">.</span>strptime<span class=\"token punctuation\">(</span><span class=\"token string\">'2020/07/18'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'%Y/%m/%d'</span><span class=\"token punctuation\">)</span>\ndatetime<span class=\"token punctuation\">.</span>datetime<span class=\"token punctuation\">(</span><span class=\"token number\">2020</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">18</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p><code>datetime</code>, <code>date</code>, <code>time</code> 클래스에서 모두 지원하는 <code>strftime()</code> 메서드와 달리 <code>strptime()</code> 메서드는 <code>datetime</code> 클래스에서만 지원하니 주의바랍니다.</p>\n<p><code>strftime()</code>과 <code>strptime()</code> 에서 지원하는 날짜/시간 포멧은 <a href=\"https://docs.python.org/3/library/datetime.html#strftime-and-strptime-format-codes\">파이썬 공식 레퍼런스</a>를 참고바랍니다.</p>\n<h2 id=\"마치면서\" style=\"position:relative;\"><a href=\"#%EB%A7%88%EC%B9%98%EB%A9%B4%EC%84%9C\" aria-label=\"마치면서 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>마치면서</h2>\n<p>이상으로 파이썬 스탠다드 라이브러리의 <code>datetime</code> 모듈을 사용해서 어떻게 날짜와 시간 데이터를 다루는지 알아보았습니다.\n<code>datetime</code> 내장 모듈에 대한 좀 더 자세한 내용은 아래 파이썬 공식 레퍼런스를 참고 바랍니다.</p>\n<ul>\n<li><a href=\"https://docs.python.org/3/library/datetime.html\">datetime — Basic date and time types</a></li>\n</ul>\n<p>파이썬은 좀 더 간단한 시간 데이터 처리를 위해서 <code>time</code> 내장 모듈도 지원하고 있습니다.\n이 부분에 대해서는 별도로 포스팅을 하였으니 아래 관련 포스팅를 참고 바랍니다.</p>\n<ul>\n<li><a href=\"/python-time\">[파이썬] time 모듈로 시간 데이터 다루기</a></li>\n</ul>","timeToRead":6,"fields":{"slug":"/python-datetime/","tags":["Python","datetime","timedelta","timezone","date","time"]},"frontmatter":{"title":"[파이썬] datetime 모듈로 날짜/시간 처리하기","date":"Jul 18, 2020"}},"next":{"fields":{"slug":"/python-enum/"},"frontmatter":{"title":"파이썬 enum 타입 사용법"}}}},"staticQueryHashes":["2362167539","3000541721","3056348342"]}