{"componentChunkName":"component---src-templates-detail-template-jsx","path":"/python-os-environ/","result":{"pageContext":{"previous":{"fields":{"slug":"/python-logging-config/"},"frontmatter":{"title":"파이썬 로깅 설정 - logger, handler, formatter"}},"node":{"html":"<p>여러 환경에 파이썬 애플리케이션을 배포하려면 환경 변수라는 것을 이용해야하는데요.\n이번 포스팅에서는 파이썬에서 환경 변수에 어떻게 접근하고 설정할 수 있는지에 대해서 알아보겠습니다.</p>\n<h2 id=\"환경-변수란\" style=\"position:relative;\"><a href=\"#%ED%99%98%EA%B2%BD-%EB%B3%80%EC%88%98%EB%9E%80\" aria-label=\"환경 변수란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>환경 변수란?</h2>\n<p>먼저 환경 변수(environment variable)가 무엇인지 간단하게 짚고 넘어가면 좋을 것 같은데요.\n환경 변수는 운영 체제(operating system) 수준에서 설정되는 변수로, 주로 애플레케이션 수준에서 설정하기가 불가능하거나 어려운 값들을 환경 변수로 관리하는 경우가 많죠.</p>\n<p>환경 변수를 이용하면 애플리케이션 코드를 수정하지 않고도 개발, 테스트, 운영 등 배포 환경에 따라 설정값을 유연하게 변경할 수 있어서 이식성(portability)과 유지 보수성 측면에서 큰 이점이 있습니다.</p>\n<p>대표적인 예로, 데이터베이스(DB) 설정을 들 수 있는데요. 운영 환경에서는 데이터 센터나 클라우드 인프라 상의 상용 DB를 사용하고, 개발 환경에서는 개발자의 PC 상에서 로컬 DB를 사용하는 경우에 환경 변수를 이용해서 각 환경 별로 데이터베이스 설정을 관리하는 경우가 많습니다.</p>\n<p>뿐만 아니라, 데이터베이스의 비밀번호나 서드파티(3rd-party) 서비스의 API 키와 같이 민감한 인증 정보는 GitHub와 같은 코드 저장소(repository)에 올리면 상당히 위험할 수 있기 때문에 환경 변수로 저장해놓고 사용하는 것이 권장됩니다.</p>\n<h2 id=\"os-내장-모듈\" style=\"position:relative;\"><a href=\"#os-%EB%82%B4%EC%9E%A5-%EB%AA%A8%EB%93%88\" aria-label=\"os 내장 모듈 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>os 내장 모듈</h2>\n<p>파이썬에서는 기본적으로 내장되어 있는 <code>os</code> 모듈을 통해서 환경 변수가 관리되는데요.\n우선 터미널을 열고 파이썬 인터프리터를 실행한 후, <code>os</code> 내장 모듈을 불러오는 것부터 시작해보겠습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\">$ python\nPython <span class=\"token number\">3.11</span><span class=\"token number\">.2</span> <span class=\"token punctuation\">(</span>main<span class=\"token punctuation\">,</span> Apr  <span class=\"token number\">7</span> <span class=\"token number\">2023</span><span class=\"token punctuation\">,</span> <span class=\"token number\">15</span><span class=\"token punctuation\">:</span><span class=\"token number\">52</span><span class=\"token punctuation\">:</span><span class=\"token number\">33</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">[</span>Clang <span class=\"token number\">14.0</span><span class=\"token number\">.3</span> <span class=\"token punctuation\">(</span>clang<span class=\"token operator\">-</span><span class=\"token number\">1403.0</span><span class=\"token number\">.22</span><span class=\"token number\">.14</span><span class=\"token number\">.1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> on darwin\nType <span class=\"token string\">\"help\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"copyright\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"credits\"</span> <span class=\"token keyword\">or</span> <span class=\"token string\">\"license\"</span> <span class=\"token keyword\">for</span> more information<span class=\"token punctuation\">.</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">import</span> os</code></pre></div>\n<h2 id=\"osenviron-속성\" style=\"position:relative;\"><a href=\"#osenviron-%EC%86%8D%EC%84%B1\" aria-label=\"osenviron 속성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>os.environ 속성</h2>\n<p>운영 체제에 설정되어 있는 모든 환경 변수는 <code>os</code> 모듈의 <code>environ</code>이라는 속성을 통해서 접근이 가능합니다.\n이 <code>os.environ</code> 속성은 마치 파이썬 내장 자료 구조인 사전(dictionary)을 사용하듯이 사용할 수 있습니다.</p>\n<p>예를 들어, <code>HOME</code>이라는 환경 변수에 저장되어 있는 값은 다음과 같이 읽어올 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> os<span class=\"token punctuation\">.</span>environ<span class=\"token punctuation\">[</span><span class=\"token string\">'HOME'</span><span class=\"token punctuation\">]</span>\n<span class=\"token string\">'/Users/dale'</span></code></pre></div>\n<p>동일한 방식으로 <code>SHELL</code>이라는 환경 변수에 저장되어 있는 값도 읽어올 수 있겠죠?</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> os<span class=\"token punctuation\">.</span>environ<span class=\"token punctuation\">[</span><span class=\"token string\">\"SHELL\"</span><span class=\"token punctuation\">]</span>\n<span class=\"token string\">'/bin/zsh'</span></code></pre></div>\n<p>아직 설정해준 적이 없는 <code>API_KEY</code>라는 환경 변수에 저장된 값을 읽어오려고 하면 어떻게 될까요?\n다음과 같이 <code>KeyError</code>가 발생하게 되는데요.</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> os<span class=\"token punctuation\">.</span>environ<span class=\"token punctuation\">[</span><span class=\"token string\">'API_KEY'</span><span class=\"token punctuation\">]</span>\nTraceback <span class=\"token punctuation\">(</span>most recent call last<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  File <span class=\"token string\">\"&lt;stdin>\"</span><span class=\"token punctuation\">,</span> line <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">in</span> <span class=\"token operator\">&lt;</span>module<span class=\"token operator\">></span>\n  File <span class=\"token string\">\"&lt;frozen os>\"</span><span class=\"token punctuation\">,</span> line <span class=\"token number\">679</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">in</span> __getitem__\nKeyError<span class=\"token punctuation\">:</span> <span class=\"token string\">'API_KEY'</span></code></pre></div>\n<p>파이썬에서 일반적으로 사전에 존재하지 않는 키를 넘길 경우, <code>KeyError</code>가 발생하는 것과 같은 이치라고 보시면 될 것 같습니다.</p>\n<p>따라서 애플리케이션 코드를 작성할 때는 환경 변수가 존재하지 않는 경우에 대한 적당한 예외 처리를 해줘야 하는데요.\n어떤 환경 변수가 없을 때, 예외를 발생시키는 대신에 <code>None</code>을 반환받고 싶은 경우에는 사전과 동일하게 <code>get()</code> 메서드를 사용하면 됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> os<span class=\"token punctuation\">.</span>environ<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'API_KEY'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">is</span> <span class=\"token boolean\">None</span>\n<span class=\"token boolean\">True</span></code></pre></div>\n<p><code>get()</code> 메서드의 두 번째 인자로 기본값을 넘길 수도 있습니다. 꼭 설정해주지 않아도 되는 환경 변수에 유용하게 사용됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> os<span class=\"token punctuation\">.</span>environ<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'API_KEY'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'abc'</span><span class=\"token punctuation\">)</span>\n<span class=\"token string\">'abc'</span></code></pre></div>\n<h2 id=\"osgetenv-함수\" style=\"position:relative;\"><a href=\"#osgetenv-%ED%95%A8%EC%88%98\" aria-label=\"osgetenv 함수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>os.getenv 함수</h2>\n<p><code>os</code> 모듈의 <code>getenv()</code> 함수를 사용하면 좀 더 간결한 코드로 <code>os.environ.get()</code> 함수와 동일한 효과를 얻을 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> os<span class=\"token punctuation\">.</span>getenv<span class=\"token punctuation\">(</span><span class=\"token string\">'API_KEY'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">is</span> <span class=\"token boolean\">None</span>\n<span class=\"token boolean\">True</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> os<span class=\"token punctuation\">.</span>getenv<span class=\"token punctuation\">(</span><span class=\"token string\">'API_KEY'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'abc'</span><span class=\"token punctuation\">)</span>\n<span class=\"token string\">'abc'</span></code></pre></div>\n<h2 id=\"환경-변수-설정\" style=\"position:relative;\"><a href=\"#%ED%99%98%EA%B2%BD-%EB%B3%80%EC%88%98-%EC%84%A4%EC%A0%95\" aria-label=\"환경 변수 설정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>환경 변수 설정</h2>\n<p>그러면 새로운 환경 변수는 어떻게 설정할 수 있을까요?</p>\n<p>환경 변수는 운영 체제에 따라서 약간씩 상이한 방법으로 설정할 수 있는데요.\n운영 체제마다 환경 변수를 설정을 위해 제공하는 명령어가 다르기 때문입니다.</p>\n<p>대표적으로 Unix 계열에서는 <code>export</code> 명령어, Windows 계열에서는 <code>SET</code> 명령어가 사용됩니다.\n저는 Unix 계열인 MacOS를 사용하기 때문에 다음과 같이 <code>API_KEY</code> 환경 변수의 값을 <code>abc</code>로 설정해주겠습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">API_KEY</span><span class=\"token operator\">=</span>abc\n$ python\nPython <span class=\"token number\">3.11</span>.2 <span class=\"token punctuation\">(</span>main, Apr  <span class=\"token number\">7</span> <span class=\"token number\">2023</span>, <span class=\"token number\">15</span>:52:33<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">[</span>Clang <span class=\"token number\">14.0</span>.3 <span class=\"token punctuation\">(</span>clang-1403.0.22.14.1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> on darwin\nType <span class=\"token string\">\"help\"</span>, <span class=\"token string\">\"copyright\"</span>, <span class=\"token string\">\"credits\"</span> or <span class=\"token string\">\"license\"</span> <span class=\"token keyword\">for</span> <span class=\"token function\">more</span> information.\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token function\">import</span> os\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> os.getenv<span class=\"token punctuation\">(</span><span class=\"token string\">'API_KEY'</span><span class=\"token punctuation\">)</span>\n<span class=\"token string\">'abc'</span></code></pre></div>\n<p>이러한 운영 체제의 명령어를 이용하여 환경 변수를 설정하면 터미널 창을 닫을 때까지 유지되는데요.\n따라서 해당 프로그램을 종료하고 다시 실행하더라도 동일한 환경 변수 값을 얻을 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ python\nPython <span class=\"token number\">3.11</span>.2 <span class=\"token punctuation\">(</span>main, Apr  <span class=\"token number\">7</span> <span class=\"token number\">2023</span>, <span class=\"token number\">15</span>:52:33<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">[</span>Clang <span class=\"token number\">14.0</span>.3 <span class=\"token punctuation\">(</span>clang-1403.0.22.14.1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> on darwin\nType <span class=\"token string\">\"help\"</span>, <span class=\"token string\">\"copyright\"</span>, <span class=\"token string\">\"credits\"</span> or <span class=\"token string\">\"license\"</span> <span class=\"token keyword\">for</span> <span class=\"token function\">more</span> information.\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token function\">import</span> os\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> os.getenv<span class=\"token punctuation\">(</span><span class=\"token string\">'API_KEY'</span><span class=\"token punctuation\">)</span>\n<span class=\"token string\">'abc'</span></code></pre></div>\n<p>또 다른 방법으로는 프로그램을 실행할 때 <code>python</code> 명령어 앞에 환경 변수를 <code>키=값</code> 형태로 붙여줄 수도 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token assign-left variable\">API_KEY</span><span class=\"token operator\">=</span>def python\nPython <span class=\"token number\">3.11</span>.2 <span class=\"token punctuation\">(</span>main, Apr  <span class=\"token number\">7</span> <span class=\"token number\">2023</span>, <span class=\"token number\">15</span>:52:33<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">[</span>Clang <span class=\"token number\">14.0</span>.3 <span class=\"token punctuation\">(</span>clang-1403.0.22.14.1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> on darwin\nType <span class=\"token string\">\"help\"</span>, <span class=\"token string\">\"copyright\"</span>, <span class=\"token string\">\"credits\"</span> or <span class=\"token string\">\"license\"</span> <span class=\"token keyword\">for</span> <span class=\"token function\">more</span> information.\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token function\">import</span> os\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> os.getenv<span class=\"token punctuation\">(</span><span class=\"token string\">'API_KEY'</span><span class=\"token punctuation\">)</span>\n<span class=\"token string\">'def'</span></code></pre></div>\n<p>이 경우, 운영체제 수준에서 설정해준 환경 변수의 값이 무시되고 새로운 값으로 덮어써지는 것을 볼 수 있습니다.</p>\n<p>사실 <code>os.environ</code>는 사전이기 때문에 받드시 이렇게 프로그램 실행 시점이나 실행 이전에 설정해줘야 하는 것은 아닙니다.\n프로그램 내에서 얼마든지 새로운 환경 변수를 설정하거나 기존에 설정된 환경 변수의 값을 자유롭게 갱신 또는 제거할 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> os<span class=\"token punctuation\">.</span>environ<span class=\"token punctuation\">[</span><span class=\"token string\">\"API_KEY\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">'xyz'</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> os<span class=\"token punctuation\">.</span>environ<span class=\"token punctuation\">[</span><span class=\"token string\">\"API_KEY\"</span><span class=\"token punctuation\">]</span>\n<span class=\"token string\">'xyz'</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> os<span class=\"token punctuation\">.</span>getenv<span class=\"token punctuation\">(</span><span class=\"token string\">\"API_KEY\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'abc'</span><span class=\"token punctuation\">)</span>\n<span class=\"token string\">'xyz'</span></code></pre></div>\n<h2 id=\"주의-사항\" style=\"position:relative;\"><a href=\"#%EC%A3%BC%EC%9D%98-%EC%82%AC%ED%95%AD\" aria-label=\"주의 사항 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>주의 사항</h2>\n<p><code>os</code> 모듈에는 새로운 환경 변수를 추가해주는 <code>putenv()</code>나 기존 환경 변수를 제거해주는 <code>unsetenv()</code>와 같은 함수들도 있는데 매우 주의해서 사용해야 합니다.\n왜냐하면 이러한 함수들로 운영 체제 상의 환경 변수를 변경하였더라도, <code>os</code> 모듈이 최초 임포트될 때 이미 세팅되었던 <code>os.environ</code>에는 반영이 되지 않기 때문입니다.\n따라서 이렇게 환경 변수를 조작하는 함수를 직접 사용하는 것 보다는 <code>os.environ</code>를 통해서 마치 사전 다루듯이 환경 변수를 추가/제거 하는 것이 더 안전 합니다.\n무엇보다 맨 처음에 설명드린 환경 변수의 용도를 생각해보면 대부분 환경 변수는 애플리케이션 수준에서는 읽기 전용으로 쓰이는 것이 대부분일 것입니다.</p>\n<h2 id=\"전체-코드\" style=\"position:relative;\"><a href=\"#%EC%A0%84%EC%B2%B4-%EC%BD%94%EB%93%9C\" aria-label=\"전체 코드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>전체 코드</h2>\n<p>본 포스팅에서 제가 작성한 전체 코드는 아래에서 직접 확인하고 실행해보실 수 있습니다.</p>\n<p><a href=\"https://dales.link/m4k\">https://dales.link/m4k</a></p>\n<h2 id=\"마치면서\" style=\"position:relative;\"><a href=\"#%EB%A7%88%EC%B9%98%EB%A9%B4%EC%84%9C\" aria-label=\"마치면서 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>마치면서</h2>\n<p>지금까지 파이썬에 내장된 <code>os</code> 모듈을 통해 환경 변수를 어떻게 읽고 쓰는지에 대해서 살펴보았습니다.\n<code>os</code> 내장 모듈에 대한 좀 더 자세한 내용은 <a href=\"https://docs.python.org/3/library/os.html\">파이썬 공식 레퍼런스: os — Miscellaneous operating system interfaces</a>를 참고해보시면 좋을 것 같습니다.</p>","timeToRead":5,"fields":{"slug":"/python-os-environ/","tags":["Python","env"]},"frontmatter":{"title":"파이썬에서 환경 변수 읽어오기 (os.environ)","date":"Feb 29, 2020"}},"next":{"fields":{"slug":"/graphql-react-apollo-subscriptions/"},"frontmatter":{"title":"[GraphQL] React Apollo로 Subscription 호출"}}}},"staticQueryHashes":["2168229929","2362167539","3056348342"]}