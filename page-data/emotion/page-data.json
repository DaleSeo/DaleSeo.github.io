{"componentChunkName":"component---src-templates-detail-template-jsx","path":"/emotion/","result":{"pageContext":{"previous":{"fields":{"slug":"/dalejule-ep2/"},"frontmatter":{"title":"달레줄레 Ep. 2 | 프로그래밍 언어"}},"node":{"html":"<p>React에서는 컴포넌트 스타일할 때는 CSS-in-JS 라이브러리를 사용하는 것이 거의 표준이 되어가는 추세인데요.</p>\n<p>이번 포스팅에서는 Styled Components와 함께 대표적인 CSS-in-JS 라이브러리로 손꼽히는 이모션(Emotion)을 사용해서 React 컴포넌트를 스타일링하는 방법에 대해서 살펴보겠습니다.</p>\n<blockquote>\n<p>Styled Components에 대해서도 별도로 다루고 있으니 <a href=\"/?tag=StyledComponents\">관련 포스팅</a>을 참고 바랍니다.</p>\n</blockquote>\n<h2 id=\"패키지-설치\" style=\"position:relative;\"><a href=\"#%ED%8C%A8%ED%82%A4%EC%A7%80-%EC%84%A4%EC%B9%98\" aria-label=\"패키지 설치 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>패키지 설치</h2>\n<p>자바스크립트 패키지 매니저인 <code>npm</code>을 이용하면 React 프로젝트에 Emotion을 간편하게 설치할 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">npm</span> i @emotion/react</code></pre></div>\n<p>참고로 Emotion 반드시 React 프로젝트에서만 사용해야하는 것은 아닙니다.\n일반 자바스크립트 프로젝트에서는 <code>@emotion/css</code> 패키지를 설치하시면 됩니다.</p>\n<h2 id=\"기본-문법\" style=\"position:relative;\"><a href=\"#%EA%B8%B0%EB%B3%B8-%EB%AC%B8%EB%B2%95\" aria-label=\"기본 문법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>기본 문법</h2>\n<p>Styled Components의 꽃은 <code>styled()</code> 함수였다면 Emotion의 꽃은 <code>css()</code> 함수일 것입니다.\n사실 오랜 시간동안 두 라이브러리가 서로 경쟁하면서 현재는 Styled Components도 <code>css()</code> 함수를 사용할 수 있고, Emotion도 뒤질세라 <code>styled()</code> 함수를 제공하고 있죠.</p>\n<p>Emotion이 <code>css()</code> 함수는 위에서 설치한 <code>@emotion/react</code> 패키지에서 불러올 수 있는데요.\n<code>css()</code> 함수는 CSS 스타일 선언 내용을 인자로 받는데 객체형으로 넘겨도 되고, 문자형으로 넘겨도 됩니다.\n그리고 <code>css()</code> 함수가 반환 결과를 해당 스타일을 적용하고 싶은 HTML 요소나 React 컴포넌트의 <code>css</code>라는 prop에 넘겨주면 됩니다.</p>\n<p>예를 들어, 어떤 <code>&#x3C;div></code> 요소의 배경색을 노란색으로 스타일하고 싶다고 가정해봅시다.</p>\n<p>객체형 스타일을 <code>css()</code> 함수의 인자로 넘기면 아래와 같은 모습이 되고,</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">/** @jsxImportSource @emotion/react */</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> css <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@emotion/react\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">MyComponent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span>\n      <span class=\"token attr-name\">css</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token function\">css</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n        backgroundColor<span class=\"token operator\">:</span> <span class=\"token string\">\"yellow\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span>\n    <span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      노란색 영역\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>문자형 스타일을 <code>css()</code> 함수의 인자로 넘기면 아래와 같은 모습이 될 것입니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">/** @jsxImportSource @emotion/react */</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> css <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@emotion/react\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">MyComponent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span>\n      <span class=\"token attr-name\">css</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>css<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n        background-color: yellow;\n      </span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">}</span></span>\n    <span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      노란색 영역\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Emotion 문서에서는 가급적 스타일을 객체로 선언해서 <code>css()</code> 함수에 넘기라고 권장하고 있는데요.\n이 방법을 사용하면 <code>css()</code> 함수를 호출을 생략하고 <code>css</code> prop에 바로 객체를 넘길 수 있으며,\n특히 타입스크립트(TypeScript)를 사용하면 타입 체킹(type checking)을 통해 오타를 줄일 수 있기 때문입니다.</p>\n<h2 id=\"jsx-pragma\" style=\"position:relative;\"><a href=\"#jsx-pragma\" aria-label=\"jsx pragma permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>JSX pragma</h2>\n<p>눈썰미가 좋으신 분들은 위 예제 코드에서 <code>/** @jsxImportSource @emotion/react */</code> 부분이 눈에 띄셨을 거 같은데요.\n이 것을 소위 JSX pragma라고 하는데 쉽게 설명하면 Babel 트랜스파일러한테 JSX 코드를 변환할 때, React의 <code>jsx()</code> 함수를 사용하지 말고, Emotion의 <code>jsx()</code> 함수를 대신 사용하라고 알려주기 위함입니다.</p>\n<p>이렇게 해주지 않으면 <code>css</code> prop에 넘어간 스타일이 제대로 반영이 되지 않을테니 주의바라겠습니다.</p>\n<p>만약에 React v16 이하의 오래된 버전을 사용하는 프로젝트에서는 다음과 같이 약간 다른 형태의 JSX pragma를 사용하셔야 하고, <code>jsx()</code> 함수도 불러와야 합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">/** @jsx jsx */</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> css<span class=\"token punctuation\">,</span> jsx <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@emotion/react\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">MyComponent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span>\n      <span class=\"token attr-name\">css</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token function\">css</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n        backgroundColor<span class=\"token operator\">:</span> <span class=\"token string\">\"yellow\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span>\n    <span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      노란색 영역\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>이 것은 React v17부터 JSX 코드를 작성할 때 굳이 <code>react</code> 패키지에서 <code>React</code>를 불러오지 않더라도 Babel이 트랜스파일을 할 수 있도록 사용성이 개선되었기 때문인데요.\n이 부분은 본 포스팅에서 다루고자 하는 범위에서 크게 벚어나기 때문에 관심이 있으신 분들은 따로 검색을 해보시면 좋을 것 같습니다.</p>\n<p>참고로 이렇게 매번 JSX pragma를 사용하기가 번거로우시다면 Emotion에서 제공하는 Babel 플러그인이나 프리셋을 사용하시는 것을 고려 바랍니다.</p>\n<h2 id=\"고정-스타일링\" style=\"position:relative;\"><a href=\"#%EA%B3%A0%EC%A0%95-%EC%8A%A4%ED%83%80%EC%9D%BC%EB%A7%81\" aria-label=\"고정 스타일링 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>고정 스타일링</h2>\n<p>지금까지 배운 Emotion의 기본 문법을 이용해서 React로 버튼 컴포넌트를 한 번 작성해볼까요?\nGitHub에서 볼 수 있는 버튼을 흉내내보면 어떨까요?</p>\n<p><code>&#x3C;button></code> 요소의 <code>css</code> prop을 통해서 다양한 CSS 속성 정의를 객체로 넘기겠습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">/** @jsxImportSource @emotion/react */</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">Button</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> children <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>button\n      css<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>\n        borderRadius<span class=\"token operator\">:</span> <span class=\"token string\">\"6px\"</span><span class=\"token punctuation\">,</span>\n        border<span class=\"token operator\">:</span> <span class=\"token string\">\"1px solid rgba(27, 31, 36, 0.15)\"</span><span class=\"token punctuation\">,</span>\n        backgroundColor<span class=\"token operator\">:</span> <span class=\"token string\">\"rgb(246, 248, 250)\"</span><span class=\"token punctuation\">,</span>\n        color<span class=\"token operator\">:</span> <span class=\"token string\">\"rgb(36, 41, 47)\"</span><span class=\"token punctuation\">,</span>\n        fontFamily<span class=\"token operator\">:</span> <span class=\"token string\">\"-apple-system, BlinkMacSystemFont, sans-serif\"</span><span class=\"token punctuation\">,</span>\n        fontWeight<span class=\"token operator\">:</span> <span class=\"token string\">\"600\"</span><span class=\"token punctuation\">,</span>\n        lineHeight<span class=\"token operator\">:</span> <span class=\"token string\">\"20px\"</span><span class=\"token punctuation\">,</span>\n        fontSize<span class=\"token operator\">:</span> <span class=\"token string\">\"14px\"</span><span class=\"token punctuation\">,</span>\n        padding<span class=\"token operator\">:</span> <span class=\"token string\">\"5px 16px\"</span><span class=\"token punctuation\">,</span>\n        textAlign<span class=\"token operator\">:</span> <span class=\"token string\">\"center\"</span><span class=\"token punctuation\">,</span>\n        cursor<span class=\"token operator\">:</span> <span class=\"token string\">\"pointer\"</span><span class=\"token punctuation\">,</span>\n        appearance<span class=\"token operator\">:</span> <span class=\"token string\">\"none\"</span><span class=\"token punctuation\">,</span>\n        userSelect<span class=\"token operator\">:</span> <span class=\"token string\">\"none\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n    <span class=\"token operator\">></span>\n      <span class=\"token punctuation\">{</span>children<span class=\"token punctuation\">}</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> Button<span class=\"token punctuation\">;</span></code></pre></div>\n<p>벌써 끝났습니다. 참, 간단하죠? 😁\n이제 이 버튼 컴포넌트를 다른 React 컴포넌트에서 사용하면 됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Button <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"./Button\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">App</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token operator\">&lt;</span>Button<span class=\"token operator\">></span>Button<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Button<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>브라우저에서 소스 보기를 해보면 아래와 같이 <code>&#x3C;button></code> 요소에 Emotion이 자동으로 생성해준 클래스 이름이 붙어있는 것을 확인하실 수 있으실 거에요.\n(클래스 이름은 랜덤으로 만들어지기 때문에 저랑 다를 수 있습니다.)</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>css-3dgxq9-Button<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Button<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>한편, 내부 스타일시트를 확인해보면 클래스 선택자(class selector)로 적용된 스타일이 위에서 위에서 Emotion으로 삽입한 CSS 선언 내용과 동일함을 알 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.beQCgz</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">border-radius</span><span class=\"token punctuation\">:</span> 6px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">border</span><span class=\"token punctuation\">:</span> 1px solid <span class=\"token function\">rgba</span><span class=\"token punctuation\">(</span>27<span class=\"token punctuation\">,</span> 31<span class=\"token punctuation\">,</span> 36<span class=\"token punctuation\">,</span> 0.15<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> <span class=\"token function\">rgb</span><span class=\"token punctuation\">(</span>246<span class=\"token punctuation\">,</span> 248<span class=\"token punctuation\">,</span> 250<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> <span class=\"token function\">rgb</span><span class=\"token punctuation\">(</span>36<span class=\"token punctuation\">,</span> 41<span class=\"token punctuation\">,</span> 47<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token property\">font-family</span><span class=\"token punctuation\">:</span> -apple-system<span class=\"token punctuation\">,</span> BlinkMacSystemFont<span class=\"token punctuation\">,</span> sans-serif<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">font-weight</span><span class=\"token punctuation\">:</span> 600<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">line-height</span><span class=\"token punctuation\">:</span> 20px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> 14px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> 5px 16px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">text-align</span><span class=\"token punctuation\">:</span> center<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">cursor</span><span class=\"token punctuation\">:</span> pointer<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">-webkit-appearance</span><span class=\"token punctuation\">:</span> none<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">-moz-appearance</span><span class=\"token punctuation\">:</span> none<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">-ms-appearance</span><span class=\"token punctuation\">:</span> none<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">appearance</span><span class=\"token punctuation\">:</span> none<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">-webkit-user-select</span><span class=\"token punctuation\">:</span> none<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">-moz-user-select</span><span class=\"token punctuation\">:</span> none<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">-ms-user-select</span><span class=\"token punctuation\">:</span> none<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">user-select</span><span class=\"token punctuation\">:</span> none<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>여기서 주의깊게 볼 부분은 바로 Emotion이 자동으로 브라우저 별로 필요한 CSS 속성을 추가해준다는 것인데요.\n소위 이러한 작업을 vendor prefixing이라고 하죠?\nEmotion을 사용할 때 공짜로 얻을 수 있는 또 다른 이점이 되겠습니다.</p>\n<h2 id=\"가변-스타일링-1\" style=\"position:relative;\"><a href=\"#%EA%B0%80%EB%B3%80-%EC%8A%A4%ED%83%80%EC%9D%BC%EB%A7%81-1\" aria-label=\"가변 스타일링 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>가변 스타일링 1</h2>\n<p>Emotion을 사용하면 React 컴포넌트에 넘어온 props에 따라 다른 스타일을 쉽게 적용할 수 있는데요.\n바꾸고 싶은 CSS 속성 값에 상수 대신에 prop에 따라 변하는 변수를 할당해주기만 하면 됩니다.</p>\n<p>예를 들어, <code>&#x3C;Button/></code> 컴포넌트에 <code>variant</code>라는 prop을 추가한 후에, 이 prop에 어떤 값이 넘어오느냐에 따라 글자색이 바뀌도록 해볼까요?</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">/** @jsxImportSource @emotion/react */</span>\n\n<span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">const</span> colors <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">default</span><span class=\"token operator\">:</span> <span class=\"token string\">\"rgb(36, 41, 47)\"</span><span class=\"token punctuation\">,</span></span><span class=\"gatsby-highlight-code-line\">  danger<span class=\"token operator\">:</span> <span class=\"token string\">\"rgb(207, 34, 46)\"</span><span class=\"token punctuation\">,</span></span><span class=\"gatsby-highlight-code-line\">  outline<span class=\"token operator\">:</span> <span class=\"token string\">\"rgb(9, 105, 218)\"</span><span class=\"token punctuation\">,</span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">Button</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> children<span class=\"token punctuation\">,</span> variant <span class=\"token operator\">=</span> <span class=\"token string\">\"default\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>button\n      css<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>\n        borderRadius<span class=\"token operator\">:</span> <span class=\"token string\">\"6px\"</span><span class=\"token punctuation\">,</span>\n        border<span class=\"token operator\">:</span> <span class=\"token string\">\"1px solid rgba(27, 31, 36, 0.15)\"</span><span class=\"token punctuation\">,</span>\n        backgroundColor<span class=\"token operator\">:</span> <span class=\"token string\">\"rgb(246, 248, 250)\"</span><span class=\"token punctuation\">,</span>\n<span class=\"gatsby-highlight-code-line\">        color<span class=\"token operator\">:</span> colors<span class=\"token punctuation\">[</span>variant<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></span>        fontFamily<span class=\"token operator\">:</span> <span class=\"token string\">\"-apple-system, BlinkMacSystemFont, sans-serif\"</span><span class=\"token punctuation\">,</span>\n        fontWeight<span class=\"token operator\">:</span> <span class=\"token string\">\"600\"</span><span class=\"token punctuation\">,</span>\n        lineHeight<span class=\"token operator\">:</span> <span class=\"token string\">\"20px\"</span><span class=\"token punctuation\">,</span>\n        fontSize<span class=\"token operator\">:</span> <span class=\"token string\">\"14px\"</span><span class=\"token punctuation\">,</span>\n        padding<span class=\"token operator\">:</span> <span class=\"token string\">\"5px 16px\"</span><span class=\"token punctuation\">,</span>\n        textAlign<span class=\"token operator\">:</span> <span class=\"token string\">\"center\"</span><span class=\"token punctuation\">,</span>\n        cursor<span class=\"token operator\">:</span> <span class=\"token string\">\"pointer\"</span><span class=\"token punctuation\">,</span>\n        appearance<span class=\"token operator\">:</span> <span class=\"token string\">\"none\"</span><span class=\"token punctuation\">,</span>\n        userSelect<span class=\"token operator\">:</span> <span class=\"token string\">\"none\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n    <span class=\"token operator\">></span>\n      <span class=\"token punctuation\">{</span>children<span class=\"token punctuation\">}</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> Button<span class=\"token punctuation\">;</span></code></pre></div>\n<p>자, 이제 3가지 색상의 버튼을 모두 사용해보겠습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> Button <span class=\"token keyword\">from</span> <span class=\"token string\">\"./Button\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">App</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>Button variant<span class=\"token operator\">=</span><span class=\"token string\">\"default\"</span><span class=\"token operator\">></span>Default<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Button<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>Button variant<span class=\"token operator\">=</span><span class=\"token string\">\"danger\"</span><span class=\"token operator\">></span>Danger<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Button<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>Button variant<span class=\"token operator\">=</span><span class=\"token string\">\"outline\"</span><span class=\"token operator\">></span>Outline<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Button<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span><span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"가변-스타일링-2\" style=\"position:relative;\"><a href=\"#%EA%B0%80%EB%B3%80-%EC%8A%A4%ED%83%80%EC%9D%BC%EB%A7%81-2\" aria-label=\"가변 스타일링 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>가변 스타일링 2</h2>\n<p>prop에 따라 바꾸고 싶은 CSS 속성이 위와 같이 하나가 아니라 여러 개일 경우가 있습니다.\n이럴 경우에는 CSS 속성의 값뿐만 아니라 CSS 속성 이름과 값을 동시에 객체로 만들어주면 되는데요.</p>\n<p>예를 들어, <code>size</code>라는 prop에 넘어온 값에 따라서 버튼의 크기가 바뀌도록 해보겠습니다.\n<code>fontSize</code> 속성과 <code>padding</code> 속성을 다르게 해보죠.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">/** @jsxImportSource @emotion/react */</span>\n\n<span class=\"token keyword\">const</span> colors <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">default</span><span class=\"token operator\">:</span> <span class=\"token string\">\"rgb(36, 41, 47)\"</span><span class=\"token punctuation\">,</span>\n  danger<span class=\"token operator\">:</span> <span class=\"token string\">\"rgb(207, 34, 46)\"</span><span class=\"token punctuation\">,</span>\n  outline<span class=\"token operator\">:</span> <span class=\"token string\">\"rgb(9, 105, 218)\"</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">const</span> sizeStyles <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">  sm<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">    fontSize<span class=\"token operator\">:</span> <span class=\"token string\">\"12px\"</span><span class=\"token punctuation\">,</span></span><span class=\"gatsby-highlight-code-line\">    padding<span class=\"token operator\">:</span> <span class=\"token string\">\"3px 12px\"</span><span class=\"token punctuation\">,</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span></span><span class=\"gatsby-highlight-code-line\">  md<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">    fontSize<span class=\"token operator\">:</span> <span class=\"token string\">\"14px\"</span><span class=\"token punctuation\">,</span></span><span class=\"gatsby-highlight-code-line\">    padding<span class=\"token operator\">:</span> <span class=\"token string\">\"5px 16px\"</span><span class=\"token punctuation\">,</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span></span><span class=\"gatsby-highlight-code-line\">  lg<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">    fontSize<span class=\"token operator\">:</span> <span class=\"token string\">\"16px\"</span><span class=\"token punctuation\">,</span></span><span class=\"gatsby-highlight-code-line\">    padding<span class=\"token operator\">:</span> <span class=\"token string\">\"9px 20px\"</span><span class=\"token punctuation\">,</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">Button</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> children<span class=\"token punctuation\">,</span> size <span class=\"token operator\">=</span> <span class=\"token string\">\"md\"</span><span class=\"token punctuation\">,</span> variant <span class=\"token operator\">=</span> <span class=\"token string\">\"default\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>button\n      css<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>\n        borderRadius<span class=\"token operator\">:</span> <span class=\"token string\">\"6px\"</span><span class=\"token punctuation\">,</span>\n        border<span class=\"token operator\">:</span> <span class=\"token string\">\"1px solid rgba(27, 31, 36, 0.15)\"</span><span class=\"token punctuation\">,</span>\n        backgroundColor<span class=\"token operator\">:</span> <span class=\"token string\">\"rgb(246, 248, 250)\"</span><span class=\"token punctuation\">,</span>\n        color<span class=\"token operator\">:</span> colors<span class=\"token punctuation\">[</span>variant<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n        fontFamily<span class=\"token operator\">:</span> <span class=\"token string\">\"-apple-system, BlinkMacSystemFont, sans-serif\"</span><span class=\"token punctuation\">,</span>\n        fontWeight<span class=\"token operator\">:</span> <span class=\"token string\">\"600\"</span><span class=\"token punctuation\">,</span>\n        lineHeight<span class=\"token operator\">:</span> <span class=\"token string\">\"20px\"</span><span class=\"token punctuation\">,</span>\n<span class=\"gatsby-highlight-code-line\">        <span class=\"token operator\">...</span>sizeStyles<span class=\"token punctuation\">[</span>size<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></span>        textAlign<span class=\"token operator\">:</span> <span class=\"token string\">\"center\"</span><span class=\"token punctuation\">,</span>\n        cursor<span class=\"token operator\">:</span> <span class=\"token string\">\"pointer\"</span><span class=\"token punctuation\">,</span>\n        appearance<span class=\"token operator\">:</span> <span class=\"token string\">\"none\"</span><span class=\"token punctuation\">,</span>\n        userSelect<span class=\"token operator\">:</span> <span class=\"token string\">\"none\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n    <span class=\"token operator\">></span>\n      <span class=\"token punctuation\">{</span>children<span class=\"token punctuation\">}</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> Button<span class=\"token punctuation\">;</span></code></pre></div>\n<p>자, 이제 3가지 크기의 3가지 색상, 총 9가지 종류의 버튼을 만들어 낼 수 있게 되었습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> Button <span class=\"token keyword\">from</span> <span class=\"token string\">\"./Button\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">App</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>Button size<span class=\"token operator\">=</span><span class=\"token string\">\"sm\"</span> variant<span class=\"token operator\">=</span><span class=\"token string\">\"default\"</span><span class=\"token operator\">></span>\n        Default\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Button<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>Button size<span class=\"token operator\">=</span><span class=\"token string\">\"md\"</span> variant<span class=\"token operator\">=</span><span class=\"token string\">\"default\"</span><span class=\"token operator\">></span>\n        Default\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Button<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>Button size<span class=\"token operator\">=</span><span class=\"token string\">\"lg\"</span> variant<span class=\"token operator\">=</span><span class=\"token string\">\"default\"</span><span class=\"token operator\">></span>\n        Default\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Button<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>hr <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>Button size<span class=\"token operator\">=</span><span class=\"token string\">\"sm\"</span> variant<span class=\"token operator\">=</span><span class=\"token string\">\"danger\"</span><span class=\"token operator\">></span>\n        Danger\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Button<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>Button size<span class=\"token operator\">=</span><span class=\"token string\">\"md\"</span> variant<span class=\"token operator\">=</span><span class=\"token string\">\"danger\"</span><span class=\"token operator\">></span>\n        Danger\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Button<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>Button size<span class=\"token operator\">=</span><span class=\"token string\">\"lg\"</span> variant<span class=\"token operator\">=</span><span class=\"token string\">\"danger\"</span><span class=\"token operator\">></span>\n        Danger\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Button<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>hr <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>Button size<span class=\"token operator\">=</span><span class=\"token string\">\"sm\"</span> variant<span class=\"token operator\">=</span><span class=\"token string\">\"outline\"</span><span class=\"token operator\">></span>\n        Outline\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Button<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>Button size<span class=\"token operator\">=</span><span class=\"token string\">\"md\"</span> variant<span class=\"token operator\">=</span><span class=\"token string\">\"outline\"</span><span class=\"token operator\">></span>\n        Outline\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Button<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>Button size<span class=\"token operator\">=</span><span class=\"token string\">\"lg\"</span> variant<span class=\"token operator\">=</span><span class=\"token string\">\"outline\"</span><span class=\"token operator\">></span>\n        Outline\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Button<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span><span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"전체-코드\" style=\"position:relative;\"><a href=\"#%EC%A0%84%EC%B2%B4-%EC%BD%94%EB%93%9C\" aria-label=\"전체 코드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>전체 코드</h2>\n<p>본 포스팅에서 작성한 코드는 아래에서 직접 확인하고 실행해보실 수 있습니다.</p>\n<iframe src=\"https://codesandbox.io/embed/emotion-bno03m?fontsize=14&hidenavigation=1&module=%2Fsrc%2FButton.jsx&theme=dark\"\n     style=\"width:100%; height:500px; border:0; border-radius: 4px; overflow:hidden;\"\n     title=\"emotion\"\n     allow=\"accelerometer; ambient-light-sensor; camera; encrypted-media; geolocation; gyroscope; hid; microphone; midi; payment; usb; vr; xr-spatial-tracking\"\n     sandbox=\"allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts\"\n   ></iframe>\n<h2 id=\"마치면서\" style=\"position:relative;\"><a href=\"#%EB%A7%88%EC%B9%98%EB%A9%B4%EC%84%9C\" aria-label=\"마치면서 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>마치면서</h2>\n<p>이상으로 React 컴포넌트를 Emotion을 이용해서 어떻게 스타일하는지 알아보았습니다.</p>\n<p>재작년까지만 해도 Styled Components라는 라이브러리가 가장 돋보였는데 최근에는 <a href=\"https://mui.com/\">MUI(Material UI)</a>가 스타일링 엔진을 Styled Components 대신에 Emotion을 채택하면서 Emotion 쪽으로 살짝 기우는 게 아닌가 하는 느낌이 드는데요.</p>\n<p>저는 두 개의 CSS-in-JS 라이브러리는 모두 많이 써봤는데 개인적으로 Emotion의 <code>css()</code> 함수가 좀 더 사용하기가 편한 것 같습니다.</p>","timeToRead":7,"fields":{"slug":"/emotion/","tags":["JavaScript","React","CSS","style","CSS in JS","Emotion"]},"frontmatter":{"title":"Emotion으로 React 컴포넌트 스타일하기","date":"Jul 27, 2022"}},"next":{"fields":{"slug":"/google-maps-api/"},"frontmatter":{"title":"구글 Maps API 사용법"}}}},"staticQueryHashes":["2168229929","2362167539","3056348342"]}