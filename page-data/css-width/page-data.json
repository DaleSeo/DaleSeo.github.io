{"componentChunkName":"component---src-templates-detail-template-jsx","path":"/css-width/","result":{"pageContext":{"previous":{"fields":{"slug":"/css-typography/"},"frontmatter":{"title":"텍스트 스타일을 위한 10가지 CSS 속성"}},"node":{"html":"<p>웹 페이지의 레이아웃을 디자인할 때 CSS에서 요소의 너비를 정의하는 <code>width</code> 속성이 매우 중요한 역할을 하게 되는데요.</p>\n<p>이번 포스팅에서는 CSS의 <code>width</code> 속성의 기본적인 사용법과 각 속성값에 따라 어떻게 너비가 결정되는지에 대해서 알아보겠습니다.</p>\n<h2 id=\"width-속성\" style=\"position:relative;\"><a href=\"#width-%EC%86%8D%EC%84%B1\" aria-label=\"width 속성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>width 속성</h2>\n<p>CSS의 <code>width</code> 속성은 HTML 요소의 너비를 제어하기 위해서 사용되는데요. 크게 절대값, 상대값, 키워드로 설정이 가능한데 이에 따른 너비가 어떻게 결정되는지 이해하는 것이 중요합니다.</p>\n<h2 id=\"절대값\" style=\"position:relative;\"><a href=\"#%EC%A0%88%EB%8C%80%EA%B0%92\" aria-label=\"절대값 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>절대값</h2>\n<p><code>px</code>와 같은 절대 단위를 사용하여 <code>width</code> 속성값을 지정해주면 해당 요소는 항상 고정된 너비를 갖게 됩니다.\n즉, 절대값으로 <code>width</code> 속성을 설정하면 가용 너비이나 컨텐츠의 크기와 무방하게 특정값으로 요소의 너비를 고정시킬 수 있습니다.</p>\n<p>예를 들어, <code>&#x3C;p></code> 요소의 너비를 <code>300px</code>로 고정하려면 다음과 같이 스타일합니다.</p>\n<div class=\"gatsby-highlight has-highlighted-lines\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">p</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 300px<span class=\"token punctuation\">;</span></span>  <span class=\"token property\">margin</span><span class=\"token punctuation\">:</span> 10px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> yellow<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<iframe height=\"300\" style=\"width: 100%;\" scrolling=\"no\" title=\"css-width-px\" src=\"https://codepen.io/daleseo/embed/gOWajwP?defaultTab=result\" frameborder=\"no\" loading=\"lazy\" allowtransparency=\"true\" allowfullscreen=\"true\">\n  See the Pen <a href=\"https://codepen.io/daleseo/pen/gOWajwP\">\n  css-width-px</a> by Dale Seo (<a href=\"https://codepen.io/daleseo\">@daleseo</a>)\n  on <a href=\"https://codepen.io\">CodePen</a>.\n</iframe>\n<p>위 예제 화면에서 브라우저 너비를 아주 좁게 줄이더라도 노란색 배경의 텍스트 영역의 너비는 붉은 테두리의 부모 요소를 삐져나올지언정 절대 변하지 않는 것을 확인할 수 있습니다.</p>\n<p>적응형(adaptive) 웹디자인에서는 <code>width</code> 속성을 지정할 때 절대 단위를 피하는 것이 좋습니다.\n요소의 너비를 고정해놓으면 브라우저의 화면 크기에 따라 너무 좁아 보이거나 너무 넓어 보일 수 있기 때문입니다.</p>\n<h2 id=\"상대값\" style=\"position:relative;\"><a href=\"#%EC%83%81%EB%8C%80%EA%B0%92\" aria-label=\"상대값 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>상대값</h2>\n<p>요소의 너비가 가용 너비에 비례해서 커지거나 작아지게 하고 싶다면 어떻게 해야할까요?\n<code>%</code>와 같은 상대 단위를 사용하여 <code>width</code> 속성값을 지정해주면 됩니다.</p>\n<blockquote>\n<p>참고로, 여기서 가용 너비란 박스 모델 상에서 부모 요소의 켄텐트 박스 크기를 의미합니다. 박스 모델에 대한 자세한 설명은 <a href=\"/css-box-model\">관련 포스팅</a>를 참고 바랍니다.</p>\n</blockquote>\n<p>예를 들어, 가용 너비가 <code>400px</code>인 상황에서, <code>width: 50%</code>를 설정하면 해당 요소의 너비는 <code>200px</code>이 됩니다.</p>\n<p>상대값으로 너비를 설정해줄 때 CSS 초보자들이 범하기 쉬운 실수가 <code>margin</code>이 설정된 요소를 대상으로 <code>width: 100%</code>를 설정하는 것인데요.\n이럴 경우, 의도치 않게 자식 요소가 부모 요소 밖으로 삐져나오게 됩니다.</p>\n<p>예를 들어, 아래와 같이 <code>&#x3C;p></code> 요소를 스타일하면 좌우 여백을 포함하여 요소의 전체 너비가 <code>400px(100%) + 10px * 2 = 420px</code>가 되므로 부모 요소의 가용 너비 <code>400px</code>을 초과하게 됩니다.</p>\n<div class=\"gatsby-highlight has-highlighted-lines\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">p</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 100%<span class=\"token punctuation\">;</span></span>  <span class=\"token property\">margin</span><span class=\"token punctuation\">:</span> 10px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> yellow<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<iframe height=\"300\" style=\"width: 100%;\" scrolling=\"no\" title=\"css-width-percent\" src=\"https://codepen.io/daleseo/embed/YzVyjpK?defaultTab=result\" frameborder=\"no\" loading=\"lazy\" allowtransparency=\"true\" allowfullscreen=\"true\">\n  See the Pen <a href=\"https://codepen.io/daleseo/pen/YzVyjpK\">\n  css-width-percent</a> by Dale Seo (<a href=\"https://codepen.io/daleseo\">@daleseo</a>)\n  on <a href=\"https://codepen.io\">CodePen</a>.\n</iframe>\n<p>위와 같은 실수를 범하기 쉬운 이유는 많은 분들이 <code>width</code> 속성의 기본값을 <code>100%</code>로 오해하고 있기 때문입니다.\n사실 <code>width</code> 속성의 기본값은 다음 섹션에서 설명드릴 <code>auto</code> 키워드입니다.</p>\n<h2 id=\"auto\" style=\"position:relative;\"><a href=\"#auto\" aria-label=\"auto permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>auto</h2>\n<p><code>width</code> 속성의 기본값을 <code>100%</code>로 알고 계신 분들이 많은데요.\n사실 <code>width</code> 속성을 명시하지 않으면 <code>auto</code>라는 키워드가 기본값으로 사용이 됩니다.</p>\n<p>말그대로 <code>auto</code> 키워드를 사용하면 브라우저가 해당 요소의 <code>width</code> 속성값을 자동으로 계산해줍니다.\n계산 알고리즘은 부모 요소로 부터 주어진 가용 너비에서 <code>margin</code> 크기를 제외한 너비를 <code>width</code> 속성값으로 사용하는 것입니다.</p>\n<p>예를 들어, 다음과 같이 가용 너비가 <code>400px</code>인 상황에서 <code>&#x3C;p></code> 요소에 <code>margin: 10px</code>가 적용되어 되어 있다면 브라우저는 <code>width</code> 속성값을 <code>400px - 10px * 2 = 380px</code>로 계산해줍니다.\nCSS의 <code>calc</code> 함수를 알고 있으시다면, <code>width: auto</code>는 <code>width: calc(100% - 10px * 2)</code>의 효과를 낸다고 생각하면 됩니다.</p>\n<div class=\"gatsby-highlight has-highlighted-lines\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">p</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token comment\">/* width: auto; // 기본값 */</span></span>  <span class=\"token property\">margin</span><span class=\"token punctuation\">:</span> 10px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> yellow<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<iframe height=\"300\" style=\"width: 100%;\" scrolling=\"no\" title=\"css-width-1\" src=\"https://codepen.io/daleseo/embed/YzVyLge?defaultTab=result\" frameborder=\"no\" loading=\"lazy\" allowtransparency=\"true\" allowfullscreen=\"true\">\n  See the Pen <a href=\"https://codepen.io/daleseo/pen/YzVyLge\">\n  css-width-1</a> by Dale Seo (<a href=\"https://codepen.io/daleseo\">@daleseo</a>)\n  on <a href=\"https://codepen.io\">CodePen</a>.\n</iframe>\n<h2 id=\"min-content\" style=\"position:relative;\"><a href=\"#min-content\" aria-label=\"min content permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>min-content</h2>\n<p><code>min-content</code> 키워드와 <code>max-content</code> 키워드는 상대값과 반대로 가용 공간이 아닌 담고 있는 컨텐츠에 의해 <code>width</code> 속성값이 결정되는데요.</p>\n<p>먼저 <code>min-content</code> 키워드는 요소의 너비를 줄일 수 있는 만큼 최소로 줄이고 싶을 때 사용합니다.\n최소 너비는 해당 요소가 담고 있는 컨텐츠에 의해 좌우가 되는데요.</p>\n<p>예를 들어, 텍스트 컨텐츠의 경우 최대한 줄바꿈을 하여 가장 긴 단어의 길이가 최소 너비를 결정합니다.</p>\n<div class=\"gatsby-highlight has-highlighted-lines\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">p</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> min-content<span class=\"token punctuation\">;</span></span>  <span class=\"token property\">margin</span><span class=\"token punctuation\">:</span> 10px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> yellow<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<iframe height=\"300\" style=\"width: 100%;\" scrolling=\"no\" title=\"css-width-min-content\" src=\"https://codepen.io/daleseo/embed/BaRoPQL?defaultTab=result\" frameborder=\"no\" loading=\"lazy\" allowtransparency=\"true\" allowfullscreen=\"true\">\n  See the Pen <a href=\"https://codepen.io/daleseo/pen/BaRoPQL\">\n  css-width-min-content</a> by Dale Seo (<a href=\"https://codepen.io/daleseo\">@daleseo</a>)\n  on <a href=\"https://codepen.io\">CodePen</a>.\n</iframe>\n<p>위 예제의 경우, <code>width</code>라는 단어가 가장 길기 때문에 컨테이너의 최소 너비로 사용되었습니다.</p>\n<h2 id=\"max-content\" style=\"position:relative;\"><a href=\"#max-content\" aria-label=\"max content permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>max-content</h2>\n<p><code>max-content</code> 키워드는 <code>min-content</code> 키워드와 정반대로 요소의 너비를 최대한 늘이고 싶을 때 사용합니다.\n최대 너비 역시 해당 요소가 담고 있는 컨텐츠에 의해 좌우가 되는데요.</p>\n<p>예를 들어, 텍스트 컨텐츠의 경우 줄바꾸기를 하지 않은 상태의 문장의 길이가 최대 너비로 사용됩니다.</p>\n<div class=\"gatsby-highlight has-highlighted-lines\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">p</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> max-content<span class=\"token punctuation\">;</span></span>  <span class=\"token property\">margin</span><span class=\"token punctuation\">:</span> 10px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> yellow<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<iframe height=\"300\" style=\"width: 100%;\" scrolling=\"no\" title=\"css-width-max-content\" src=\"https://codepen.io/daleseo/embed/GRmpBrp?defaultTab=result\" frameborder=\"no\" loading=\"lazy\" allowtransparency=\"true\" allowfullscreen=\"true\">\n  See the Pen <a href=\"https://codepen.io/daleseo/pen/GRmpBrp\">\n  css-width-max-content</a> by Dale Seo (<a href=\"https://codepen.io/daleseo\">@daleseo</a>)\n  on <a href=\"https://codepen.io\">CodePen</a>.\n</iframe>\n<p><code>max-content</code> 키워드는 텍스트의 배경색을 적용할 때 유용하게 사용될 수 있습니다. 왜냐하면 <code>auto</code> 키워드와 달리 텍스트의 길이에 딱 맞게 배경색을 적용할 수 있기 때문입니다.</p>\n<h2 id=\"fit-content\" style=\"position:relative;\"><a href=\"#fit-content\" aria-label=\"fit content permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>fit-content</h2>\n<p>CSS에서 가장 나중에 추가된 <code>fit-content</code> 키워드는 <code>max-content</code> 키워드와 <code>auto</code> 키워드의 하이브리드 모드처럼 작동합니다.</p>\n<p>가용 너비이 부족하지 않는 경우에는 <code>max-content</code> 키워드처럼 담고 있는 컨텐츠의 최대 너비를 요소의 <code>width</code> 속성값으로 사용합니다.\n그러나 가용 너비이 부족하다면 <code>auto</code> 키워드처럼 가용 너비에서 여백(<code>margin</code>)을 제외한 너비를 요소의 <code>width</code> 속성값으로 사용합니다.</p>\n<div class=\"gatsby-highlight has-highlighted-lines\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">p</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> fit-content<span class=\"token punctuation\">;</span></span>  <span class=\"token property\">margin</span><span class=\"token punctuation\">:</span> 10px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> yellow<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<iframe height=\"300\" style=\"width: 100%;\" scrolling=\"no\" title=\"css-width-max-content\" src=\"https://codepen.io/daleseo/embed/WNjQKxp?defaultTab=result\" frameborder=\"no\" loading=\"lazy\" allowtransparency=\"true\" allowfullscreen=\"true\">\n  See the Pen <a href=\"https://codepen.io/daleseo/pen/WNjQKxp\">\n  css-width-max-content</a> by Dale Seo (<a href=\"https://codepen.io/daleseo\">@daleseo</a>)\n  on <a href=\"https://codepen.io\">CodePen</a>.\n</iframe>\n<p>브라우저 너비를 텍스트가 줄바꿈이 될 때까지 줄여보면서 위 예제 화면의 <code>&#x3C;p></code> 요소의 <code>width</code> 속성값이 어떻게 변하는지 관찰해보세요.</p>\n<h2 id=\"마치면서\" style=\"position:relative;\"><a href=\"#%EB%A7%88%EC%B9%98%EB%A9%B4%EC%84%9C\" aria-label=\"마치면서 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>마치면서</h2>\n<p>이상으로 CSS의 <code>width</code> 속성을 사용하여 요소의 너비를 제어하는 다양한 매커니즘에 대해서 알아보았습니다.\n<code>width</code> 속성은 워낙 자주 쓰이다보니 과소 평가하기 쉬운데요.\n매커니즘을 제대로 이해하지 않으면 실전에서 여러 가지 어려움을 겪을 수 있습니다.\n이번 기회에 제대로 짚고 넘어가시면 좋을 것 같습니다.</p>","timeToRead":5,"fields":{"slug":"/css-width/","tags":["CSS","HTML","width"]},"frontmatter":{"title":"CSS의 width 속성과 너비 결정 매커니즘","date":"Jul 3, 2021"}},"next":{"fields":{"slug":"/fontsource/"},"frontmatter":{"title":"Fontsource로 웹폰트 직접 호스팅하기"}}}},"staticQueryHashes":["2168229929","2362167539","3056348342"]}