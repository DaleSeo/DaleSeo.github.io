{
    "componentChunkName": "component---src-templates-detail-template-jsx",
    "path": "/vite/",
    "result": {"pageContext":{"previous":{"fields":{"slug":"/css-nesting/"},"frontmatter":{"title":"CSS Nesting으로 선택자 중첩하기"}},"node":{"html":"<div class=\"gatsby-resp-iframe-wrapper\" style=\"padding-bottom: 56.25%; position: relative; height: 0; overflow: hidden; \" > <iframe src=\"https://www.youtube.com/embed/aRU-kWZQHn8?si=sgBgAvtPJ-8sUT7c\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" referrerpolicy=\"strict-origin-when-cross-origin\" allowfullscreen=\"\" style=\" position: absolute; top: 0; left: 0; width: 100%; height: 100%; \"></iframe> </div>\n<p>Vite가 <a href=\"/?tag=Webpack\">Webpack</a>이나 Parcel과 같은 기존 번들러(bundler)를 위협하며 자바스크립트 생태계에서 차세대 빌드 도구로 빠르게 부상하고 있습니다.\nVue.js의 창시자인 Evan You가 만든 Vite는 빠른 개발 서버와 빌드 최적화를 제공하여 현대적인 프론트엔드 개발에 핵심적인 도구로 자리 잡고 있는데요.\n이번 포스팅에서는 Vite를 처음 사용하시는 분들의 위해서 Vite로 웹 프로젝트를 시작하는 아주 기초적인 방법을 알려드리겠습니다.</p>\n<h2 id=\"vite란\" style=\"position:relative;\"><a href=\"#vite%EB%9E%80\" aria-label=\"vite란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Vite란?</h2>\n<p>Vite는 기존 자바스크립트 번들러의 만성적인 성능 문제를 해결하고 개발자 경험을 향상시키기 위해서 등장한 차세대 번들러입니다.\n브라우저에서 지원하는 ESM(ES Modules)를 적극적으로 활용하고, 자바스크립트 대신에 컴파일 언어인 Go로 작성된 현대적인 자바스크립트 개발 도구이죠.</p>\n<p>Vite은 예전부터 널리 사용되던 번들러인 Webpack보다 설정이 훨씬 쉽고 간단하며, 설정이 필요 없기로 유명하던 번들러인 Parcel보다도 훨씬 빠릅니다.\n이로 인해서 기존 번들러보다 뛰어난 개발자 경험을 제고하여 많은 개발자로부터 사랑을 받고 있는 번들러입니다.</p>\n<p>2023년 Sate of JavaScript 설문 결과를 보시면 빌드 도구 부분에서 Vite(73%)가 Parcel(30%)을 아득히 넘고 Webpack(90%)에 이어서 사용률 2위를 기록하고 있습니다.\n2021년에 20% 사용률로 처음 그래프에 등장했는데 무서운 성장세가 아닐 수 없습니다.</p>\n<p><img src=\"https://res.cloudinary.com/daleseo/image/upload/v1721756009/stateofjs2023-build-tools-usage.png\" alt=\"stateofjs2023-build-tools-usage\"></p>\n<p>더욱 고무적인 부분은 바로 Vite를 써본 응답자들의 만족도입니다.\n88%로 압도적인 1위를 차지하고 있으며, Webpack의 만족도는 45%까지 곤두박질 친 것을 볼 수 있습니다.</p>\n<p><img src=\"https://res.cloudinary.com/daleseo/image/upload/v1721756010/stateofjs2023-build-tools-positivity.png\" alt=\"stateofjs2023-build-tools-positivity\"></p>\n<p>참고로 많은 분들이 영문 철자만 보시고 Vite를 “바이트”라고 발음해야 하는 걸로 오해하시는데요.\n사실 Vite라는 이름은 “빠름”을 의미하는 프랑스어에서 유래되었고 그래서 정확한 발음은 “비트”라고 합니다.\n한국 개발자들 사이에서는 우스갯 소리로 빛처럼 빠르다고 “빛”이라고도 많이 부르는 것 같습니다. 😄</p>\n<h2 id=\"vite-프로젝트-생성\" style=\"position:relative;\"><a href=\"#vite-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EC%83%9D%EC%84%B1\" aria-label=\"vite 프로젝트 생성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Vite 프로젝트 생성</h2>\n<p>Vite는 누구나 손쉽게 프로젝트를 시작할 수 있도록 명령줄 도구(CLI)를 제공하고 있는데요.\n이 명령줄 도구는 npm 패키지 저장소에 <code>vite</code>라는 이름으로 등록되어 있습니다.</p>\n<p><a href=\"/?tag=Node.js\">Node.js</a>를 사용하신다면 터미널에서 <code>npm</code> 명령어를 사용하여 Vite 프로젝트를 시작할 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">npm</span> create vite@latest</code></pre></div>\n<p>차세대 자바스크립트 런타임인 <a href=\"/?tag=Bun\">Bun</a>을 사용하신다면 <code>bun</code> 명령어를 사용하시면 됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ bun create vite</code></pre></div>\n<p>위 명령어를 실행하면 어떤 유형의 프로젝트를 만들건지 다양한 질문이 나올 겁니다.\n답변을 선택 하시면 이를 토대로 별다른 추가 설정없이 바로 개발을 시작할 수 있는 프로젝트 하나가 뚝딱 만들어지죠.</p>\n<p>본 포스팅에서는 최대한 간단한 실습을 위해서 TypeScript를 사용하는 Vanilla(아무 프레임워크도 안 쓰는) 프로젝트를 만들어 보겠습니다.\n<code>vite-project</code> 폴더에 만들겠습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">✔ Project name: … vite-project\n✔ Select a framework: › Vanilla\n✔ Select a variant: › TypeScript\n\nScaffolding project <span class=\"token keyword\">in</span> /Users/daleseo/Temp/vite-project<span class=\"token punctuation\">..</span>.\n\nDone. Now run:\n\n  <span class=\"token builtin class-name\">cd</span> vite-project\n  bun <span class=\"token function\">install</span>\n  bun run dev</code></pre></div>\n<blockquote>\n<p>다양한 자바스크립트 프로젝트 생성법에 대해서는 <a href=\"/js-npm-init/\">별도 포스팅</a>에서 자세히 다루고 있으니 참고 바랍니다.</p>\n</blockquote>\n<h2 id=\"개발-서버-구동\" style=\"position:relative;\"><a href=\"#%EA%B0%9C%EB%B0%9C-%EC%84%9C%EB%B2%84-%EA%B5%AC%EB%8F%99\" aria-label=\"개발 서버 구동 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>개발 서버 구동</h2>\n<p>개발자 입장에서 Vite가 가장 매력적인 이유는 무엇보다 말도 안 되게 빠르고 올라가고 실시간으로 코드 변경을 반영해주는 개발 서버입니다.</p>\n<p>위에서 프로젝트를 생성하면 나오는데로 프로젝트 폴더에 들어가서 패키지만 설치하면 바로 개발 서버를 구동해볼 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token builtin class-name\">cd</span> vite-project\n$ bun <span class=\"token function\">install</span>\nbun <span class=\"token function\">install</span> v1.1.15 <span class=\"token punctuation\">(</span>b23ba1fe<span class=\"token punctuation\">)</span>\n\n+ typescript@5.5.3\n+ vite@5.3.4\n\n<span class=\"token number\">12</span> packages installed <span class=\"token punctuation\">[</span><span class=\"token number\">1220</span>.00ms<span class=\"token punctuation\">]</span>\n$ bun run dev\n$ vite\n\n  VITE v5.3.4  ready <span class=\"token keyword\">in</span> <span class=\"token number\">399</span> ms\n\n  ➜  Local:   http://localhost:5173/\n  ➜  Network: use <span class=\"token parameter variable\">--host</span> to expose\n  ➜  press h + enter to show <span class=\"token builtin class-name\">help</span></code></pre></div>\n<p>(Node.js를 쓰신다면 <code>bun install</code> 대신에 <code>npm install</code>, <code>bun run dev</code> 대신에 <code>npm run dev</code>를 실행하시면 됩니다.)</p>\n<p>이제 브라우저에서 <code>http://localhost:5173/</code>을 접속해보시면 카운터 버튼이 있는 웹사이트 하나가 열릴 것입니다.</p>\n<p>Vite의 개발 서버는 프로젝트 내의 소스 코드를 감시하다가 코드가 변경되면 눈 깜짝할 사이에 브라우저에 반영을 해주는데요.\n이러한 HMR(Hot Module Replacement) 기능은 Webpack이나 Parcel과 같은 기존 번들러도 지원했지만 Vite는 내부적으로 Go 언어로 작성된 esbuild를 사용하기 때문에 체감 속도가 크게 차이 납니다.</p>\n<p>간단한 실습을 위해서 <code>src/counter.ts</code> 파일을 아래와 같이 수정한 후 저장해보세요.\n<code>Cmd + S</code> 버튼을 누르자 마자 수정분이 웹사이트에 반영이 되는 것을 볼 수 있으실 것입니다. 🏎️</p>\n<div class=\"gatsby-code-title\">src/counter.ts</div>\n<div class=\"gatsby-highlight has-highlighted-lines\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">function</span> <span class=\"token function\">setupCounter</span><span class=\"token punctuation\">(</span>element<span class=\"token operator\">:</span> HTMLButtonElement<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> counter <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">setCounter</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>count<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">    counter <span class=\"token operator\">=</span> count<span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token comment\">// element.innerHTML = `count is ${counter}`;</span></span>    element<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">카운트는 </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>counter<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> 입니다.</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  element<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"click\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">setCounter</span><span class=\"token punctuation\">(</span>counter <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">setCounter</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"프로젝트-빌드\" style=\"position:relative;\"><a href=\"#%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EB%B9%8C%EB%93%9C\" aria-label=\"프로젝트 빌드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>프로젝트 빌드</h2>\n<p>Vite는 프로덕션(production) 빌드(build) 시에는 Rollup을 사용하여 상용 환경에 최적화된 번들을 생성해주는데요.\n덕분에 오랜 시간 축적된 Rollup의 풍부한 플러그인 생태계를 그대로 누릴 수 있다는 장점이 있습니다.</p>\n<p>프로젝트를 빌드하면 우선 타입스크립트로 작성된 코드가 자바스크립트로 컴파일(compile)되고, 프로젝트의 최상위 경로에 <code>dist</code> 폴더가 생기고 그 안에 HTML, CSS, JS 파일이 생기는데요.</p>\n<p><a href=\"/?tag=Bun\">Bun</a>을 사용하신다면 터미널에서 <code>bun run build</code> 명령어를 실행하면 됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ bun run build\n$ tsc <span class=\"token operator\">&amp;&amp;</span> vite build\nvite v5.3.4 building <span class=\"token keyword\">for</span> production<span class=\"token punctuation\">..</span>.\n✓ <span class=\"token number\">7</span> modules transformed.\ndist/index.html                 <span class=\"token number\">0.46</span> kB │ gzip: <span class=\"token number\">0.29</span> kB\ndist/assets/index-CbFCNpm3.css  <span class=\"token number\">1.20</span> kB │ gzip: <span class=\"token number\">0.62</span> kB\ndist/assets/index-DnV3Igaa.js   <span class=\"token number\">3.06</span> kB │ gzip: <span class=\"token number\">1.65</span> kB\n✓ built <span class=\"token keyword\">in</span> 50ms</code></pre></div>\n<p>Node.js를 쓰신다면 터미널에서 <code>npm run build</code> 명령어를 실행하면 됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">npm</span> run build\n\n<span class=\"token operator\">></span> vite-project@0.0.0 build\n<span class=\"token operator\">></span> tsc <span class=\"token operator\">&amp;&amp;</span> vite build\n\nvite v5.3.4 building <span class=\"token keyword\">for</span> production<span class=\"token punctuation\">..</span>.\n✓ <span class=\"token number\">7</span> modules transformed.\ndist/index.html                 <span class=\"token number\">0.46</span> kB │ gzip: <span class=\"token number\">0.29</span> kB\ndist/assets/index-CbFCNpm3.css  <span class=\"token number\">1.20</span> kB │ gzip: <span class=\"token number\">0.62</span> kB\ndist/assets/index-DnV3Igaa.js   <span class=\"token number\">3.06</span> kB │ gzip: <span class=\"token number\">1.65</span> kB\n✓ built <span class=\"token keyword\">in</span> 76ms</code></pre></div>\n<p><code>dist</code> 폴더에 생성된 번들 파일들을 그대로 상용 서버에 올리면 웹사이트가 배포가 완료되게 됩니다.\n물론 실제 프로젝트에서는 직접 올리지 않고 CI/CD 도구를 통해서 배포를 자동화하겠죠?</p>\n<h2 id=\"프로덕션-프리뷰\" style=\"position:relative;\"><a href=\"#%ED%94%84%EB%A1%9C%EB%8D%95%EC%85%98-%ED%94%84%EB%A6%AC%EB%B7%B0\" aria-label=\"프로덕션 프리뷰 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>프로덕션 프리뷰</h2>\n<p>Vite를 통해서 최종 빌드 결과물을 기준으로 웹 애플리케이션을 돌려볼 수도 있는데요.\n상용 환경에 애플리케이션을 배포하기 전에 로컬 환경에서 미리 확인해보고 싶을 때 유용합니다.</p>\n<p>터미널에서 <code>bun run preview</code> 또는 <code>npm run preview</code> 명령어를 실행하면 프로덕션 프리뷰를 할 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ bun run preview\n$ vite preview\n  ➜  Local:   http://localhost:4173/\n  ➜  Network: use <span class=\"token parameter variable\">--host</span> to expose\n  ➜  press h + enter to show <span class=\"token builtin class-name\">help</span></code></pre></div>\n<p>이제 브라우저에서 <code>http://localhost:4173/</code>을 열어보면 상용 환경에서 웹사이트가 어떻게 보일지 확인할 수 있을 것입니다. 🎉</p>\n<p>참고로 아까 전에 개발 서버로 웹사이트를 띄울 때는 <code>5173</code> 포트를 사용했었는데요.\n프로덕션 프리뷰를 할 때는 포트 충돌이 나지 않도록 <code>4173</code>을 기본 포트로 사용합니다.\n참 세심한 배려죠?</p>\n<h2 id=\"마치면서\" style=\"position:relative;\"><a href=\"#%EB%A7%88%EC%B9%98%EB%A9%B4%EC%84%9C\" aria-label=\"마치면서 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>마치면서</h2>\n<p>이상으로 Vite로 간단한 타입스크립트 프로젝트를 어떻게 시작할 수 있는지 알아보았습니다.\n또한 Vite의 개발 서버를 사용해보고, 프로젝트 빌드와 프리뷰도 해보았습니다.</p>\n<p>본 포스팅이 Vite를 처음 배우시는 분들에게 도움이 되었으면 좋겠습니다.\n후속 포스팅을 통해서 Vite의 여러 가지 기능들을 좀 더 깊게 알아보는 시간을 갖도록 하겠습니다.</p>\n<blockquote>\n<p>Vite 연관된 포스팅은 <a href=\"/?tag=Vite\">Vite 태그</a>를 통해서 쉽게 만나보세요!</p>\n</blockquote>","timeToRead":5,"fields":{"slug":"/vite/","tags":["JavaScript","TypeScript","library","ESM","Vite","CLI"]},"frontmatter":{"title":"Vite 처음 시작하기","date":"Jul 17, 2024"}},"next":{"fields":{"slug":"/shell-redirection/"},"frontmatter":{"title":"쉘 리다이렉션(Redirection) 사용법"}}}},
    "staticQueryHashes": ["2168229929","2362167539","3056348342"]}