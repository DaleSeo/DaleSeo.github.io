{"componentChunkName":"component---src-templates-detail-template-jsx","path":"/vue-cli3/","result":{"pageContext":{"previous":{"fields":{"slug":"/java9-immutable-collections/"},"frontmatter":{"title":"Java9의 불변 컬렉션 생성"}},"node":{"html":"<p>2018년 8월 10일 Vue CLI 3가 정식 릴리즈되었습니다.</p>\n<ul>\n<li>Github 릴리즈 페이지: <a href=\"https://github.com/vuejs/vue-cli/releases\">https://github.com/vuejs/vue-cli/releases</a></li>\n<li>Evan You의 포스팅: <a href=\"https://medium.com/the-vue-point/vue-cli-3-0-is-here-c42bebe28fbb\">https://medium.com/the-vue-point/vue-cli-3-0-is-here-c42bebe28fbb</a></li>\n</ul>\n<p>Vue CLI는 React의 <code>create-react-app</code>처럼 Vue 프로젝트를 손쉽게 만들 수 있도록 도와주는 커맨드 라인 도구 입니다. 이번 포스팅에서는 Vue CLI 3 사용법에 대해서 간단하게 알아보도록 하겠습니다.</p>\n<h2 id=\"vue-cli-3-설치\" style=\"position:relative;\"><a href=\"#vue-cli-3-%EC%84%A4%EC%B9%98\" aria-label=\"vue cli 3 설치 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Vue CLI 3 설치</h2>\n<p>Vue CLI 패키지 이름이 바뀌었습니다. 기존 Vue CLI 2는 <code>vue-cli</code> 였는데, 이번 Vue CLI 3는 <code>@vue/cli</code>라는 새로운 패키지 이름을 사용하고 있습니다. 참고로 <code>@</code> 마크는 NPM에 최근에 도입된 <a href=\"https://docs.npmjs.com/misc/scope\">Scoped package</a>를 의미합니다.</p>\n<p>먼저 기존에 Vue CLI 2를 사용하고 있었다면, <code>vue</code>라는 커맨드의 네임스페이스가 꼬일지도 모르니 Vue CLI 2를 제거하겠습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">npm</span> r -g vue-cli</code></pre></div>\n<p>그리고 Vue CLI 3를 전역으로 설치합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">npm</span> i -g @vue/cli\n$ vue --version\n<span class=\"token number\">3.0</span>.0</code></pre></div>\n<p>위와 같이 <code>3</code>으로 시작하는 버전이 확인되면 설치가 완료된 것입니다.</p>\n<h2 id=\"프로젝트-생성\" style=\"position:relative;\"><a href=\"#%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EC%83%9D%EC%84%B1\" aria-label=\"프로젝트 생성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>프로젝트 생성</h2>\n<p>새로운 프로젝트를 생성해보겠습니다. 저는 프로젝트 이름으로 <code>hello-vue-cli</code>을 사용하겠습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ vue create hello-vue-cli\nVue CLI v3.0.0\n? Please pick a preset: <span class=\"token punctuation\">(</span>Use arrow keys<span class=\"token punctuation\">)</span>\n❯ default <span class=\"token punctuation\">(</span>babel, eslint<span class=\"token punctuation\">)</span>\n  Manually <span class=\"token keyword\">select</span> features</code></pre></div>\n<p>위와 같이 디폴트 설정으로 갈지 매뉴얼하게 옵션을 선택할지 나오는데요. 나중에 언제든지 옵션 추가가 가능하기 때문에 그냥 디폴트 설정을 선택하겠습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">✨  Creating project <span class=\"token keyword\">in</span> /work/temp/hello-vue-cli.\n🗃  Initializing <span class=\"token function\">git</span> repository<span class=\"token punctuation\">..</span>.\n⚙  Installing CLI plugins. This might take a while<span class=\"token punctuation\">..</span>.\n<span class=\"token punctuation\">(</span><span class=\"token punctuation\">..</span>. 생략 <span class=\"token punctuation\">..</span>.<span class=\"token punctuation\">)</span>\n🎉  Successfully created project hello-vue-cli.\n👉  Get started with the following commands:\n\n $ <span class=\"token builtin class-name\">cd</span> hello-vue-cli\n $ <span class=\"token function\">npm</span> run serve</code></pre></div>\n<p>그러면 귀여운 아이콘들이 나오면서 프로젝트 생성이 진행되고 금방 설치가 완료됩니다.</p>\n<h2 id=\"개발-서버-구동\" style=\"position:relative;\"><a href=\"#%EA%B0%9C%EB%B0%9C-%EC%84%9C%EB%B2%84-%EA%B5%AC%EB%8F%99\" aria-label=\"개발 서버 구동 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>개발 서버 구동</h2>\n<p>시키는대로 프로젝트 디렉터리로 들어가서 NPM 커맨드를 날리면 순식간에 웹팩 개발 서버가 구동됩니다. <code>npm run serve</code> 커맨드는 내부적으로 웹팩 개발 서버인 <code>webpack-dev-server</code>를 사용합니다. (웹팩 개발 서버에 대한 부연 설명은 <a href=\"/webpack-development\">관련 포스팅</a>를 참고바랍니다.)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ cd hello-vue-cli\n$ npm run serve\n\n> hello-vue-cli@0.1.0 serve /work/temp/hello-vue-cli\n> vue-cli-service serve\n\n INFO  Starting development server...\n 98% after emitting CopyPlugin\n DONE  Compiled successfully in 2094ms                                  15:09:40\n\n\n  App running at:\n  - Local:   http://localhost:8080/\n  - Network: http://10.2.120.137:8080/\n\n  Note that the development build is not optimized.\n  To create a production build, run npm run build.</code></pre></div>\n<p>역시 시키는대로 브라우저에서 <code>http://localhost:8080/</code>에 접속해보면 Vue 로고가 뚜둥 뜨면서 <code>Welcome to Your Vue.js App</code>라는 메세지를 보실 수 있을 겁니다.</p>\n<p>여기서 놀랍게도 <code>npm install</code> 커맨드를 통해 NPM 패키지를 설치하지 않았는데도 개발 서버가 작동한다는 것을 알 수 있는데요. 프로젝트 디렉터리를 보시면 Vue CLI가 이미 <code>node_modules</code> 디렉터리를 생성해 놓고 그 안에 라이브러리들이 모두 다운받아 놓았음을 알 수 있습니다.</p>\n<h2 id=\"플러그인-추가\" style=\"position:relative;\"><a href=\"#%ED%94%8C%EB%9F%AC%EA%B7%B8%EC%9D%B8-%EC%B6%94%EA%B0%80\" aria-label=\"플러그인 추가 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>플러그인 추가</h2>\n<p>기본 프로젝트에서 추가로 필요한 모듈은 플러그인 형태로 나중에 추가가 가능합니다.\n따라서 처음부터 과도하게 설정할 필요없이 필요할 때마다 플러그인을 추가하면서 개발이 가능합니다.\n예제 프로젝트에서는 가장 많이 사용되는 Vue Router와 Vuex 플러그인을 추가해보겠습니다.</p>\n<p>먼저 Vue Router 플러그인을 추가해보겠습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ vue add router\n? Use history mode for router? (Requires proper server setup for index fallback in production) (Y/n) No\n\n🚀  Invoking generator for core:router...\n📦  Installing additional dependencies...\n\nadded 1 package from 1 contributor and audited 11785 packages in 11.271s\nfound 0 vulnerabilities\n\n✔  Successfully invoked generator for plugin: core:router\n   The following files have been updated / added:\n\n     src/router.js\n     src/views/About.vue\n     src/views/Home.vue\n     package-lock.json\n     package.json\n     src/App.vue\n     src/main.js\n\n   You should review these changes with git diff and commit them.</code></pre></div>\n<p>역시 아이콘들이 나오면서 플러그인이 추가됩니다. 플러그인을 추가하면서 어떤 파일들을 변경하거나 추가하였는지 나와서 좋습니다.</p>\n<p>Vue Router 설정 파일인 <code>router.js</code>을 열어보면 <code>/</code>과 <code>/about</code> 경로에 대한 라우팅 정보만 세팅되어 있습니다. 추후로 필요한 경로에 대해서 이 곳에 세팅을 하면 됩니다.</p>\n<ul>\n<li>src/router.js</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> Vue <span class=\"token keyword\">from</span> <span class=\"token string\">\"vue\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> Router <span class=\"token keyword\">from</span> <span class=\"token string\">\"vue-router\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> Home <span class=\"token keyword\">from</span> <span class=\"token string\">\"./views/Home.vue\"</span><span class=\"token punctuation\">;</span>\n\nVue<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span>Router<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Router</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  routes<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span>\n      path<span class=\"token operator\">:</span> <span class=\"token string\">\"/\"</span><span class=\"token punctuation\">,</span>\n      name<span class=\"token operator\">:</span> <span class=\"token string\">\"home\"</span><span class=\"token punctuation\">,</span>\n      component<span class=\"token operator\">:</span> Home<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n      path<span class=\"token operator\">:</span> <span class=\"token string\">\"/about\"</span><span class=\"token punctuation\">,</span>\n      name<span class=\"token operator\">:</span> <span class=\"token string\">\"about\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token comment\">// route level code-splitting</span>\n      <span class=\"token comment\">// this generates a separate chunk (about.[hash].js) for this route</span>\n      <span class=\"token comment\">// which is lazy-loaded when the route is visited.</span>\n      <span class=\"token function-variable function\">component</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span>\n        <span class=\"token keyword\">import</span><span class=\"token punctuation\">(</span><span class=\"token comment\">/* webpackChunkName: \"about\" */</span> <span class=\"token string\">\"./views/About.vue\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>그리고 <code>main.js</code> 파일에도 라우터 설정을 위한 2줄의 코드가 추가되었음을 확인할 수 있습니다.</p>\n<ul>\n<li>src/main.js</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"> <span class=\"token keyword\">import</span> Vue <span class=\"token keyword\">from</span> <span class=\"token string\">'vue'</span>\n <span class=\"token keyword\">import</span> App <span class=\"token keyword\">from</span> <span class=\"token string\">'./App.vue'</span>\n<span class=\"token operator\">+</span><span class=\"token keyword\">import</span> router <span class=\"token keyword\">from</span> <span class=\"token string\">'./router'</span>\n\n Vue<span class=\"token punctuation\">.</span>config<span class=\"token punctuation\">.</span>productionTip <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span>\n\n <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n<span class=\"token operator\">+</span>  router<span class=\"token punctuation\">,</span>\n   <span class=\"token function-variable function\">render</span><span class=\"token operator\">:</span> <span class=\"token parameter\">h</span> <span class=\"token operator\">=></span> <span class=\"token function\">h</span><span class=\"token punctuation\">(</span>App<span class=\"token punctuation\">)</span>\n <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">$mount</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#app'</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>다음으로 Vuex 플러그인을 추가하겠습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ vue add vuex\n\n🚀  Invoking generator for core:vuex...\n📦  Installing additional dependencies...\n\nadded 1 package from 1 contributor and audited 11786 packages in 5.753s\nfound 0 vulnerabilities\n\n✔  Successfully invoked generator for plugin: core:vuex\n   The following files have been updated / added:\n\n     src/store.js\n     package-lock.json\n     package.json\n     src/main.js\n\n   You should review these changes with git diff and commit them.</code></pre></div>\n<p>마찬가지로 순식간에 Vuex 플러그인이 추가됩니다.</p>\n<p>Vuex 설정 파일인 <code>store.js</code>를 열어보면, Vuex의 구성 요소인 State와 Mutations, Actions을 정의할 수 있는 기본 뼈대가 잡혀져있습니다. (왜 Getters는 빠져있는지 모르겠네요?) 개발하시면서 필요한 코드를 이 곳에 추가해 나가면 됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> Vue <span class=\"token keyword\">from</span> <span class=\"token string\">\"vue\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> Vuex <span class=\"token keyword\">from</span> <span class=\"token string\">\"vuex\"</span><span class=\"token punctuation\">;</span>\n\nVue<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span>Vuex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vuex<span class=\"token punctuation\">.</span>Store</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  state<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  mutations<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  actions<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>그리고 <code>main.js</code> 파일에도 Vuex 설정을 위한 2줄의 코드가 추가되었음을 확인할 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"> <span class=\"token keyword\">import</span> Vue <span class=\"token keyword\">from</span> <span class=\"token string\">'vue'</span>\n <span class=\"token keyword\">import</span> App <span class=\"token keyword\">from</span> <span class=\"token string\">'./App.vue'</span>\n <span class=\"token keyword\">import</span> router <span class=\"token keyword\">from</span> <span class=\"token string\">'./router'</span>\n<span class=\"token operator\">+</span><span class=\"token keyword\">import</span> store <span class=\"token keyword\">from</span> <span class=\"token string\">'./store'</span>\n\n Vue<span class=\"token punctuation\">.</span>config<span class=\"token punctuation\">.</span>productionTip <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span>\n\n <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n   router<span class=\"token punctuation\">,</span>\n<span class=\"token operator\">+</span>  store<span class=\"token punctuation\">,</span>\n   <span class=\"token function-variable function\">render</span><span class=\"token operator\">:</span> <span class=\"token parameter\">h</span> <span class=\"token operator\">=></span> <span class=\"token function\">h</span><span class=\"token punctuation\">(</span>App<span class=\"token punctuation\">)</span>\n <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">$mount</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#app'</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h2 id=\"상용-빌드\" style=\"position:relative;\"><a href=\"#%EC%83%81%EC%9A%A9-%EB%B9%8C%EB%93%9C\" aria-label=\"상용 빌드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>상용 빌드</h2>\n<p>마지막으로 <code>npm run build</code> 커맨드를 실행하여 상용 배포를 위한 빌드를 해보겠습니다. 빌드를 실행하면 Vue CLI가 웹팩을 통해 프로젝트의 모든 소스 파일들을 번들링하여 <code>dist</code> 디렉터리에 넣어줍니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">$ npm run build\n\n<span class=\"token operator\">></span> hello<span class=\"token operator\">-</span>vue<span class=\"token operator\">-</span>cli@<span class=\"token number\">0.1</span><span class=\"token number\">.0</span> build <span class=\"token operator\">/</span>work<span class=\"token operator\">/</span>temp<span class=\"token operator\">/</span>hello<span class=\"token operator\">-</span>vue<span class=\"token operator\">-</span>cli\n<span class=\"token operator\">></span> vue<span class=\"token operator\">-</span>cli<span class=\"token operator\">-</span>service build\n\n\n⠦  Building <span class=\"token keyword\">for</span> production<span class=\"token operator\">...</span>\n\n <span class=\"token constant\">DONE</span>  Compiled successfully <span class=\"token keyword\">in</span> <span class=\"token number\">4177</span>ms                                                                      <span class=\"token number\">15</span><span class=\"token operator\">:</span><span class=\"token number\">48</span><span class=\"token operator\">:</span><span class=\"token number\">20</span>\n\n  File                                 Size               Gzipped\n\n  dist<span class=\"token operator\">/</span>js<span class=\"token operator\">/</span>chunk<span class=\"token operator\">-</span>vendors<span class=\"token punctuation\">.</span>a0f0536d<span class=\"token punctuation\">.</span>js    <span class=\"token number\">112.02</span> kb          <span class=\"token number\">38.81</span> kb\n  dist<span class=\"token operator\">/</span>js<span class=\"token operator\">/</span>app<span class=\"token punctuation\">.</span><span class=\"token number\">3</span>f1f8529<span class=\"token punctuation\">.</span>js              <span class=\"token number\">6.10</span> kb            <span class=\"token number\">2.29</span> kb\n  dist<span class=\"token operator\">/</span>js<span class=\"token operator\">/</span>about<span class=\"token punctuation\">.</span><span class=\"token number\">7</span>a29333c<span class=\"token punctuation\">.</span>js            <span class=\"token number\">0.47</span> kb            <span class=\"token number\">0.33</span> kb\n  dist<span class=\"token operator\">/</span>css<span class=\"token operator\">/</span>app<span class=\"token punctuation\">.</span>b675258f<span class=\"token punctuation\">.</span>css            <span class=\"token number\">0.33</span> kb            <span class=\"token number\">0.23</span> kb\n\n  Images and other types <span class=\"token keyword\">of</span> assets omitted<span class=\"token punctuation\">.</span>\n\n <span class=\"token constant\">DONE</span>  Build complete<span class=\"token punctuation\">.</span> The dist directory is ready to be deployed<span class=\"token punctuation\">.</span>\n <span class=\"token constant\">INFO</span>  Check out deployment instructions at https<span class=\"token operator\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>cli<span class=\"token punctuation\">.</span>vuejs<span class=\"token punctuation\">.</span>org<span class=\"token operator\">/</span>guide<span class=\"token operator\">/</span>deployment<span class=\"token punctuation\">.</span>html</code></pre></div>\n<p>이 <code>dist</code> 디렉터리를 보면 <code>index.html</code> 파일들을 포함한 웹팩이 번들링한 파일들을 확인할 수 있습니다. 이 파일들을 상용 배포에 적합하도록 웹팩이 최적화 해놓은 것입니다.</p>\n<h2 id=\"vue-cli-service\" style=\"position:relative;\"><a href=\"#vue-cli-service\" aria-label=\"vue cli service permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Vue CLI Service</h2>\n<p>개발 서버를 구동하거나 상용 빌드를 할 때 NPM 커맨드를 사용할 수 있었던 이유는 Vue CLI가 관련 <code>vue-cli-service</code> 커맨드를 NPM 스크립트로 <code>package.json</code> 파일에 등록해놓았기 때문입니다.</p>\n<ul>\n<li>package.json</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">  <span class=\"token string\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">\"serve\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"vue-cli-service serve\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"build\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"vue-cli-service build\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"lint\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"vue-cli-service lint\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span></code></pre></div>\n<p>NPM 커맨드 대신에 Vue CLI Service 커맨드를 직접 사용하고 싶으시면, <code>npx</code> 커맨드를 사용하시면 됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ npx vue-cli-service serve\n$ npx vue-cli-service build</code></pre></div>\n<h2 id=\"최종-프로젝트-구조\" style=\"position:relative;\"><a href=\"#%EC%B5%9C%EC%A2%85-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EA%B5%AC%EC%A1%B0\" aria-label=\"최종 프로젝트 구조 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>최종 프로젝트 구조</h2>\n<p>여기까지 잘 따라오셨다면 Vue CLI가 다음과 같이 깔끔한 디렉터리 구조를 잡아줬을 것입니다. 이와 같이 Vue CLI를 이용하면 매우 손쉽게 Vue 프로젝트의 기본 골격을 얻을 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">.\n├── .gitignore\n├── README.md\n├── babel.config.js\n├── dist/\n├── node_modules/\n├── package-lock.json\n├── package.json\n├── public\n│   ├── favicon.ico\n│   └── index.html\n└── src\n    ├── App.vue\n    ├── assets\n    │   └── logo.png\n    ├── components\n    │   └── HelloWorld.vue\n    ├── main.js\n    ├── router.js\n    ├── store.js\n    └── views\n        ├── About.vue\n        └── Home.vue</code></pre></div>\n<h1 id=\"마치면서\" style=\"position:relative;\"><a href=\"#%EB%A7%88%EC%B9%98%EB%A9%B4%EC%84%9C\" aria-label=\"마치면서 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>마치면서</h1>\n<p>지금까지 간단하게 Vue CLI 3의 기본적인 사용법에 대해서 살펴보았습니다. 개인적으로 Vue CLI 2도 만족하면서 사용하고 있었는데, Vue CLI 3는 더욱 간결하고 유연해진 느낌입니다. Vue CLI 2를 사용할 때는 똑같은 기능을 위해서 어떤 기술을 사용해야 할지에 대해서 고민했었는데, (예를 들어 webpack을 쓸지 browserify를 쓸지) Vue CLI 3에서는 이런 부분을 모두 추상화 시켜놓아서 단순히 어떤 기능이 필요한지에 대해서만 신경을 쓰면 되서 좋은 것 같습니다. 그리고 그러한 의사결정을 프로젝트 생성할 때 강제받지 않고, 나중에 필요할 때 마다 플러그인 형태로 추가가 가능해서, 처음부터 복잡한 구조의 프로젝트를 만들지 않아도 됩니다. 게다가 Vue CLI 커맨드를 실행하면 NPM 피키지 다운로드까지 해줘서 한층 편해진 것 같습니다.</p>","timeToRead":7,"fields":{"slug":"/vue-cli3/","tags":["JavaScript","자바스크립트","VueJS","Vue CLI","Vue CLI 3"]},"frontmatter":{"title":"Vue CLI 3 사용법","date":"Aug 12, 2018"}},"next":{"fields":{"slug":"/graphql-quick-call/"},"frontmatter":{"title":"GraphQL API 간단하게 호출하기"}}}},"staticQueryHashes":["2168229929","2362167539","3056348342"]}