{"componentChunkName":"component---src-templates-detail-template-jsx","path":"/nestjs-configuration/","result":{"pageContext":{"previous":null,"node":{"html":"<p>NestJS 앱을 개발,테스트, 운영 등 다양한 환경에 배포하려면 어느 환경에 배포하느냐에 따라서 다르게 설정되야하는 값들이 생기기 마련이죠?</p>\n<p>이번 포스팅에서는 NestJS 앱에서 이렇게 환경 별로 달라지는 설정 값들을 어떻게 효과적으로 관리할 수 있는지 알아보겠습니다.</p>\n<h2 id=\"실습-프로젝트-구성\" style=\"position:relative;\"><a href=\"#%EC%8B%A4%EC%8A%B5-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EA%B5%AC%EC%84%B1\" aria-label=\"실습 프로젝트 구성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>실습 프로젝트 구성</h2>\n<p>먼저 간단한 실습을 위해서 NestJS 프로젝트가 하나 필요할 것 같은데요.\n터미널에서 NestJS CLI 도구의 <code>nest new</code> 명령어를 실행하여 새로운 프로젝트를 구성하도록 하겠습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ nest new our-nestjs\n⚡  We will scaffold your app <span class=\"token keyword\">in</span> a few seconds<span class=\"token punctuation\">..</span>\n\n? Which package manager would you ❤️  to use? <span class=\"token punctuation\">(</span>Use arrow keys<span class=\"token punctuation\">)</span>\n❯ <span class=\"token function\">npm</span>\n  <span class=\"token function\">yarn</span>\n  <span class=\"token function\">pnpm</span></code></pre></div>\n<blockquote>\n<p>NestJS CLI를 설치하고 NestJS 프로젝트를 구성하는 기본적인 방법은 <a href=\"/nestjs/\">관련 포스팅</a>을 참고 바랍니다.</p>\n</blockquote>\n<h2 id=\"nestjsconfig-패키지-설치\" style=\"position:relative;\"><a href=\"#nestjsconfig-%ED%8C%A8%ED%82%A4%EC%A7%80-%EC%84%A4%EC%B9%98\" aria-label=\"nestjsconfig 패키지 설치 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>@nestjs/config 패키지 설치</h2>\n<p>우선 NestJS에서 제공하는 <code>@nestjs/config</code>라는 npm 패키지를 실습 프로젝트에 설치하도록 하겠습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">npm</span> i @nestjs/config\nwarn preInstall No repository field\n┌ <span class=\"token punctuation\">[</span><span class=\"token number\">1</span>/4<span class=\"token punctuation\">]</span> 🔍  Resolving dependencies\n└ Completed <span class=\"token keyword\">in</span> <span class=\"token number\">5</span>.874s\n┌ <span class=\"token punctuation\">[</span><span class=\"token number\">2</span>/4<span class=\"token punctuation\">]</span> 🚚  Fetching dependencies\n│ info pruneDeps Excluding <span class=\"token number\">1</span> dependency. For\n│ <span class=\"token function\">more</span> information use <span class=\"token variable\"><span class=\"token variable\">`</span>--verbose<span class=\"token variable\">`</span></span><span class=\"token builtin class-name\">.</span>\n└ Completed <span class=\"token keyword\">in</span> <span class=\"token number\">7</span>.545s\n┌ <span class=\"token punctuation\">[</span><span class=\"token number\">3</span>/4<span class=\"token punctuation\">]</span> 🔗  Linking dependencies\n└ Completed <span class=\"token keyword\">in</span> <span class=\"token number\">4</span>.681s\ninfo security We found <span class=\"token variable\"><span class=\"token variable\">`</span><span class=\"token function\">install</span><span class=\"token variable\">`</span></span> scripts <span class=\"token function\">which</span>\nturbo skips <span class=\"token keyword\">for</span> security reasons. For <span class=\"token function\">more</span>\ninformation see\nhttps://turbo.sh/install-scripts.\n└─ @nestjs/core@9.3.9\n\nsuccess Saved lockfile <span class=\"token string\">\"package-lock.json\"</span>\nsuccess Updated <span class=\"token string\">\"package.json\"</span>\n\nsuccess Install finished <span class=\"token keyword\">in</span> <span class=\"token number\">18</span>.174s</code></pre></div>\n<p>이 패키지를 사용하면 좀 더 쉽게 배포 환경에 따라 달라지는 설정 값을 관리할 수 있습니다.</p>\n<h2 id=\"configmodule-설정\" style=\"position:relative;\"><a href=\"#configmodule-%EC%84%A4%EC%A0%95\" aria-label=\"configmodule 설정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ConfigModule 설정</h2>\n<p>최상위 앱 모듈에서 <code>@nestjs/config</code> 패키지의 <code>ConfigModule</code>를 불러와 설정해줍니다.</p>\n<div class=\"gatsby-code-title\">src/app.module.ts</div>\n<div class=\"gatsby-highlight has-highlighted-lines\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Module <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@nestjs/common\"</span><span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> ConfigModule <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@nestjs/config\"</span><span class=\"token punctuation\">;</span></span><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> AppController <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"./app.controller\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> AppService <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"./app.service\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Module</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  imports<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n<span class=\"gatsby-highlight-code-line\">    ConfigModule<span class=\"token punctuation\">.</span><span class=\"token function\">forRoot</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">      cache<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span></span><span class=\"gatsby-highlight-code-line\">      isGlobal<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></span>  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  controllers<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>AppController<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  providers<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>AppService<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AppModule</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span></code></pre></div>\n<p>위와 같이 설정만 해주면 바로 앱의 어디서든지 <code>.env</code> 파일이나 운영체제 수준에서 설정된 환경 변수에 접근할 수 있는 준비가 끝나는데요.\n참고로 여기서 <code>cache</code> 옵션을 <code>true</code>로 준 이유는 한 번 읽은 환경 변수의 값을 캐싱하여 읽기 속도를 향상하기 위함이고, <code>isGlobal</code> 옵션을 <code>true</code>로 준 이유는 <code>ConfigModule</code>을 다른 모든 모듈에서 불러와야하는 번거로움을 피하기 위함입니다.</p>\n<blockquote>\n<p>일반적으로 자바스크립트에서 환경 변수를 어떻게 다루는지에 대해서 생소하시다면 아래 관련 포스팅을 먼저 읽어보시면 도움이 되실 거에요!</p>\n<ul>\n<li><a href=\"/js-node-process-env/\">Node.js에서 환경 변수 다루기 (process.env)</a></li>\n<li><a href=\"/js-dotenv/\">dotenv로 환경 변수를 .env 파일로 관리하기</a></li>\n</ul>\n</blockquote>\n<h2 id=\"configservice-사용\" style=\"position:relative;\"><a href=\"#configservice-%EC%82%AC%EC%9A%A9\" aria-label=\"configservice 사용 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ConfigService 사용</h2>\n<p>이제 <code>ConfigModule</code> 모듈에서 제공하는 <code>ConfigService</code>를 통해서 환경 변수에 접근해볼까요?</p>\n<p>우선 환경 변수를 읽어야하는 서비스나 컨트롤러 클래스에 <code>ConfigService</code>를 생성자를 통해서 주입해야하는데요.\n그 다음에는 <code>get()</code> 메서드에 인자로 환경 변수 이름을 넘기면 환경 변수의 값이 반환됩니다.</p>\n<div class=\"gatsby-code-title\">src/app.service.ts</div>\n<div class=\"gatsby-highlight has-highlighted-lines\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Injectable <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@nestjs/common\"</span><span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> ConfigService <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@nestjs/config\"</span><span class=\"token punctuation\">;</span></span>\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Injectable</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AppService</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">private</span> configService<span class=\"token operator\">:</span> ConfigService<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span></span>\n  <span class=\"token function\">getHello</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">const</span> host <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>configService<span class=\"token punctuation\">.</span><span class=\"token generic-function\"><span class=\"token function\">get</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span><span class=\"token builtin\">string</span><span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token string\">\"HOST\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">const</span> port <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>configService<span class=\"token punctuation\">.</span><span class=\"token generic-function\"><span class=\"token function\">get</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span><span class=\"token builtin\">number</span><span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token string\">\"PORT\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n      host<span class=\"token punctuation\">,</span>\n      port<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>여기서 <code>get()</code>은 제네릭(generic) 메서드이므로 <code>&#x3C;></code> 괄호 안에 타입을 명시하여 특정 자료형(data type)으로 환경 변수 값을 반환받을 수 있습니다.\n다른 Node.js 앱처럼 <code>process.env</code>로 부터 통해 환경 변수를 읽어왔다면 직접 자료형을 변환을 했어야했을텐데요.\n개발자 입장에서 매우 편리한 부분입니다.</p>\n<p>뿐만 아니라 <code>get()</code> 메서드를 호출할 때 두 번째 인자로 환경 변수가 설정되지 않았을 때 사용할 기본값도 넘길 수도 있는데요.\n이 두 번째 인자의 자료형도 <code>&#x3C;></code> 괄호 안으로 넘겼던 자료형에 일치하기 때문에 버그(bug)를 예방하는데 도움이 됩니다.</p>\n<p>이제 테스트를 위해서 <code>.env</code> 파일에 <code>HOST</code>와 <code>PORT</code> 환경 변수의 값을 저장하겠습니다.</p>\n<div class=\"gatsby-code-title\">.env</div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token assign-left variable\">HOST</span><span class=\"token operator\">=</span>localhost\n<span class=\"token assign-left variable\">PORT</span><span class=\"token operator\">=</span><span class=\"token number\">3001</span></code></pre></div>\n<p>그리고 터미널에서 <code>/</code> 앤드포인트를 호출해보면 다음과 같이 환경 변수의 값을 담은 JSON 전문이 응답될 것입니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">curl</span> http://localhost:3001/status\n<span class=\"token punctuation\">{</span><span class=\"token string\">\"host\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"localhost\"</span>,<span class=\"token string\">\"port\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"3001\"</span><span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"설정-파일로-관리\" style=\"position:relative;\"><a href=\"#%EC%84%A4%EC%A0%95-%ED%8C%8C%EC%9D%BC%EB%A1%9C-%EA%B4%80%EB%A6%AC\" aria-label=\"설정 파일로 관리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>설정 파일로 관리</h2>\n<p>환경 변수에 바로 접근하는 대신에 환경 변수의 값들을 별도의 설정 파일에 저장해두고 관리할 수도 있는데요.</p>\n<p>예를 들어, 애플리케이션(app)과 관련된 설정과 데이터베이스(db)와 관련된 설정을 객체로 반환하는 함수를 작성해보겠습니다.</p>\n<div class=\"gatsby-code-title\">config/configuration.ts</div>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  app<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    host<span class=\"token operator\">:</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">HOST</span> <span class=\"token operator\">||</span> <span class=\"token string\">\"localhost\"</span><span class=\"token punctuation\">,</span>\n    port<span class=\"token operator\">:</span> <span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span>process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">PORT</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token number\">3000</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  db<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    host<span class=\"token operator\">:</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">DB_HOST</span> <span class=\"token operator\">||</span> <span class=\"token string\">\"127.0.0.1\"</span><span class=\"token punctuation\">,</span>\n    port<span class=\"token operator\">:</span> <span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span>process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">DB_PORT</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token number\">5432</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>그리고 최상위 모듈에서 <code>ConfigModule</code>을 불러올 때 <code>load</code> 옵션으로 이 함수를 설정해줍니다.</p>\n<div class=\"gatsby-code-title\">src/app.module.ts</div>\n<div class=\"gatsby-highlight has-highlighted-lines\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Module <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@nestjs/common\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> ConfigModule <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@nestjs/config\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> AppController <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"./app.controller\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> AppService <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"./app.service\"</span><span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">import</span> configuration <span class=\"token keyword\">from</span> <span class=\"token string\">\"./config/configuration\"</span><span class=\"token punctuation\">;</span></span>\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Module</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  imports<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    ConfigModule<span class=\"token punctuation\">.</span><span class=\"token function\">forRoot</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      cache<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n      isGlobal<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n<span class=\"gatsby-highlight-code-line\">      load<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>configuration<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></span>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  controllers<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>AppController<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  providers<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>AppService<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AppModule</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span></code></pre></div>\n<p>그 다음 서비스 클래스에서 동일한 방법으로 <code>ConfigService</code>를 통해 객체에 저장된 환경 변수 값에 접근합니다.</p>\n<div class=\"gatsby-code-title\">src/app.service.ts</div>\n<div class=\"gatsby-highlight has-highlighted-lines\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Injectable <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> ConfigService <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/config'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Injectable</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AppService</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span>\n    <span class=\"token keyword\">private</span> configService<span class=\"token operator\">:</span> ConfigService<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">getHello</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">const</span> host <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>configService<span class=\"token punctuation\">.</span><span class=\"token generic-function\"><span class=\"token function\">get</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span><span class=\"token builtin\">string</span><span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'app.host'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">const</span> port <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>configService<span class=\"token punctuation\">.</span><span class=\"token generic-function\"><span class=\"token function\">get</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span><span class=\"token builtin\">number</span><span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'app.port'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">const</span> dbHost <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>configService<span class=\"token punctuation\">.</span><span class=\"token generic-function\"><span class=\"token function\">get</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span><span class=\"token builtin\">string</span><span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'db.host'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">const</span> dbPort <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>configService<span class=\"token punctuation\">.</span><span class=\"token generic-function\"><span class=\"token function\">get</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span><span class=\"token builtin\">number</span><span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token string\">'db.port'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5432</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n      host<span class=\"token punctuation\">,</span>\n      port<span class=\"token punctuation\">,</span>\n      dbHost<span class=\"token punctuation\">,</span>\n      dbPort<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>이제 테스트를 위해서 <code>.env</code> 파일에 <code>DB_HOST</code>와 <code>DB_PORT</code> 환경 변수의 값을 추가하겠습니다.</p>\n<div class=\"gatsby-code-title\">.env</div>\n<div class=\"gatsby-highlight has-highlighted-lines\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token assign-left variable\">HOST</span><span class=\"token operator\">=</span>localhost\n<span class=\"token assign-left variable\">PORT</span><span class=\"token operator\">=</span><span class=\"token number\">3001</span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token assign-left variable\">DB_HOST</span><span class=\"token operator\">=</span><span class=\"token number\">127.0</span>.0.1</span><span class=\"gatsby-highlight-code-line\"><span class=\"token assign-left variable\">DB_PORT</span><span class=\"token operator\">=</span><span class=\"token number\">5432</span></span></code></pre></div>\n<p>그리고 터미널에서 <code>/</code> 앤드포인트를 호출해보면 다음과 같이 애플리케이션 뿐만 아니라 데이터베이스에 대한 환경 변수의 값을 담은 JSON 전문이 응답될 것입니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ curl http://localhost:3001/status\n{\"host\":\"localhost\",\"port\":3001,\"dbHost\":\"127.0.0.1\",\"dbPort\":5432}</code></pre></div>\n<h2 id=\"configtype-사용\" style=\"position:relative;\"><a href=\"#configtype-%EC%82%AC%EC%9A%A9\" aria-label=\"configtype 사용 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ConfigType 사용</h2>\n<p>이번에는 <code>ConfigModule</code> 모듈에서 제공하는 <code>ConfigType</code>를 통해서 환경 변수에 접근해보려고 하는데요.\n<code>ConfigType</code>을 사용하면 <code>ConfigService</code>보다 좀 더 type-safe한 방식으로 환경 변수를 읽어올 수 있으며, 기능 별로 환경 변수를 분리하여 관리하기가 용이해집니다.</p>\n<p>우선 위에서 작성한 설정 파일을 아래와 같이 두개의 파일로 분리할건데요.\n<code>@nestjs/config</code> 패키지의 <code>registerAs</code> 함수를 사용하여 무엇과 관련된 설정인지를 명시해줍니다.</p>\n<div class=\"gatsby-code-title\">config/app.config.ts</div>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> registerAs <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@nestjs/config\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token function\">registerAs</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"app\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  host<span class=\"token operator\">:</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">HOST</span> <span class=\"token operator\">||</span> <span class=\"token string\">\"localhost\"</span><span class=\"token punctuation\">,</span>\n  port<span class=\"token operator\">:</span> <span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span>process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">PORT</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token number\">3000</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<div class=\"gatsby-code-title\">config/db.config.ts</div>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> registerAs <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@nestjs/config\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token function\">registerAs</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"db\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  host<span class=\"token operator\">:</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">DB_HOST</span> <span class=\"token operator\">||</span> <span class=\"token string\">\"127.0.0.1\"</span><span class=\"token punctuation\">,</span>\n  port<span class=\"token operator\">:</span> <span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span>process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">DB_PORT</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token number\">5432</span><span class=\"token punctuation\">,</span>\n  name<span class=\"token operator\">:</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">DB_NAME</span><span class=\"token punctuation\">,</span>\n  user<span class=\"token operator\">:</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">DB_USER</span><span class=\"token punctuation\">,</span>\n  password<span class=\"token operator\">:</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">DB_PASSWORD</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>그리고 최상위 모듈에서 <code>ConfigModule</code>을 불러올 때 <code>load</code> 옵션으로 <code>appConfig</code>을 설정해줍니다.</p>\n<div class=\"gatsby-code-title\">src/app.module.ts</div>\n<div class=\"gatsby-highlight has-highlighted-lines\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Module <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@nestjs/common\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> ConfigModule <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@nestjs/config\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> AppController <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"./app.controller\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> AppService <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"./app.service\"</span><span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">import</span> appConfig <span class=\"token keyword\">from</span> <span class=\"token string\">\"./config/app.config\"</span><span class=\"token punctuation\">;</span></span>\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Module</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  imports<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    ConfigModule<span class=\"token punctuation\">.</span><span class=\"token function\">forRoot</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      cache<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n      isGlobal<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n<span class=\"gatsby-highlight-code-line\">      load<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>appConfig<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></span>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  controllers<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>AppController<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  providers<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>AppService<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AppModule</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span></code></pre></div>\n<p>그러면 서비스 클래스로 <code>appConfig</code>를 주입할 수 있는데요.\n이 때 자료형을 <code>ConfigType</code>을 사용하여 자료형을 명시해줄 수 있습니다.</p>\n<div class=\"gatsby-code-title\">src/app.service.ts</div>\n<div class=\"gatsby-highlight has-highlighted-lines\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Injectable<span class=\"token punctuation\">,</span> Inject <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> ConfigType <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/config'</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">import</span> appConfig <span class=\"token keyword\">from</span> <span class=\"token string\">'./config/app.config'</span><span class=\"token punctuation\">;</span></span>\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Injectable</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AppService</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Inject</span></span><span class=\"token punctuation\">(</span>appConfig<span class=\"token punctuation\">.</span><span class=\"token constant\">KEY</span><span class=\"token punctuation\">)</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">private</span> config<span class=\"token operator\">:</span> ConfigType<span class=\"token operator\">&lt;</span><span class=\"token keyword\">typeof</span> appConfig<span class=\"token operator\">></span><span class=\"token punctuation\">,</span></span>  <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">getHello</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">const</span> host <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>config<span class=\"token punctuation\">.</span>host<span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">const</span> port <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>config<span class=\"token punctuation\">.</span>port<span class=\"token punctuation\">;</span></span>    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n      host<span class=\"token punctuation\">,</span>\n      port<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>그러면 마치 진짜 객체를 다루는 것처럼 <code>this.config</code> 객체를 통해 <code>host</code>와 <code>port</code> 속성을 읽어올 수 있습니다.\n코드 편집기에서 자동 완성을 해주기 때문에 <code>ConfigService</code>를 사용할 때 대비 오타가 발생할 확률이 현저하게 줄어드는 이점이 있습니다.</p>\n<h2 id=\"기능별-설정-관리\" style=\"position:relative;\"><a href=\"#%EA%B8%B0%EB%8A%A5%EB%B3%84-%EC%84%A4%EC%A0%95-%EA%B4%80%EB%A6%AC\" aria-label=\"기능별 설정 관리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>기능별 설정 관리</h2>\n<p>위에서 설정 파일을 두개로 분리해놓고 두 번째 파일은 아직 사용하지 않았는데요.\n이 데이터베이스 관련 설정은 데이터베이스 모듈에서 사용해보겠습니다.</p>\n<div class=\"gatsby-code-title\">config/db.config.ts</div>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> registerAs <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@nestjs/config\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token function\">registerAs</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"db\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  host<span class=\"token operator\">:</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">DB_HOST</span> <span class=\"token operator\">||</span> <span class=\"token string\">\"127.0.0.1\"</span><span class=\"token punctuation\">,</span>\n  port<span class=\"token operator\">:</span> <span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span>process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">DB_PORT</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token number\">5432</span><span class=\"token punctuation\">,</span>\n  name<span class=\"token operator\">:</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">DB_NAME</span><span class=\"token punctuation\">,</span>\n  user<span class=\"token operator\">:</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">DB_USER</span><span class=\"token punctuation\">,</span>\n  password<span class=\"token operator\">:</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">DB_PASSWORD</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>먼저 터미널에서 NestJS CLI 도구를 통해서 우선 <code>db</code> 모듈과 서비스를 생성하겠습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ nest generate module db <span class=\"token operator\">&amp;&amp;</span> nest generate <span class=\"token function\">service</span> db</code></pre></div>\n<p>그리고 <code>db</code> 모듈에서 <code>ConfigModule</code>의 <code>forRoot()</code> 메서드 대신에 <code>forFeature</code> 메서드를 사용하여 <code>dbConfig</code>를 설정해줍니다.</p>\n<div class=\"gatsby-code-title\">src/db.module.ts</div>\n<div class=\"gatsby-highlight has-highlighted-lines\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Module <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@nestjs/common\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> ConfigModule <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@nestjs/config\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> DbService <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"./db.service\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> DbController <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"./db.controller\"</span><span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">import</span> dbConfig <span class=\"token keyword\">from</span> <span class=\"token string\">\"../config/db.config\"</span><span class=\"token punctuation\">;</span></span>\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Module</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  imports<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>ConfigModule<span class=\"token punctuation\">.</span><span class=\"token function\">forFeature</span><span class=\"token punctuation\">(</span>dbConfig<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></span>  providers<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>DbService<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  controllers<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>DbController<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">DbModule</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span></code></pre></div>\n<p>그러면 <code>db</code> 서비스에서 마찬가지 방식으로 <code>dbConfig</code>를 주입받아서 데이터베이스 관련 설정 값들을 읽어올 수 있습니다.</p>\n<div class=\"gatsby-code-title\">src/db.service.ts</div>\n<div class=\"gatsby-highlight has-highlighted-lines\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Inject<span class=\"token punctuation\">,</span> Injectable <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@nestjs/common\"</span><span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> ConfigType <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@nestjs/config\"</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">import</span> dbConfig <span class=\"token keyword\">from</span> <span class=\"token string\">\"../config/db.config\"</span><span class=\"token punctuation\">;</span></span>\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Injectable</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">DbService</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Inject</span></span><span class=\"token punctuation\">(</span>dbConfig<span class=\"token punctuation\">.</span><span class=\"token constant\">KEY</span><span class=\"token punctuation\">)</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">private</span> config<span class=\"token operator\">:</span> ConfigType<span class=\"token operator\">&lt;</span><span class=\"token keyword\">typeof</span> dbConfig<span class=\"token operator\">></span></span>  <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">getUrl</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> user<span class=\"token punctuation\">,</span> password<span class=\"token punctuation\">,</span> host<span class=\"token punctuation\">,</span> port<span class=\"token punctuation\">,</span> name <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>config<span class=\"token punctuation\">;</span></span>    <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>user<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">:</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>password<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">@</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>host<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">:</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>port<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">/</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>name<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"maints에서-설정-값-읽기\" style=\"position:relative;\"><a href=\"#maints%EC%97%90%EC%84%9C-%EC%84%A4%EC%A0%95-%EA%B0%92-%EC%9D%BD%EA%B8%B0\" aria-label=\"maints에서 설정 값 읽기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>main.ts에서 설정 값 읽기</h2>\n<p>마지막으로 <code>main.ts</code> 파일에서 어떻게 환경 설정 값을 읽어올 수 있는지에 대해서 알아보겠습니다.\n마찬가지로 <code>ConfigService</code>와 <code>ConfigType</code> 모두 사용이 가능한데요.</p>\n<p>예를 들어, 애플리케이션이 리스닝하는 포트를 환경 변수에서 읽어와서 설정하고 싶다면 다음과 같은 두가지 방식을 사용할 수 있겠습니다.</p>\n<div class=\"gatsby-highlight has-highlighted-lines\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> NestFactory <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@nestjs/core\"</span><span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> ConfigService <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@nestjs/config\"</span><span class=\"token punctuation\">;</span></span><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> AppModule <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"./app.module\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">bootstrap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> app <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> NestFactory<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span>AppModule<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">const</span> configService <span class=\"token operator\">=</span> app<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>ConfigService<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">const</span> port <span class=\"token operator\">=</span> configService<span class=\"token punctuation\">.</span><span class=\"token generic-function\"><span class=\"token function\">get</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span><span class=\"token builtin\">number</span><span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token string\">\"PORT\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>  <span class=\"token keyword\">await</span> app<span class=\"token punctuation\">.</span><span class=\"token function\">listen</span><span class=\"token punctuation\">(</span>port<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">bootstrap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<div class=\"gatsby-highlight has-highlighted-lines\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> NestFactory <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@nestjs/core\"</span><span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> ConfigType <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@nestjs/config\"</span><span class=\"token punctuation\">;</span></span><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> AppModule <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"./app.module\"</span><span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">import</span> appConfig <span class=\"token keyword\">from</span> <span class=\"token string\">\"./config/app.config\"</span><span class=\"token punctuation\">;</span></span>\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">bootstrap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> app <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> NestFactory<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span>AppModule<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">const</span> config <span class=\"token operator\">=</span> app<span class=\"token punctuation\">.</span>get <span class=\"token operator\">&lt;</span> ConfigType <span class=\"token operator\">&lt;</span> <span class=\"token keyword\">typeof</span> appConfig <span class=\"token operator\">>></span> appConfig<span class=\"token punctuation\">.</span><span class=\"token constant\">KEY</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">const</span> port <span class=\"token operator\">=</span> config<span class=\"token punctuation\">.</span>port<span class=\"token punctuation\">;</span></span>  <span class=\"token keyword\">await</span> app<span class=\"token punctuation\">.</span><span class=\"token function\">listen</span><span class=\"token punctuation\">(</span>port<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">bootstrap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"전체-코드\" style=\"position:relative;\"><a href=\"#%EC%A0%84%EC%B2%B4-%EC%BD%94%EB%93%9C\" aria-label=\"전체 코드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>전체 코드</h2>\n<p>실습 프로젝트의 코드는 아래에서 직접 확인하고 실행해볼 수 있습니다.</p>\n<iframe src=\"https://stackblitz.com/edit/nestjs-typescript-starter-zsnplw?ctl=1&embed=1&file=src/app.service.ts\"\nstyle=\"width:100%; height:800px; border:0; border-radius: 4px; overflow:hidden;\"></iframe>\n<h2 id=\"마치면서\" style=\"position:relative;\"><a href=\"#%EB%A7%88%EC%B9%98%EB%A9%B4%EC%84%9C\" aria-label=\"마치면서 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>마치면서</h2>\n<p>이상으로 간단한 실습을 통해서 NestJS 앱에서 어떻게 환경 설정을 할 수 있는지에 대해서 알아보았습니다.</p>\n<p>NestJS에 관련된 다른 포스팅은 <a href=\"/?tag=NestJS\">관련 태그</a>를 참고 바라겠습니다.</p>","timeToRead":9,"fields":{"slug":"/nestjs-configuration/","tags":["NestJS","Node.js","framework","JavaScript","TypeScript","config"]},"frontmatter":{"title":"NestJS 앱의 환경 설정","date":"Mar 11, 2023"}},"next":{"fields":{"slug":"/css-long-words/"},"frontmatter":{"title":"부모 요소 밖으로 삐져나오는 긴 영단어 처리법"}}}},"staticQueryHashes":["2168229929","2362167539","3056348342"]}