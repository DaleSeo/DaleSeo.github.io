{"componentChunkName":"component---src-templates-detail-template-jsx","path":"/python-requests/","result":{"pageContext":{"previous":{"fields":{"slug":"/jest-snapshot/"},"frontmatter":{"title":"Jest로 스냅샷(snapshot) 테스트하기"}},"node":{"html":"<p>requests는 파이썬으로 HTTP 호출하는 프로그램을 작성할 때 가장 많이 사용되는 라이브러리입니다.</p>\n<h2 id=\"패키지-설치\" style=\"position:relative;\"><a href=\"#%ED%8C%A8%ED%82%A4%EC%A7%80-%EC%84%A4%EC%B9%98\" aria-label=\"패키지 설치 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>패키지 설치</h2>\n<p>파이썬의 패키지 매니저인 pip를 이용해서 requests 패키지을 설치합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ pip <span class=\"token function\">install</span> requests\nCollecting requests\n  Downloading requests-2.25.0-py2.py3-none-any.whl <span class=\"token punctuation\">(</span><span class=\"token number\">61</span> kB<span class=\"token punctuation\">)</span>\n     <span class=\"token operator\">|</span>████████████████████████████████<span class=\"token operator\">|</span> <span class=\"token number\">61</span> kB <span class=\"token number\">3.1</span> MB/s\nCollecting urllib<span class=\"token operator\"><span class=\"token file-descriptor important\">3</span>&lt;</span><span class=\"token number\">1.27</span>,<span class=\"token operator\">>=</span><span class=\"token number\">1.21</span>.1\n  Downloading urllib3-1.26.2-py2.py3-none-any.whl <span class=\"token punctuation\">(</span><span class=\"token number\">136</span> kB<span class=\"token punctuation\">)</span>\n     <span class=\"token operator\">|</span>████████████████████████████████<span class=\"token operator\">|</span> <span class=\"token number\">136</span> kB <span class=\"token number\">6.1</span> MB/s\nCollecting certifi<span class=\"token operator\">>=</span><span class=\"token number\">2017.4</span>.17\n  Downloading certifi-2020.12.5-py2.py3-none-any.whl <span class=\"token punctuation\">(</span><span class=\"token number\">147</span> kB<span class=\"token punctuation\">)</span>\n     <span class=\"token operator\">|</span>████████████████████████████████<span class=\"token operator\">|</span> <span class=\"token number\">147</span> kB <span class=\"token number\">4.9</span> MB/s\nCollecting idna<span class=\"token operator\">&lt;</span><span class=\"token number\">3</span>,<span class=\"token operator\">>=</span><span class=\"token number\">2.5</span>\n  Downloading idna-2.10-py2.py3-none-any.whl <span class=\"token punctuation\">(</span><span class=\"token number\">58</span> kB<span class=\"token punctuation\">)</span>\n     <span class=\"token operator\">|</span>████████████████████████████████<span class=\"token operator\">|</span> <span class=\"token number\">58</span> kB <span class=\"token number\">8.6</span> MB/s\nCollecting chardet<span class=\"token operator\">&lt;</span><span class=\"token number\">4</span>,<span class=\"token operator\">>=</span><span class=\"token number\">3.0</span>.2\n  Downloading chardet-3.0.4-py2.py3-none-any.whl <span class=\"token punctuation\">(</span><span class=\"token number\">133</span> kB<span class=\"token punctuation\">)</span>\n     <span class=\"token operator\">|</span>████████████████████████████████<span class=\"token operator\">|</span> <span class=\"token number\">133</span> kB <span class=\"token number\">6.7</span> MB/s\nInstalling collected packages: urllib3, certifi, idna, chardet, requests\nSuccessfully installed certifi-2020.12.5 chardet-3.0.4 idna-2.10 requests-2.25.0 urllib3-1.26.2</code></pre></div>\n<p>설치가 잘 되었는지 파이썬 인터프리터를 실행하여 확인해봅니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\">$ python\nPython <span class=\"token number\">3.9</span><span class=\"token number\">.0</span> <span class=\"token punctuation\">(</span>default<span class=\"token punctuation\">,</span> Oct <span class=\"token number\">17</span> <span class=\"token number\">2020</span><span class=\"token punctuation\">,</span> <span class=\"token number\">15</span><span class=\"token punctuation\">:</span><span class=\"token number\">32</span><span class=\"token punctuation\">:</span><span class=\"token number\">58</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">[</span>Clang <span class=\"token number\">11.0</span><span class=\"token number\">.3</span> <span class=\"token punctuation\">(</span>clang<span class=\"token operator\">-</span><span class=\"token number\">1103.0</span><span class=\"token number\">.32</span><span class=\"token number\">.62</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> on darwin\nType <span class=\"token string\">\"help\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"copyright\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"credits\"</span> <span class=\"token keyword\">or</span> <span class=\"token string\">\"license\"</span> <span class=\"token keyword\">for</span> more information<span class=\"token punctuation\">.</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">import</span> requests\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> requests<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">\"https://google.com\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">&lt;</span>Response <span class=\"token punctuation\">[</span><span class=\"token number\">200</span><span class=\"token punctuation\">]</span><span class=\"token operator\">></span></code></pre></div>\n<p>requests 라이브러리로 구글에 접속을 해보니 상태 코드 200이 응답이 되는 것을 볼 수 있습니다. 🎉</p>\n<h2 id=\"api\" style=\"position:relative;\"><a href=\"#api\" aria-label=\"api permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>API</h2>\n<p>requests 라이브러리는 매우 직관적인 API를 제공하는데요.\n어떤 방식(method)의 HTTP 요청을 하느냐에 따라서 해당하는 이름의 함수를 사용하면 됩니다.</p>\n<ul>\n<li>GET 방식: <code>requests.get()</code></li>\n<li>POST 방식: <code>requests.post()</code></li>\n<li>PUT 방식: <code>requests.put()</code></li>\n<li>DELETE 방식: <code>requests.delete()</code></li>\n</ul>\n<h2 id=\"응답-상태\" style=\"position:relative;\"><a href=\"#%EC%9D%91%EB%8B%B5-%EC%83%81%ED%83%9C\" aria-label=\"응답 상태 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>응답 상태</h2>\n<p>온라인 서비스를 HTTP로 호출하면 상태 코드를 응답받게 됩니다.\n일반적으로 이 상태 코드를 보고 요청이 잘 처리되었는지 문제가 있는지 알 수가 있습니다.</p>\n<p>상태 코드는 응답 객체의 <code>status_code</code> 속성을 통해 간단하게 얻을 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> response <span class=\"token operator\">=</span> requests<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">\"https://jsonplaceholder.typicode.com/users/1\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> response<span class=\"token punctuation\">.</span>status_code\n<span class=\"token number\">200</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> response <span class=\"token operator\">=</span> requests<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">\"https://jsonplaceholder.typicode.com/users/100\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> response<span class=\"token punctuation\">.</span>status_code\n<span class=\"token number\">404</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> response <span class=\"token operator\">=</span> requests<span class=\"token punctuation\">.</span>post<span class=\"token punctuation\">(</span><span class=\"token string\">\"https://jsonplaceholder.typicode.com/users\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> response<span class=\"token punctuation\">.</span>status_code\n<span class=\"token number\">201</span></code></pre></div>\n<h2 id=\"응답-전문\" style=\"position:relative;\"><a href=\"#%EC%9D%91%EB%8B%B5-%EC%A0%84%EB%AC%B8\" aria-label=\"응답 전문 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>응답 전문</h2>\n<p>요청이 정상적으로 처리가 된 경우, 응답 전문(response body/payload)에 요청한 데이터가 담겨져 옵니다.\n응답 전문은 크게 3가지 방식으로 읽어올 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> response <span class=\"token operator\">=</span> requests<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">\"https://jsonplaceholder.typicode.com/users/1\"</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>첫 번째는 <code>content</code> 속성을 통해 바이너리 원문을 얻을 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> response<span class=\"token punctuation\">.</span>content\n<span class=\"token string\">b'{\\n  \"id\": 1,\\n  \"name\": \"Leanne Graham\",\\n  \"username\": \"Bret\",\\n  \"email\": \"Sincere@april.biz\",\\n  \"address\": {\\n    \"street\": \"Kulas Light\",\\n    \"suite\": \"Apt. 556\",\\n    \"city\": \"Gwenborough\",\\n    \"zipcode\": \"92998-3874\",\\n    \"geo\": {\\n      \"lat\": \"-37.3159\",\\n      \"lng\": \"81.1496\"\\n    }\\n  },\\n  \"phone\": \"1-770-736-8031 x56442\",\\n  \"website\": \"hildegard.org\",\\n  \"company\": {\\n    \"name\": \"Romaguera-Crona\",\\n    \"catchPhrase\": \"Multi-layered client-server neural-net\",\\n    \"bs\": \"harness real-time e-markets\"\\n  }\\n}'</span></code></pre></div>\n<p>두 번째는 <code>text</code> 속성을 통해 UTF-8로 인코딩된 문자열을 얻을 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> response<span class=\"token punctuation\">.</span>text\n<span class=\"token string\">'{\\n  \"id\": 1,\\n  \"name\": \"Leanne Graham\",\\n  \"username\": \"Bret\",\\n  \"email\": \"Sincere@april.biz\",\\n  \"address\": {\\n    \"street\": \"Kulas Light\",\\n    \"suite\": \"Apt. 556\",\\n    \"city\": \"Gwenborough\",\\n    \"zipcode\": \"92998-3874\",\\n    \"geo\": {\\n      \"lat\": \"-37.3159\",\\n      \"lng\": \"81.1496\"\\n    }\\n  },\\n  \"phone\": \"1-770-736-8031 x56442\",\\n  \"website\": \"hildegard.org\",\\n  \"company\": {\\n    \"name\": \"Romaguera-Crona\",\\n    \"catchPhrase\": \"Multi-layered client-server neural-net\",\\n    \"bs\": \"harness real-time e-markets\"\\n  }\\n}'</span></code></pre></div>\n<p>마지막으로, 응답 데이터가 JSON 포멧이라면 <code>json()</code> 함수를 통해 사전(dictionary) 객체를 얻을 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> response<span class=\"token punctuation\">.</span>json<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span><span class=\"token string\">'id'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'name'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Leanne Graham'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'username'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Bret'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'email'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Sincere@april.biz'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'address'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span><span class=\"token string\">'street'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Kulas Light'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'suite'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Apt. 556'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'city'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Gwenborough'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'zipcode'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'92998-3874'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'geo'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span><span class=\"token string\">'lat'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'-37.3159'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'lng'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'81.1496'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'phone'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'1-770-736-8031 x56442'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'website'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'hildegard.org'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'company'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span><span class=\"token string\">'name'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Romaguera-Crona'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'catchPhrase'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Multi-layered client-server neural-net'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'bs'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'harness real-time e-markets'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"응답-헤더\" style=\"position:relative;\"><a href=\"#%EC%9D%91%EB%8B%B5-%ED%97%A4%EB%8D%94\" aria-label=\"응답 헤더 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>응답 헤더</h2>\n<p>응답에 대한 메타 데이터를 담고 있는 응답 헤더는 <code>headers</code> 속성을 통해 사전의 형태로 얻을 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> response <span class=\"token operator\">=</span> requests<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">\"https://jsonplaceholder.typicode.com/users/1\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> response<span class=\"token punctuation\">.</span>headers\n<span class=\"token punctuation\">{</span><span class=\"token string\">'Date'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Sat, 12 Dec 2020 21:10:49 GMT'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Content-Type'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'application/json; charset=utf-8'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Transfer-Encoding'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'chunked'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Connection'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'keep-alive'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Set-Cookie'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'__cfduid=d92df672c0d58b06b245dd0b8d317e2141607807449; expires=Mon, 11-Jan-21 21:10:49 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'X-Powered-By'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Express'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'X-Ratelimit-Limit'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'1000'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'X-Ratelimit-Remaining'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'999'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'X-Ratelimit-Reset'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'1607798104'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Vary'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Origin, Accept-Encoding'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Access-Control-Allow-Credentials'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'true'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Cache-Control'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'max-age=43200'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Pragma'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'no-cache'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Expires'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'-1'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'X-Content-Type-Options'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'nosniff'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Etag'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'W/\"1fd-+2Y3G3w049iSZtw5t1mzSnunngE\"'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Via'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'1.1 vegur'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'CF-Cache-Status'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'HIT'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Age'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'9352'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'cf-request-id'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'06fa63d142000038668b9a7000000001'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Expect-CT'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'max-age=604800, report-uri=\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\"'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Report-To'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'{\"endpoints\":[{\"url\":\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report?s=Vk2e8Q%2FBK4wOSQc12Cgs0nqvZHpyUb4c0o%2BWCgLzwdqPLQM2HJ5hNHW%2Fmc8fNr73wqQ2LrzEdScfv5bejTYVrXRlUfAyPcGnv1me%2BHlZKc7IKKOi%2BO%2ButGVrdkWS\"}],\"group\":\"cf-nel\",\"max_age\":604800}'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'NEL'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'{\"report_to\":\"cf-nel\",\"max_age\":604800}'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Server'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'cloudflare'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'CF-RAY'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'600a6f2edfe23866-IAD'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Content-Encoding'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'gzip'</span><span class=\"token punctuation\">}</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> response<span class=\"token punctuation\">.</span>headers<span class=\"token punctuation\">[</span><span class=\"token string\">'Content-Type'</span><span class=\"token punctuation\">]</span>\n<span class=\"token string\">'application/json; charset=utf-8'</span></code></pre></div>\n<h2 id=\"요청-쿼리\" style=\"position:relative;\"><a href=\"#%EC%9A%94%EC%B2%AD-%EC%BF%BC%EB%A6%AC\" aria-label=\"요청 쿼리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>요청 쿼리</h2>\n<p>GET 방식으로 HTTP 요청을 할 때는 쿼리 스트링(query string)을 통해 응답받을 데이터를 필터링하는 경우가 많습니다.</p>\n<p><code>params</code> 옵션을 사용하면 쿼리 스크링을 사전의 형태로 넘길 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token comment\"># https://jsonplaceholder.typicode.com/posts?userId=1</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> response <span class=\"token operator\">=</span> requests<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">\"https://jsonplaceholder.typicode.com/posts\"</span><span class=\"token punctuation\">,</span> params<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token string\">\"userId\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"1\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token punctuation\">[</span>post<span class=\"token punctuation\">[</span><span class=\"token string\">\"id\"</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">for</span> post <span class=\"token keyword\">in</span> response<span class=\"token punctuation\">.</span>json<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">]</span></code></pre></div>\n<h2 id=\"요청-전문\" style=\"position:relative;\"><a href=\"#%EC%9A%94%EC%B2%AD-%EC%A0%84%EB%AC%B8\" aria-label=\"요청 전문 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>요청 전문</h2>\n<p>POST나 PUT 방식으로 HTTP 요청을 할 때는 보통 요청 전문(request body/payload)에 데이터를 담아서 보내는데요.</p>\n<p><code>data</code> 옵션을 사용하면, HTML 양식(form) 포멧의 데이터를 전송할 수 있으며, 이 때 <code>Content-Type</code> 요청 헤더는 <code>application/x-www-form-urlencoded</code>로 자동 설정됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> requests<span class=\"token punctuation\">.</span>post<span class=\"token punctuation\">(</span><span class=\"token string\">\"https://jsonplaceholder.typicode.com/users\"</span><span class=\"token punctuation\">,</span> data<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token string\">'name'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Test User'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">&lt;</span>Response <span class=\"token punctuation\">[</span><span class=\"token number\">201</span><span class=\"token punctuation\">]</span><span class=\"token operator\">></span></code></pre></div>\n<p><code>json</code> 옵션을 사용하면, REST API로 JSON 포멧의 데이터를 전송할 수 있으며, 이 때 <code>Content-Type</code> 요청 헤더는 <code>application/json</code>로 자동 설정됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> requests<span class=\"token punctuation\">.</span>post<span class=\"token punctuation\">(</span><span class=\"token string\">\"https://jsonplaceholder.typicode.com/users\"</span><span class=\"token punctuation\">,</span> json<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token string\">'name'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Test User'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">&lt;</span>Response <span class=\"token punctuation\">[</span><span class=\"token number\">201</span><span class=\"token punctuation\">]</span><span class=\"token operator\">></span></code></pre></div>\n<h2 id=\"요청-헤더\" style=\"position:relative;\"><a href=\"#%EC%9A%94%EC%B2%AD-%ED%97%A4%EB%8D%94\" aria-label=\"요청 헤더 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>요청 헤더</h2>\n<p><code>headers</code> 옵션을 사용하면 요청 헤더도 직접 설정할 수 있는데요.\n인증 토큰을 보낼 때 유용하게 사용할 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> requests<span class=\"token punctuation\">.</span>post<span class=\"token punctuation\">(</span><span class=\"token string\">\"https://jsonplaceholder.typicode.com/users\"</span><span class=\"token punctuation\">,</span> headers<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token string\">'Content-Type'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Authorization: Bearer 12345'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">&lt;</span>Response <span class=\"token punctuation\">[</span><span class=\"token number\">201</span><span class=\"token punctuation\">]</span><span class=\"token operator\">></span></code></pre></div>\n<h2 id=\"마치면서\" style=\"position:relative;\"><a href=\"#%EB%A7%88%EC%B9%98%EB%A9%B4%EC%84%9C\" aria-label=\"마치면서 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>마치면서</h2>\n<p>이상으로 파이썬의 requests 라이브러리의 기본적인 사용 방법을 살펴보았습니다.\n파이썬에 내장된 모듈은 아니지만 HTTP 호출을 할 때 거의 표준처럼 사용되는 라이브러리이기 때문에 사용법을 잘 숙지해두시면 큰 도움이 되실 겁니다.</p>","timeToRead":6,"fields":{"slug":"/python-requests/","tags":["Python"]},"frontmatter":{"title":"[파이썬] requests 라이브러리 사용법","date":"Dec 12, 2020"}},"next":{"fields":{"slug":"/react-hooks-use-callback/"},"frontmatter":{"title":"React Hooks: useCallback 사용법"}}}},"staticQueryHashes":["2168229929","2362167539","3056348342"]}