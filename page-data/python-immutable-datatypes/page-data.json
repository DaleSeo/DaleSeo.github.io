{"componentChunkName":"component---src-templates-detail-template-jsx","path":"/python-immutable-datatypes/","result":{"pageContext":{"previous":{"fields":{"slug":"/python-map/"},"frontmatter":{"title":"파이썬의 map 내장 함수 사용법 (feat. List Comprehension)"}},"node":{"html":"<h2 id=\"immutability-불변성\" style=\"position:relative;\"><a href=\"#immutability-%EB%B6%88%EB%B3%80%EC%84%B1\" aria-label=\"immutability 불변성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Immutability (불변성)</h2>\n<p>최근 소프트웨어 개발 트랜드를 보면 프로그래밍 언어에 관계없이 불변(imuutable) 데이터 타입의 사용을 권장하는 추세입니다.\n여러 가지 이유가 있겠지만 메모리의 가격이 계속해서 싸지면서 데이터를 복제하는 대신에 변경하는 것이 더 이상 큰 이점으로 여겨지지 않고 있습니다.\n반면에, 데이터를 변경하는 것에 대한 리스크는 멀티 쓰레드 기반의 동시/병렬 프로세싱 기법이 발달하면서 점점 더 커지고 있습니다.\n즉, 여러 쓰레드가 동시에 데이터를 변경할 경우, 소프트웨어가 어떻게 동작할지 예측이 어렵고 버그가 발생할 확률이 높아집니다.</p>\n<p>파이썬에서는 프로그램 실행 중에 데이터가 변경되는 것을 방지할 수 있도록 tuple, namedtuple, frozenset과 같은 데이터 타입을 제공되고 있습니다.\n이번 포스팅에서는 이러한 불변 데이터 타입을 어떻게 사용하는지 살펴보도록 하겠습니다.</p>\n<h2 id=\"실습-환경-셋업\" style=\"position:relative;\"><a href=\"#%EC%8B%A4%EC%8A%B5-%ED%99%98%EA%B2%BD-%EC%85%8B%EC%97%85\" aria-label=\"실습 환경 셋업 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>실습 환경 셋업</h2>\n<p>간편한 가짜 데이터 생성을 위해서 Faker 라이브러리를 설치합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ pip <span class=\"token function\">install</span> Faker</code></pre></div>\n<p>그 다음, 파이썬 인터프리터에서 Faker 패키지를 임포트하고, Faker 인스턴스를 생성합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\">$ python\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">from</span> faker <span class=\"token keyword\">import</span> Faker\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> fake <span class=\"token operator\">=</span> Faker<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<blockquote>\n<p>Faker에 대한 자세한 설명은 <a href=\"/python-faker\">관련 포스팅</a>를 참고바랍니다.</p>\n</blockquote>\n<h2 id=\"tuple\" style=\"position:relative;\"><a href=\"#tuple\" aria-label=\"tuple permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tuple</h2>\n<p>가장 먼저 살펴볼 불변 데이터 타입인 튜플(tuple) 입니다.\ntuple은 리스트(list)처럼 여러 개의 데이터를 순서대로 저장할 때 사용하는데 데이터 타입입니다.</p>\n<p>가변 데이터 타입인 list는 다음과 같이, 저장하고 있는 데이터를 자유롭게 변경할 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> names <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>names<span class=\"token punctuation\">)</span>\n<span class=\"token operator\">&lt;</span><span class=\"token keyword\">class</span> <span class=\"token string\">'list'</span><span class=\"token operator\">></span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> names<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>fake<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> names<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>fake<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> names<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>fake<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> names\n<span class=\"token punctuation\">[</span><span class=\"token string\">'Mark Espinoza'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Joann Thomas'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Samantha Harper'</span><span class=\"token punctuation\">]</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> names<span class=\"token punctuation\">.</span>pop<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token string\">'Samantha Harper'</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> names<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> fake<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> names\n<span class=\"token punctuation\">[</span><span class=\"token string\">'Mark Espinoza'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Susan Wright'</span><span class=\"token punctuation\">]</span></code></pre></div>\n<p>반면에, 불변 데이터 타입인 tuple은, 저장하고 있는 데이터를 마음대로 변경할 수 없습니다.\n내장 함수인 <code>tuple()</code>을 이용하면 list 객체를 간단하게 tuple 객체로 변환할 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> immutable_names <span class=\"token operator\">=</span> <span class=\"token builtin\">tuple</span><span class=\"token punctuation\">(</span>names<span class=\"token punctuation\">)</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>immutable_names<span class=\"token punctuation\">)</span>\n<span class=\"token operator\">&lt;</span><span class=\"token keyword\">class</span> <span class=\"token string\">'tuple'</span><span class=\"token operator\">></span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> immutable_names\n<span class=\"token punctuation\">(</span><span class=\"token string\">'Mark Espinoza'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Susan Wright'</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> immutable_names<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> fake<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nTraceback <span class=\"token punctuation\">(</span>most recent call last<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  File <span class=\"token string\">\"&lt;input>\"</span><span class=\"token punctuation\">,</span> line <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">in</span> <span class=\"token operator\">&lt;</span>module<span class=\"token operator\">></span>\n    immutable_names<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> fake<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nTypeError<span class=\"token punctuation\">:</span> <span class=\"token string\">'tuple'</span> <span class=\"token builtin\">object</span> does <span class=\"token keyword\">not</span> support item assignment</code></pre></div>\n<p><code>tuple()</code> 내장 함수는 list 뿐만 아니라 순회 가능한(iterable) 모든 타입을 인자로 받을 수 있습니다.\n예를 들어, 다음과 같이 generator 객체를 넘기면 굳이 중간에 list 객체를 거쳐지 않기 때문에 보다 메모리 효율이 좋이지겠죠?</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token builtin\">tuple</span><span class=\"token punctuation\">(</span>fake<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> _ <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">(</span><span class=\"token string\">'Amanda Willis'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Cody Costa'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Patricia Castro'</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h2 id=\"frozenset\" style=\"position:relative;\"><a href=\"#frozenset\" aria-label=\"frozenset permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Frozenset</h2>\n<p>frozenset은 말 그대로 얼어 붙어서 데이터가 고정되어 있는 set을 의미합니다.\nset 데이터 타입은 여러 개의 데이터를 중복없이 저장하기 위해서 사용하는데요.\nfrozenset은 set의 이러한 특성을 그대로 지닌체 데이터를 변경할 수 있는 기능만 제거당한 데이터 타입입니다.</p>\n<p>가변 데이터 타입인 set은 데이터를 자유롭게 추가하거나 삭제할 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> numbers <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">}</span>\n<span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>numbers<span class=\"token punctuation\">)</span>\n<span class=\"token operator\">&lt;</span><span class=\"token keyword\">class</span> <span class=\"token string\">'set'</span><span class=\"token operator\">></span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> numbers<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> numbers<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> numbers\n<span class=\"token punctuation\">{</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">}</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> numbers<span class=\"token punctuation\">.</span>remove<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> numbers\n<span class=\"token punctuation\">{</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">}</span></code></pre></div>\n<p>반면에, 불변 데이터 타입인 frozenset은, 데이터를 함부로 추가하거나 삭제하는 것이 불가능합니다.\n내장 함수인 <code>frozenset()</code>을 이용하면 순회 가능한(iterable) 모든 타입을 frozenset 객체로 변환할 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> immutable_numbers <span class=\"token operator\">=</span> <span class=\"token builtin\">frozenset</span><span class=\"token punctuation\">(</span>numbers<span class=\"token punctuation\">)</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>immutable_numbers<span class=\"token punctuation\">)</span>\n<span class=\"token operator\">&lt;</span><span class=\"token keyword\">class</span> <span class=\"token string\">'frozenset'</span><span class=\"token operator\">></span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> immutable_numbers<span class=\"token punctuation\">.</span>remove<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\nTraceback <span class=\"token punctuation\">(</span>most recent call last<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  File <span class=\"token string\">\"&lt;input>\"</span><span class=\"token punctuation\">,</span> line <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">in</span> <span class=\"token operator\">&lt;</span>module<span class=\"token operator\">></span>\n    immutable_numbers<span class=\"token punctuation\">.</span>remove<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\nAttributeError<span class=\"token punctuation\">:</span> <span class=\"token string\">'frozenset'</span> <span class=\"token builtin\">object</span> has no attribute <span class=\"token string\">'remove'</span></code></pre></div>\n<h2 id=\"namedtuple\" style=\"position:relative;\"><a href=\"#namedtuple\" aria-label=\"namedtuple permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Namedtuple</h2>\n<p>tuple과 list, frozenset과 set이 서로 대응된다면, namedtuple은 사전(dictionary)의 불변 타입에 가깝습니다.\ndictionary는 키와 값의 쌍을 저장할 때 사용하는 해시 테이블(hash table) 자료 구조 기반 데이터 타입입니다.</p>\n<p>가변 자료 구조인 dictionary는 새로운 키에 값을 추가하거나, 기존 키의 값을 변경하거나 삭제하는 것이 가능합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> user <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">:</span> fake<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"mail\"</span><span class=\"token punctuation\">:</span> fake<span class=\"token punctuation\">.</span>email<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">)</span>\n<span class=\"token operator\">&lt;</span><span class=\"token keyword\">class</span> <span class=\"token string\">'dict'</span><span class=\"token operator\">></span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> user<span class=\"token punctuation\">[</span><span class=\"token string\">\"address\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> fake<span class=\"token punctuation\">.</span>address<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> user\n<span class=\"token punctuation\">{</span><span class=\"token string\">'name'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Elizabeth Alexander'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'mail'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'johnsonjames@yahoo.com'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'address'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'9779 White Landing Suite 853\\nRusselltown, DC 51512'</span><span class=\"token punctuation\">}</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> user<span class=\"token punctuation\">[</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> fake<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> user\n<span class=\"token punctuation\">{</span><span class=\"token string\">'name'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Ana Holloway'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'mail'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'johnsonjames@yahoo.com'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'address'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'9779 White Landing Suite 853\\nRusselltown, DC 51512'</span><span class=\"token punctuation\">}</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">del</span> user<span class=\"token punctuation\">[</span><span class=\"token string\">\"address\"</span><span class=\"token punctuation\">]</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> user\n<span class=\"token punctuation\">{</span><span class=\"token string\">'name'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Ana Holloway'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'mail'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'johnsonjames@yahoo.com'</span><span class=\"token punctuation\">}</span></code></pre></div>\n<p>반면에, 불변 데이터 타입인 namedtuple은, 이러한 방식으로 변경하는 것이 허용되지 않습니다.\nnamedtuple은 collections 내장 모듈로 부터 임포트해서 사용합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">from</span> collections <span class=\"token keyword\">import</span> namedtuple</code></pre></div>\n<p><code>namedtuple()</code> 함수는 첫번째 인자로 타입명 두번째 인자로 필드 목록을 받으며, namedtuple 객체를 생성해주는 팩토리 함수를 리턴합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> User <span class=\"token operator\">=</span> namedtuple<span class=\"token punctuation\">(</span><span class=\"token string\">\"User\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"mail\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>dictionary 객체 앞에 <code>**</code>를 붙여서 인자로 넘기면 손쉽게 namedtuple 객체로 변환할 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> immutable_user <span class=\"token operator\">=</span> User<span class=\"token punctuation\">(</span><span class=\"token operator\">**</span>user<span class=\"token punctuation\">)</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>immutable_user<span class=\"token punctuation\">)</span>\n<span class=\"token operator\">&lt;</span><span class=\"token keyword\">class</span> <span class=\"token string\">'__main__.User'</span><span class=\"token operator\">></span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> immutable_user\nUser<span class=\"token punctuation\">(</span>name<span class=\"token operator\">=</span><span class=\"token string\">'Ana Holloway'</span><span class=\"token punctuation\">,</span> mail<span class=\"token operator\">=</span><span class=\"token string\">'johnsonjames@yahoo.com'</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>아예 새로운 namedtuple 객체를 생성하려면, 각 필드의 값을 인자로 넘겨주면 됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> immutable_user <span class=\"token operator\">=</span> User<span class=\"token punctuation\">(</span>name<span class=\"token operator\">=</span>fake<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> mail<span class=\"token operator\">=</span>fake<span class=\"token punctuation\">.</span>email<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> immutable_user\nUser<span class=\"token punctuation\">(</span>name<span class=\"token operator\">=</span><span class=\"token string\">'William Baker'</span><span class=\"token punctuation\">,</span> mail<span class=\"token operator\">=</span><span class=\"token string\">'bentleyjessica@hotmail.com'</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>데이터를 변경하려고 하면, 다음과 같이 예외가 발생하게 됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> immutable_user<span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> fake<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nTraceback <span class=\"token punctuation\">(</span>most recent call last<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  File <span class=\"token string\">\"&lt;input>\"</span><span class=\"token punctuation\">,</span> line <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">in</span> <span class=\"token operator\">&lt;</span>module<span class=\"token operator\">></span>\n    immutable_user<span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> fake<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nAttributeError<span class=\"token punctuation\">:</span> can't <span class=\"token builtin\">set</span> attribute\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> immutable_user<span class=\"token punctuation\">.</span>address <span class=\"token operator\">=</span> fake<span class=\"token punctuation\">.</span>address<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nTraceback <span class=\"token punctuation\">(</span>most recent call last<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  File <span class=\"token string\">\"&lt;input>\"</span><span class=\"token punctuation\">,</span> line <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">in</span> <span class=\"token operator\">&lt;</span>module<span class=\"token operator\">></span>\n    immutable_user<span class=\"token punctuation\">.</span>address <span class=\"token operator\">=</span> fake<span class=\"token punctuation\">.</span>address<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nAttributeError<span class=\"token punctuation\">:</span> <span class=\"token string\">'User'</span> <span class=\"token builtin\">object</span> has no attribute <span class=\"token string\">'address'</span></code></pre></div>\n<h2 id=\"주의-사항\" style=\"position:relative;\"><a href=\"#%EC%A3%BC%EC%9D%98-%EC%82%AC%ED%95%AD\" aria-label=\"주의 사항 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>주의 사항</h2>\n<p>tuple, frozenset, namedtuple와 같은 불변 데이터 타입을 다룰 때 흔히 발생하는 실수가 있습니다.\n바로, 단지 이러한 데이터 타입을 사용한다고 해서 무조건 데이터의 불변성이 보장되는 것은 아니라는 것입니다.</p>\n<p>예를 들어, list 형태의 좌표 여러 개를 담고 있는 다음 tuple은 특정 list를 통째로 변경하는 것은 불가능할지 몰라도…</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> points <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>points<span class=\"token punctuation\">)</span>\n<span class=\"token operator\">&lt;</span><span class=\"token keyword\">class</span> <span class=\"token string\">'tuple'</span><span class=\"token operator\">></span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> points<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span>\nTraceback <span class=\"token punctuation\">(</span>most recent call last<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  File <span class=\"token string\">\"&lt;input>\"</span><span class=\"token punctuation\">,</span> line <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">in</span> <span class=\"token operator\">&lt;</span>module<span class=\"token operator\">></span>\n    points<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span>\nTypeError<span class=\"token punctuation\">:</span> <span class=\"token string\">'tuple'</span> <span class=\"token builtin\">object</span> does <span class=\"token keyword\">not</span> support item assignment</code></pre></div>\n<p>tuple이 담고 있는 각각의 list 자체는 가변 데이터 타입이기 때문에 해당 list 내부의 데이터 변경은 얼마든지 가능합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>points<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">&lt;</span><span class=\"token keyword\">class</span> <span class=\"token string\">'list'</span><span class=\"token operator\">></span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> points<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">10</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> points\n<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>이러한 문제를 해결하려면, 외부의 데이터 타입 뿐만 아니라 내부의 데이터 타입까지도 모두 불변 데이터 타입을 사용해야 합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> immutable_points <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>immutable_points<span class=\"token punctuation\">)</span>\n<span class=\"token operator\">&lt;</span><span class=\"token keyword\">class</span> <span class=\"token string\">'tuple'</span><span class=\"token operator\">></span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>immutable_points<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">&lt;</span><span class=\"token keyword\">class</span> <span class=\"token string\">'tuple'</span><span class=\"token operator\">></span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> immutable_points<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">10</span>\nTraceback <span class=\"token punctuation\">(</span>most recent call last<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  File <span class=\"token string\">\"&lt;input>\"</span><span class=\"token punctuation\">,</span> line <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">in</span> <span class=\"token operator\">&lt;</span>module<span class=\"token operator\">></span>\n    immutable_points<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">10</span>\nTypeError<span class=\"token punctuation\">:</span> <span class=\"token string\">'tuple'</span> <span class=\"token builtin\">object</span> does <span class=\"token keyword\">not</span> support item assignment</code></pre></div>\n<p>마찬가지 원리로 여러 개의 dictionary를 담는 tuple 대신에 여러 개의 namedtuple를 담는 tuple을 사용했을 때 불변성이 높아지게 됩니다.\n제가 불변성 보장이라고 하지 않는 이유는 namedtuple의 각 필드가 불변 데이터 타입이라는 보장이 없기 때문입니다. 😂</p>\n<h2 id=\"마치면서\" style=\"position:relative;\"><a href=\"#%EB%A7%88%EC%B9%98%EB%A9%B4%EC%84%9C\" aria-label=\"마치면서 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>마치면서</h2>\n<p>이상으로 파이썬 내장되어 있는 대표적인 불변 데이터 타입인 tuple, namedtuple, frozenset에 대해서 알아보았습니다.\n유연함이 장점인 프로그래밍 언어인 파이썬에서 완벽한 불변성을 달성하는 것은 이외로 쉽지 않을 수 있는 일입니다.</p>\n<p>사실 이러한 불변 데이터 타입은 함수형 프로그래밍에서 특히 더 빛을 발휘합니다.\n이 부분에 대해서는 추후 기회가 되면 포스팅해보도록 하겠습니다.</p>","timeToRead":5,"fields":{"slug":"/python-immutable-datatypes/","tags":["Python","immutability","불변성","tuple","튜플","frozenset","namedtuple"]},"frontmatter":{"title":"파이썬의 불변(immutable) 자료구조 - tuple, frozenset, namedtuple","date":"Mar 15, 2020"}},"next":{"fields":{"slug":"/python-faker/"},"frontmatter":{"title":"파이썬으로 가짜 데이터 생성하기 - Faker"}}}},"staticQueryHashes":["2168229929","2362167539","3056348342"]}