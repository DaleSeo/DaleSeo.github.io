{
    "componentChunkName": "component---src-templates-detail-template-jsx",
    "path": "/github-actions-triggers/",
    "result": {"pageContext":{"previous":{"fields":{"slug":"/github-rest-api/"},"frontmatter":{"title":"깃허브의 REST API 호출 방법"}},"node":{"html":"<div class=\"gatsby-resp-iframe-wrapper\" style=\"padding-bottom: 56.25%; position: relative; height: 0; overflow: hidden; \" > <iframe src=\"https://www.youtube.com/embed/WGuiQCBuf78?si=kuNiywYT8G_kEE0W\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" allowfullscreen=\"\" style=\" position: absolute; top: 0; left: 0; width: 100%; height: 100%; \"></iframe> </div>\n<p>우리가 코드를 관리하는 GitHub의 저장소(repository)에서는 여러가지 일(event)들이 일어날 수 있죠?\n개발자가 새로운 커밋(commit)을 푸시(push)할 수도 있고, 기여자(contributor)가 PR(pull request)을 제출하거나 사용자가 이슈(issue)를 보고할 수도 있습니다.</p>\n<p>GitHub Actions를 사용하면 이렇게 GitHub 저장소에서 일어나는 다양한 이벤트에 자동으로 반응하도록 워크플로우(workflow)를 구성할 수 있는데요.\n이번 포스팅에서는 GitHub Actions에서 워크플로우를 실행되게 만드는 다양한 방법과 현업 프로젝트에서 많이 사용되는 이벤트를 정리해보겠습니다.</p>\n<h2 id=\"on-키\" style=\"position:relative;\"><a href=\"#on-%ED%82%A4\" aria-label=\"on 키 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>on 키</h2>\n<p>워크플로우 YAML 파일의 <code>on</code> 키는 해당 워크플로우가 언제 실행되는지를 결정하는데요.</p>\n<p>단순하게 하나의 이벤트에 반응하게 하려면 <code>on</code> 키에 이벤트 이름을 넘깁니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"yml\"><pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Our Triggers\n<span class=\"gatsby-highlight-code-line\"><span class=\"token key atrule\">on</span><span class=\"token punctuation\">:</span> push</span></code></pre></div>\n<p>여러 개의 이벤트에 반응하게 하려면 <code>on</code> 키에 이벤트 이름을 배열의 형태로 넘깁니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"yml\"><pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Our Triggers\n<span class=\"gatsby-highlight-code-line\"><span class=\"token key atrule\">on</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>push<span class=\"token punctuation\">,</span> pull_request<span class=\"token punctuation\">]</span></span></code></pre></div>\n<p>좀 더 세밀한 조정을 위해서는 <code>on</code> 키에 이벤트 이름과 추가 옵션을 객체의 형태로 넘길 수도 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"yml\"><pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Our Triggers\n<span class=\"gatsby-highlight-code-line\"><span class=\"token key atrule\">on</span><span class=\"token punctuation\">:</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token key atrule\">push</span><span class=\"token punctuation\">:</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token key atrule\">branches</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>main<span class=\"token punctuation\">]</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token key atrule\">pull_request</span><span class=\"token punctuation\">:</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token key atrule\">types</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>opened<span class=\"token punctuation\">,</span> ready_for_review<span class=\"token punctuation\">]</span></span></code></pre></div>\n<h2 id=\"push-이벤트\" style=\"position:relative;\"><a href=\"#push-%EC%9D%B4%EB%B2%A4%ED%8A%B8\" aria-label=\"push 이벤트 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>push 이벤트</h2>\n<p>GitHub Actions에서 아마도 가장 많이 사용되는 이벤트는 <code>push</code> 이벤트일 텐데요.\n<code>push</code> 이벤트는 새로운 커밋(commit)이 GitHub의 저장소로 유입되었을 때 발생합니다.\n좀 더 쉽게 얘기해서 개발자가 <code>git push</code> 명령어를 사용하였을 때 일어납니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"yml\"><pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Our Push\n<span class=\"gatsby-highlight-code-line\"><span class=\"token key atrule\">on</span><span class=\"token punctuation\">:</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token key atrule\">push</span><span class=\"token punctuation\">:</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token key atrule\">branches</span><span class=\"token punctuation\">:</span></span><span class=\"gatsby-highlight-code-line\">      <span class=\"token punctuation\">-</span> main</span><span class=\"gatsby-highlight-code-line\">      <span class=\"token punctuation\">-</span> <span class=\"token string\">\"releases/**\"</span></span></code></pre></div>\n<p>여러 개발자가 협업하는 프로젝트에서는 위와 같이 <code>main</code>이나 <code>master</code>와 같은 기본 브랜치에서 발생하는 <code>push</code> 이벤트만 처리하도록 워크플로우를 구성하는 경우가 많은데요.\nGitHub 저장소 내의 모든 브랜치를 상대로 <code>push</code> 이벤트를 처리하면 워크플로우가 너무 빈번하게 실행될 것이기 때문입니다.\n보통 개발자들이 사용하는 기능(feature) 브랜치를 상대로는 다음에 다룰 <code>pull_request</code> 이벤트를 통해서 처리하는 경우가 많습니다.</p>\n<p>만약에 특정 경로에서만 발생한 <code>push</code> 이벤트만 처리하고 싶다면 <code>paths</code> 키를 통해서 해당 경로를 명시해줄 수 있습니다.\n예를 들어, 자바스크립트나 타입스크립트 파일이 변경되었을 때만 워크플로우가 반응하도록 설정해볼까요?</p>\n<div class=\"gatsby-highlight\" data-language=\"yml\"><pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Our Push\n<span class=\"gatsby-highlight-code-line\"><span class=\"token key atrule\">on</span><span class=\"token punctuation\">:</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token key atrule\">push</span><span class=\"token punctuation\">:</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token key atrule\">paths</span><span class=\"token punctuation\">:</span></span><span class=\"gatsby-highlight-code-line\">      <span class=\"token punctuation\">-</span> <span class=\"token string\">\"**/*.[jt]s?(x)\"</span></span></code></pre></div>\n<p>반대로 특정 경로에서 일어난 <code>push</code> 이벤트를 무시하고 싶다면 <code>paths-ignore</code> 키에 해당 경로를 지정해줄 수 있습니다.\n예를 들어서, <code>docs</code> 디렉토리에 있는 문서 파일들을 변경되었을 때는 워크플로우가 실행되지 않도록 설정해보겠습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"yml\"><pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Our Push\n<span class=\"gatsby-highlight-code-line\"><span class=\"token key atrule\">on</span><span class=\"token punctuation\">:</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token key atrule\">push</span><span class=\"token punctuation\">:</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token key atrule\">paths-ignore</span><span class=\"token punctuation\">:</span></span><span class=\"gatsby-highlight-code-line\">      <span class=\"token punctuation\">-</span> <span class=\"token string\">\"docs/**\"</span></span></code></pre></div>\n<p><code>push</code> 이벤트는 일반 커밋 뿐만 아니라 태그(tag)가 GitHub의 저장소로 유입되었을 때도 발생합니다.\n예를 들어, 태그 중에서도 이름이 <code>v</code>로 시작하는 태그가 코드 저장소로 유입되었을 때만 반응하도록 워크플로우를 설정할 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"yml\"><pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Our Push\n<span class=\"gatsby-highlight-code-line\"><span class=\"token key atrule\">on</span><span class=\"token punctuation\">:</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token key atrule\">push</span><span class=\"token punctuation\">:</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token key atrule\">tags</span><span class=\"token punctuation\">:</span></span><span class=\"gatsby-highlight-code-line\">      <span class=\"token punctuation\">-</span> v*</span></code></pre></div>\n<h2 id=\"pull_request-이벤트\" style=\"position:relative;\"><a href=\"#pull_request-%EC%9D%B4%EB%B2%A4%ED%8A%B8\" aria-label=\"pull_request 이벤트 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>pull_request 이벤트</h2>\n<p><code>pull_request</code> 이벤트를 사용하면 개발자들이 제출하는 PR(pull request)에 자동으로 반응하는 워크플로우를 구성할 수 있습니다.\n주로 코드 컴파일(compile), 포맷(format), 린트(lint), 테스트(test)와 같은 코드 품질 검사를 수행하는 CI 파이프라인(pipeline)을 만들 때 많이 사용됩니다.\nPR 단계에서 품질 기준에 미치치 못하는 코드가 기본 브랜치로 머지(merge)되는 것을 방지하기 위함이죠.</p>\n<div class=\"gatsby-highlight\" data-language=\"yml\"><pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Our PR\n<span class=\"gatsby-highlight-code-line\"><span class=\"token key atrule\">on</span><span class=\"token punctuation\">:</span> pull_request</span><span class=\"token key atrule\">jobs</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">format</span><span class=\"token punctuation\">:</span>\n    <span class=\"token comment\"># ...</span>\n  <span class=\"token key atrule\">lint</span><span class=\"token punctuation\">:</span>\n    <span class=\"token comment\"># ...</span>\n  <span class=\"token key atrule\">test</span><span class=\"token punctuation\">:</span>\n    <span class=\"token comment\"># ...</span></code></pre></div>\n<p>PR에는 여러가지 세부 활동(activity)들을 발생할 수 있기 때문에 <code>types</code> 키를 통해서 반응 범위를 특정 활동으로 제한할 수 있는데요.\n<code>types</code> 키를 명시하지 않으면 기본적으로 <code>opened</code>, <code>synchronize</code>, <code>reopened</code> 활동에만 워크플로우가 반응하게 됩니다.\n<code>synchronize</code> 활동은 PR 브랜치에 새로운 커밋(commit)이 추가되었거나 최상위(head) 커밋이 변경되었음을 의미합니다.</p>\n<p><code>types</code> 키의 대표적인 활용 사례로 PR이 닫혔을 때 GitHub 저장소에서 관련 브랜츠를 삭제하는 등의 정리 작업을 자동화하고 싶을 때를 들 수 있는데요.\n이 때는 <code>types</code> 키에 <code>closed</code> 활동을 명시하여 PR이 기본 브랜치로 머지되었거나 제출자가 닫았을 때만 해당 워크플로우가 실행되게 할 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"yml\"><pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Our PR\n<span class=\"gatsby-highlight-code-line\"><span class=\"token key atrule\">on</span><span class=\"token punctuation\">:</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token key atrule\">pull_request</span><span class=\"token punctuation\">:</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token key atrule\">types</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>closed<span class=\"token punctuation\">]</span></span></code></pre></div>\n<h2 id=\"issues-이벤트\" style=\"position:relative;\"><a href=\"#issues-%EC%9D%B4%EB%B2%A4%ED%8A%B8\" aria-label=\"issues 이벤트 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>issues 이벤트</h2>\n<p><code>issues</code> 이벤트를 사용하면 GitHub 저장소에 보고되는 이슈(issue)에 자동으로 반응하는 워크플로우를 구성할 수 있는데요.\n기본적으로 하나의 이슈에서 일어나는 모든 활동에 대해서 반응이 일어나게 되며 <code>types</code> 키로 활동을 제한해줄 수 있습니다.</p>\n<p>예를 들어, 누군가가 GitHub 저장소에 이슈를 제출할 시에만 실행하고 싶은 워크플로우에는 <code>types</code> 키를 <code>opened</code>로 지정해주면 됩니다.\n이슈에 자동으로 태그를 붙여주는 등의 자동화를 할 때 유용하겠죠?</p>\n<div class=\"gatsby-highlight\" data-language=\"yml\"><pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Our Issues\n<span class=\"gatsby-highlight-code-line\"><span class=\"token key atrule\">on</span><span class=\"token punctuation\">:</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token key atrule\">issues</span><span class=\"token punctuation\">:</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token key atrule\">types</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>opened<span class=\"token punctuation\">]</span></span></code></pre></div>\n<h2 id=\"issue_comment-이벤트\" style=\"position:relative;\"><a href=\"#issue_comment-%EC%9D%B4%EB%B2%A4%ED%8A%B8\" aria-label=\"issue_comment 이벤트 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>issue_comment 이벤트</h2>\n<p><code>issue_comment</code> 이벤트를 통해서 GitHub 저장소에서 이슈나 PR에 댓글을 달렸을 때 자동으로 반응하는 워크플로우를 구성할 수 있는데요.\n기본적으로 댓글이 생성(created), 삭제(deleted), 수정(edited)되었을 때 반응이 일어나게 되며 <code>types</code> 키로 활동을 제한해줄 수 있습니다.</p>\n<p>예를 들어, 누군가가 댓글을 달거나 수정할 시에만 실행하고 싶은 워크플로우에는 <code>types</code> 키를 <code>created</code>와 <code>edited</code> 지정해주면 됩니다.\n보통 PR에 변경이 발생할 때 마다 매번 실행하기 시간이나 비용적으로 부담스럽거나 작업을 선택적으로 특정 댓글을 달았을 때만 실행되도록 하고 싶을 때 활용하면 좋습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"yml\"><pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Our IC\n<span class=\"gatsby-highlight-code-line\"><span class=\"token key atrule\">on</span><span class=\"token punctuation\">:</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token key atrule\">issue_comment</span><span class=\"token punctuation\">:</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token key atrule\">types</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>created<span class=\"token punctuation\">,</span> edited<span class=\"token punctuation\">]</span></span></code></pre></div>\n<h2 id=\"release-이벤트\" style=\"position:relative;\"><a href=\"#release-%EC%9D%B4%EB%B2%A4%ED%8A%B8\" aria-label=\"release 이벤트 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>release 이벤트</h2>\n<p>GitHub 저장소에서 릴리즈(release)가 생성되었을 때 반응하는 워크플로우를 구성하려면 <code>release</code> 이벤트를 사용합니다.\n기본적으로 하나의 릴리즈에서 일어나는 모든 활동에 대해서 반응이 일어나게 되며 <code>types</code> 키로 활동을 제한해줄 수 있습니다.</p>\n<p>예를 들어, 릴리즈가 발행되었을 때만 실행하고 싶은 워크플로우에는 <code>types</code> 키를 <code>published</code>로 지정해주면 됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"yml\"><pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Our Release\n<span class=\"gatsby-highlight-code-line\"><span class=\"token key atrule\">on</span><span class=\"token punctuation\">:</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token key atrule\">release</span><span class=\"token punctuation\">:</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token key atrule\">types</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>published<span class=\"token punctuation\">]</span></span></code></pre></div>\n<h2 id=\"schedule-이벤트\" style=\"position:relative;\"><a href=\"#schedule-%EC%9D%B4%EB%B2%A4%ED%8A%B8\" aria-label=\"schedule 이벤트 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>schedule 이벤트</h2>\n<p>GitHub Actions를 리눅스의 크론탭(crontab)처럼 일정 주기에 맞춰서 반복적으로 실행할 수 있다는 사실을 아시나요?</p>\n<p><code>on</code> 키를 이벤트 대신에 <code>schedule</code>로 설정해주고 그 하위에 <code>cron</code> 키로 반복 주기를 명시해주면 되는데요.\n크론탭의 <code>분 시 날 월 요일</code> 문법을 따르면 되고 반드시 UTC 시간대로 명시를 해야하며 최소 5분 간격으로 워크플로우를 실행할 수 있습니다.</p>\n<p>예를 들어, 월요일부터 금요일까지 새벽 2시에 어떤 워크플로우를 실행하고 싶다면 다음과 같이 설정해주면 됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"yml\"><pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Our Schedule\n<span class=\"gatsby-highlight-code-line\"><span class=\"token key atrule\">on</span><span class=\"token punctuation\">:</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token key atrule\">schedule</span><span class=\"token punctuation\">:</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">cron</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"0 2 * * 1-5\"</span> <span class=\"token comment\"># 분 시 날 월 요일</span></span></code></pre></div>\n<h2 id=\"workflow_dispatch-이벤트\" style=\"position:relative;\"><a href=\"#workflow_dispatch-%EC%9D%B4%EB%B2%A4%ED%8A%B8\" aria-label=\"workflow_dispatch 이벤트 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>workflow_dispatch 이벤트</h2>\n<p>만약에 워크플로우를 수동으로 실행하고 싶다면 어떻게 해야할까요?\n이때는 <code>on</code> 키를 <code>workflow_dispatch</code>로 설정하면 되는데요.</p>\n<p>이렇게 해주면 GitHub 저장소의 Actions 탭에서 해당 워크플로우를 수동으로 실행할 수 있는 버튼이 활성화됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"yml\"><pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Our Manual\n<span class=\"gatsby-highlight-code-line\"><span class=\"token key atrule\">on</span><span class=\"token punctuation\">:</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token key atrule\">workflow_dispatch</span><span class=\"token punctuation\">:</span></span></code></pre></div>\n<p>이 기능은 테스트하거나 디버깅할 때 상당히 유용하며 특정 이벤트에 자동으로 반응하는 워크플로우에도 비상 시 수동 실행을 위해서 설정해놓는 경우도 있습니다.</p>\n<h2 id=\"workflow_call-이벤트\" style=\"position:relative;\"><a href=\"#workflow_call-%EC%9D%B4%EB%B2%A4%ED%8A%B8\" aria-label=\"workflow_call 이벤트 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>workflow_call 이벤트</h2>\n<p>하나의 워크플로우 내에서 또 다른 워크플로우를 호출할 수 있다는 사실을 알고 계신가요?\n보통 이렇게 다른 워크플로우가 호출하는 워크플로우를 재사용 가능한(reusable) 워크플로우라고 하는데요.</p>\n<p>어떤 워크플로우가 재사용 가능한 워크플로우를 호출하면 <code>workflow_call</code> 이벤트가 발생합니다.\n따라서 재사용 가능한 워크플로우가 이 이벤트 반응할 수 있도록 설정해줘야 합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"yml\"><pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Our Triggers\n<span class=\"gatsby-highlight-code-line\"><span class=\"token key atrule\">on</span><span class=\"token punctuation\">:</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token key atrule\">workflow_call</span><span class=\"token punctuation\">:</span></span></code></pre></div>\n<blockquote>\n<p>재사용 가능한 워크플로우를 사용하는 방법에 대해서는 <a href=\"/github-actions-resable-workflows\">별도 포스팅</a>에서 자세히 다루고 있습니다.</p>\n</blockquote>\n<h2 id=\"실습-코드\" style=\"position:relative;\"><a href=\"#%EC%8B%A4%EC%8A%B5-%EC%BD%94%EB%93%9C\" aria-label=\"실습 코드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>실습 코드</h2>\n<p>본 포스팅에서 작성한 YAML 파일과 워크플로우 실행 결과는 아래 코드 저장소에서 확인하실 수 있습니다.</p>\n<p><a href=\"https://github.com/DaleSchool/github-actions-triggers\">https://github.com/DaleSchool/github-actions-triggers</a></p>\n<h2 id=\"마치면서\" style=\"position:relative;\"><a href=\"#%EB%A7%88%EC%B9%98%EB%A9%B4%EC%84%9C\" aria-label=\"마치면서 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>마치면서</h2>\n<p>지금까지 GitHub Actions에서 워크플로우를 실행할 수 있는 다양한 방법에 대해서 알아보았습니다.\nGitHub 저장소에서 일어나는 다양한 이벤트에 자동으로 반응하게 할 수도 있고, 특정 스케줄에 의해서 주기적으로 실행되게 할 수도 있으며, 워크플로우를 수동으로 실행할 수 있는 옵션이 있다는 것을 배웠습니다.\n너무 많아서 본 포스팅에서는 미처 다루지 못한 이벤트에 대해서는 <a href=\"https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows\">GitHub Actions 공식 문서</a>를 참고 바랍니다.</p>\n<blockquote>\n<p>GitHub Actions 관련 포스팅은 <a href=\"/?tag=GitHubActions\">GitHub Actions 태그</a>를 통해서 쉽게 만나보세요!</p>\n</blockquote>","timeToRead":6,"fields":{"slug":"/github-actions-triggers/","tags":["GitHub","GitHubActions","CI","CD"]},"frontmatter":{"title":"GitHub Actions 워크플로우를 자극하는 주요 이벤트 정리","date":"Jun 18, 2023"}},"next":{"fields":{"slug":"/github-actions-artifacts/"},"frontmatter":{"title":"GitHub Actions의 아티팩트(Artifact)로 파일 올리거나 내려받기"}}}},
    "staticQueryHashes": ["2168229929","2362167539","3056348342"]}