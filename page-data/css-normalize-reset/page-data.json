{
    "componentChunkName": "component---src-templates-detail-template-jsx",
    "path": "/css-normalize-reset/",
    "result": {"pageContext":{"previous":{"fields":{"slug":"/css-where/"},"frontmatter":{"title":"CSS의 :where() 의사 클래스 함수"}},"node":{"html":"<p>이번 포스팅에서는 CSS Reset(리셋)과 CSS Normalize(노멀라이즈)에 대해서 알아보도록 하겠습니다.</p>\n<h2 id=\"css-normalize와-css-reset의-필요성\" style=\"position:relative;\"><a href=\"#css-normalize%EC%99%80-css-reset%EC%9D%98-%ED%95%84%EC%9A%94%EC%84%B1\" aria-label=\"css normalize와 css reset의 필요성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>CSS Normalize와 CSS Reset의 필요성</h2>\n<p>세상에서는 여러 가지 브라우저가 있으며 우리가 만든 웹사이트나 웹 애플리케이션이 이 중 어떤 브라우저에서 돌아갈지는 알 수 없습니다.\n여기서 문제는 소위 User Agent Stylesheet라고 불리는 브라우저 내장 스타일이 브라우저마다 조금씩 다르다는 것 인데요.\n다시 말해서, 우리가 만든 UI가 크롬(Chrome)에서 열었을 때와 사파리(Safari)에서 열었을 때 다르게 보일 수 있다는 말이 되겠지요?</p>\n<p>이러한 문제를 최소화하기 위해서 사용하는 것이 CSS Normalize와 CSS Reset인데요.\n접근 방식은 약간 다르지만 이 두 가지 모두 브라우저에 구애받지 않고 최대한 동일한 사용자 경험을 제공하겠다는 동일한 목표를 가지고 있습니다.</p>\n<h2 id=\"css-normalize\" style=\"position:relative;\"><a href=\"#css-normalize\" aria-label=\"css normalize permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>CSS Normalize</h2>\n<p>아래는 아무런 추가 스타일링 없이 CSS Normalize만 적용된 웹페이지의 전형적인 모습입니다. 어떤가요? 뭐, 예쁘지는 않지만 그런데로 볼 만은 하죠?</p>\n<iframe height=\"600\" style=\"width: 100%;\" scrolling=\"no\" title=\"css-normalize\" src=\"https://codepen.io/daleseo/embed/KKREGxo?default-tab=result\" frameborder=\"no\" loading=\"lazy\" allowtransparency=\"true\" allowfullscreen=\"true\">\n  See the Pen <a href=\"https://codepen.io/daleseo/pen/KKREGxo\">\n  css-normalize</a> by Dale Seo (<a href=\"https://codepen.io/daleseo\">@daleseo</a>)\n  on <a href=\"https://codepen.io\">CodePen</a>.\n</iframe>\n<p>CSS Normalize는 가능한한 브라우저의 내장 스타일을 최대한 건들지 않는 선에서 브라우저 간에 상이한 부분만 스타일을 통일시켜 주는데요.</p>\n<p>애초에 브라우저들이 자체적으로 HTML 요소 별로 스타일을 제공하는 이유가 아무런 스타일이 되지 않는 웹페이지도 사용자가 어렵지 않게 구조와 내용을 파악할 수 있기 도와주기 위함이기 때문에,\nCSS Normalize가 적용한다고 해서 이 부분에서 크게 달라지지는 않습니다.\n단지 차이점은 CSS Normalize가 적용된 웹페이지는 어느 브라우저에서든 일관적인 모습으로 나타나게 됩니다.</p>\n<p>예를 들어, 크롬(Chrome)과 파이어폭스(Firefox), 사파리(Safari) 간에 <code>&#x3C;h1></code> 요소의 크기와 외부 여백을 통일해주고요.</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">h1</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> 2em<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">margin</span><span class=\"token punctuation\">:</span> 0.67em 0<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>인터넷 익스플로러(Internet Explorer) 10에서만 <code>&#x3C;a></code> 요소에 테두리색이 적용되는 문제를 다음과 깉이 해결해줍니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">a</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> transparent<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>여러 가지 오픈 소스 CSS Normalize가 있지만 <a href=\"https://necolas.github.io/normalize.css/\">Normalize.css</a>가 가장 대중적으로 사용되고 있습니다.\n참고로 React 프로젝트에서 Styled Components로 스타일을 하시는 경우에는 <a href=\"https://github.com/sergeysova/styled-normalize\">styled-normalize</a>가 많이 사용되고 있습니다.</p>\n<h2 id=\"css-reset\" style=\"position:relative;\"><a href=\"#css-reset\" aria-label=\"css reset permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>CSS Reset</h2>\n<p>아래는 아무런 추가 스타일링 없이 CSS Reset만 적용된 웹페이지의 전형적인 모습입니다. 위에 CSS Normalize를 적용한 웹페이지와 비교해보면 상당히 알아보기가 어렵죠?</p>\n<iframe height=\"400\" style=\"width: 100%;\" scrolling=\"no\" title=\"css-normalize\" src=\"https://codepen.io/daleseo/embed/Jjvzmeg?default-tab=result\" frameborder=\"no\" loading=\"lazy\" allowtransparency=\"true\" allowfullscreen=\"true\">\n  See the Pen <a href=\"https://codepen.io/daleseo/pen/Jjvzmeg\">\n  css-normalize</a> by Dale Seo (<a href=\"https://codepen.io/daleseo\">@daleseo</a>)\n  on <a href=\"https://codepen.io\">CodePen</a>.\n</iframe>\n<p>CSS Reset은 다음과 같이 상당히 극단적으로 브라우저의 내장 스타일을 초기화시켜주는데요.</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">html,\nbody,\ndiv,\nspan,\napplet,\nobject,\niframe,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\np,\nblockquote,\npre,\na,\nabbr,\nacronym,\naddress,\nbig,\ncite,\ncode,\ndel,\ndfn,\nem,\nimg,\nins,\nkbd,\nq,\ns,\nsamp,\nsmall,\nstrike,\nstrong,\nsub,\nsup,\ntt,\nvar,\nb,\nu,\ni,\ncenter,\ndl,\ndt,\ndd,\nol,\nul,\nli,\nfieldset,\nform,\nlabel,\nlegend,\ntable,\ncaption,\ntbody,\ntfoot,\nthead,\ntr,\nth,\ntd,\narticle,\naside,\ncanvas,\ndetails,\nembed,\nfigure,\nfigcaption,\nfooter,\nheader,\nhgroup,\nmenu,\nnav,\noutput,\nruby,\nsection,\nsummary,\ntime,\nmark,\naudio,\nvideo</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">margin</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">border</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> 100%<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">font</span><span class=\"token punctuation\">:</span> inherit<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">vertical-align</span><span class=\"token punctuation\">:</span> baseline<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>브라우저가 자체적으로 모든 HTML 요소에 적용해준 스타일이 모두 사라져버리기 때문에 CSS Reset을 적용하면 웹페이지가 급격하게 달라지는 것을 볼 수 있습니다.\n다시 말해서, CSS Reset을 적용해놓고 아무런 추가 스타일을 해주지 않으면 해당 웹페이지 상의 모든 HTML 요소가 동일한 모습으로 보이게 될 것입니다.\n따라서, HTML 소스 코드를 직접 보지 않는 이상, 어디가 <code>&#x3C;h1></code>이고, 어디가 <code>&#x3C;p></code> 인지, 유관으로 구분할 수 없게 됩니다.</p>\n<p>오픈 소스 CSS Reset 중에서는 전통적으로 <a href=\"https://meyerweb.com/eric/tools/css/reset/\">Eric Meyer’s CSS Reset</a>이 많이 사용되었는데요.\n최근에는 브라우저 간 호환성이 좋아지면서 불필요한 부분을 줄이고 최신 웹 개발 트랜드를 반영한 <a href=\"https://elad2412.github.io/the-new-css-reset/\">Elad Shechter’s CSS Reset</a>이 인기를 끌고 있습니다.</p>\n<h2 id=\"둘-중에-어떤-것을\" style=\"position:relative;\"><a href=\"#%EB%91%98-%EC%A4%91%EC%97%90-%EC%96%B4%EB%96%A4-%EA%B2%83%EC%9D%84\" aria-label=\"둘 중에 어떤 것을 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>둘 중에 어떤 것을?</h2>\n<p>CSS Normalize와 CSS Reset 중 어떤 것을 사용할지는 해당 프로젝트에서 스타일 전략과 프로젝트의 규모를 고려하여 결정하는데요.</p>\n<p>브라우저의 내장 스타일을 최대한 따르면서 필요한 부분만 스타일을 변경하거나 추가하고 싶을 때는 CSS Normalize가 좋은 선택이 될 것입니다.\n하지만 브라우저의 내장 스타일에 전혀 의존하지 않고 모든 HTML 요소를 하나부터 열까지 직접 스타일하고자 한다면 CSS Reset이 나은 선택이 되겠죠?</p>\n<p>어느 정도 규모가 있는 장기 프로젝트나 회사 전체를 위한 디자인 시스템을 만들 때는 CSS Reset을 선택하는 경향이 있는 것 같고요.\n하지만 일정이 빡빡한 소규모 프로젝트 경우 모든 HTML 요소를 처음부터 스타일 할 여력이 되지 않기 때문에 CSS Normalize가 좋은 대안이 될 것입니다.</p>\n<p>시제품(prototype)을 만들거나 개인 프로젝트에서도 아무래도 CSS Reset 보다는 CSS Normalize를 선택하는 편이 개발 생산성 측면에서 유리하겠죠?</p>\n<h2 id=\"마치면서\" style=\"position:relative;\"><a href=\"#%EB%A7%88%EC%B9%98%EB%A9%B4%EC%84%9C\" aria-label=\"마치면서 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>마치면서</h2>\n<p>이상으로 CSS Normalize와 CSS Reset을 왜 사용하고, 각각 어떤 특징이 있으며, 어떤 것을 선택해야하는지에 대해서 알아보았습니다.</p>\n<p>참고로 반드시 오픈 소스로 외부에 공개된 CSS Normalize와 CSS Reset을 사용하실 필요는 없습니다.\n오히려 자신의 프로젝트의 상황에 최적화된 CSS Normalize 또는 CSS Reset를 직접 만들어 나가는 것도 좋은 전략이 될 수 있겠습니다.</p>","timeToRead":3,"fields":{"slug":"/css-normalize-reset/","tags":["CSS","HTML","normalize","reset","React","StyledComponents"]},"frontmatter":{"title":"CSS Normalize와 CSS Reset","date":"Oct 15, 2022"}},"next":{"fields":{"slug":"/css-toggle-switch/"},"frontmatter":{"title":"HTML과 CSS로 토글 스위치 UI 만들기"}}}},
    "staticQueryHashes": ["2168229929","2362167539","3056348342"]}