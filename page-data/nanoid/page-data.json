{"componentChunkName":"component---src-templates-detail-template-jsx","path":"/nanoid/","result":{"pageContext":{"previous":{"fields":{"slug":"/tailwind/"},"frontmatter":{"title":"Tailwind: 스타일링 시간을 단축하는 CSS 프레임워크"}},"node":{"html":"<p>웹, 모바일, 서버 등 다양한 환경에서 확장이 용이한 애플리케이션을 개발하기 위해서 전통적인 숫자 시퀀스 기반의 식별자 대신 랜덤 문자열 기반의 식별자를 많이 사용하는 추세인데요.</p>\n<p>이번 포스팅에서는 이러한 문자열 기반의 고유 식별자를 빠르게 생성하기 위한 간편한 도구인 NanoID에 대해서 알아보겠습니다.</p>\n<h2 id=\"nanoid란\" style=\"position:relative;\"><a href=\"#nanoid%EB%9E%80\" aria-label=\"nanoid란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>NanoID란?</h2>\n<p>고유 문자열 식별자 생성기(unique string ID generator)기 하면 아마도 UUID(Universally Unique IDentifier)를 떠올리시는 분들이 많을 것 같은데요.\n대표적인 식별자 생성기인 UUID는 오랫동안 사용되어 왔지만 36바이트로 길이가 길고 계산 비용이 큰 편이라서 하드웨어 리소스가 한정적이거나 고성능을 애플리케이션에서는 문제가 될 수 있었습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">a9714803<span class=\"token operator\">-</span>f8d4<span class=\"token operator\">-</span><span class=\"token number\">4660</span><span class=\"token operator\">-</span>b00b<span class=\"token operator\">-</span><span class=\"token number\">87324</span>c2ae7aa <span class=\"token comment\">// UUID</span>\n<span class=\"token number\">8</span>Fn2JgUWUn57lPGk7L2b3 <span class=\"token comment\">// NanoID</span></code></pre></div>\n<p>따라서 자연스럽게 좀 더 작고 빠른 고유 식별자 생성기에 대한 수요가 있었으면 이를 충족시키기 위해 등장한 것이 바로 NanoID입니다.\nNanoID는 21바이트 길이로 UUID보다 적은 비용으로 계산이 가능하기 때문에 최근에는 많은 프로젝트에서는 UUID 대신에 NanoID를 식별자 생성기로 채택하고 있습니다.</p>\n<p>NanoID는 다음과 같이 다양한 언어에서 라이브러리 패키지의 형태로 제공되기 때문에 설치해서 사용할 수 있습니다.</p>\n<ul>\n<li>자바스크립트: <a href=\"https://www.npmjs.com/package/nanoid\">https://www.npmjs.com/package/nanoid</a></li>\n<li>파이썬: <a href=\"https://pypi.org/project/nanoid/\">https://pypi.org/project/nanoid/</a></li>\n<li>자바: <a href=\"https://mvnrepository.com/artifact/com.aventrix.jnanoid/jnanoid\">https://mvnrepository.com/artifact/com.aventrix.jnanoid/jnanoid</a></li>\n</ul>\n<p>본 포스팅에서는 이 중에서 현재 GitHub에서 ⭐을 제일 많은 받은 <a href=\"https://github.com/ai/nanoid\">자바스크립트 용 라이브러리</a>로 실습을 진행해보겠습니다.</p>\n<h2 id=\"nanoid의-기본-사용법\" style=\"position:relative;\"><a href=\"#nanoid%EC%9D%98-%EA%B8%B0%EB%B3%B8-%EC%82%AC%EC%9A%A9%EB%B2%95\" aria-label=\"nanoid의 기본 사용법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>NanoID의 기본 사용법</h2>\n<p>NanoID 패키지의 사용법은 정말 간단한데요.</p>\n<p>우선 npm으로 <code>nanoid</code>라는 패키지를 설치합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">npm</span> <span class=\"token function\">install</span> nanoid</code></pre></div>\n<p>이제 <code>nanoid</code> 패키지로 부터 <code>nanoid()</code>라는 함수를 불러온 후에 호출하기만 하면 됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> nanoid <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"nanoid\"</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// ESM</span>\n<span class=\"token comment\">// const { nanoid } = require(\"nanoid\"); // CommonJS</span>\n\n<span class=\"token keyword\">const</span> id <span class=\"token operator\">=</span> <span class=\"token function\">nanoid</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// '8SbSCpLGGyCaMNXlfb1ZS'</span></code></pre></div>\n<p>이제 <code>nanoid()</code> 함수가 반환하는 랜덤 문자열을 고유 식별자로 사용할 수 있습니다.\n따로 설정할 필요 없이 바로 사용할 수 있어서 진짜 간편하죠? 😁</p>\n<h2 id=\"nanoid의-사용자화\" style=\"position:relative;\"><a href=\"#nanoid%EC%9D%98-%EC%82%AC%EC%9A%A9%EC%9E%90%ED%99%94\" aria-label=\"nanoid의 사용자화 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>NanoID의 사용자화</h2>\n<p>뿐만 아니라 NanoID는 다양한 옵션을 제공하기 때문에 사용자가 자신의 요구에 맞게 설정할 수 있는데요.\n많이 사용되는 옵션만 간단히 다뤄보도록 하겠습니다.</p>\n<p>우선 NanoID는 기본적으로 21자리 길이의 ID를 생성하는데요.\n이 길이를 변경하고 싶다면 <code>nanoid() 함수</code>의 인수로 생성할 ID의 길이를 지정해주면 됩니다.</p>\n<p>예를 들어, 10자로 NanoID이 길이를 줄여보겠습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> id <span class=\"token operator\">=</span> <span class=\"token function\">nanoid</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// EsTMGzIeLH</span></code></pre></div>\n<p>단, 식별자의 길이가 짧아지면 복붙하기 쉬워지고 저장 공간을 아낄 수 있지만 식별자 간에 충돌 위험성이 높아진다는 큰 단점도 있습니다.\n따라서 식별자의 길이를 줄일 때는 이러한 trade-off를 반드시 고려해야겠습니다.</p>\n<p>NanoID는 기본적으로 URL-safe 문자열을 사용하여 ID를 생성하는데요.\n그러나 사용자는 <code>customAlphabet()</code> 함수를 통해서 이를 커스터마이징할 수 있습니다.</p>\n<p>예를 들어, 16진수를 구성하는 알파벳으로만 8자리 NanoID를 생성해보겠습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> customAlphabet <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"nanoid\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> nanoid <span class=\"token operator\">=</span> <span class=\"token function\">customAlphabet</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"0123456789ABCDEF\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> id <span class=\"token operator\">=</span> <span class=\"token function\">nanoid</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// D690B3F7</span></code></pre></div>\n<h2 id=\"마치면서\" style=\"position:relative;\"><a href=\"#%EB%A7%88%EC%B9%98%EB%A9%B4%EC%84%9C\" aria-label=\"마치면서 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>마치면서</h2>\n<p>지금까지 작고 빠른 고유 식별자 생성기인 NanoID를 어떻게 사용하고, 어떤 옵션이 있는지에 대해서 살펴보았습니다.\nNanoID를 다양한 프로젝트에서 잘 활용하셔서 더욱 안전하고 신뢰성 높은 고유 식별자를 생성하실 수 있으셨으면 좋겠습니다.</p>","timeToRead":3,"fields":{"slug":"/nanoid/","tags":["JavaScript","ID","NanoID"]},"frontmatter":{"title":"NanoID: 작고 빠른 고유 식별자 생성기","date":"May 1, 2023"}},"next":{"fields":{"slug":"/python-pip/"},"frontmatter":{"title":"파이썬의 패키지 매니저 pip 사용법"}}}},"staticQueryHashes":["2168229929","2362167539","3056348342"]}