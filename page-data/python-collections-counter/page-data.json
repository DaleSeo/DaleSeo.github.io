{"componentChunkName":"component---src-templates-detail-template-jsx","path":"/python-collections-counter/","result":{"pageContext":{"previous":{"fields":{"slug":"/font-awesome/"},"frontmatter":{"title":"Font Awesome 5 사용법 (ver 4 포함)"}},"node":{"html":"<div class=\"gatsby-resp-iframe-wrapper\" style=\"padding-bottom: 56.25%; position: relative; height: 0; overflow: hidden; \" > <iframe src=\"https://www.youtube.com/embed/XQL_eDvmIZw\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"\" style=\" position: absolute; top: 0; left: 0; width: 100%; height: 100%; \"></iframe> </div>\n<p>이번 포스팅에서는 데이터의 개수를 셀 때 매우 유용한 파이썬의 <code>collections</code> 모듈의 <code>Counter</code> 클래스에 대해서 알아보겠습니다.</p>\n<h2 id=\"counter-기본-사용법\" style=\"position:relative;\"><a href=\"#counter-%EA%B8%B0%EB%B3%B8-%EC%82%AC%EC%9A%A9%EB%B2%95\" aria-label=\"counter 기본 사용법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Counter 기본 사용법</h2>\n<p><code>collections</code> 모듈의 <code>Counter</code> 클래스는 별도 패키지 설치 없이 파이썬만 설치되어 있다면 다음과 같이 임포트해서 바로 사용할 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token keyword\">from</span> collections <span class=\"token keyword\">import</span> Counter</code></pre></div>\n<p><code>Counter</code> 생성자는 여러 형태의 데이터를 인자로 받는데요.\n먼저 중복된 데이터가 저장된 배열을 인자로 넘기면 각 원소가 몇 번씩 나오는지가 저장된 객체를 얻게 됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> Counter<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"hi\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"hey\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"hi\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"hi\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"hello\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"hey\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nCounter<span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token string\">'hi'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'hey'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'hello'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p><code>Counter</code> 생성자에 문자열을 인자로 넘기면 각 문자가 문자열에서 몇 번씩 나타나는지를 알려주는 객체가 반환됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> Counter<span class=\"token punctuation\">(</span><span class=\"token string\">\"hello world\"</span><span class=\"token punctuation\">)</span>\nCounter<span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token string\">'h'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'e'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'l'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'o'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token string\">' '</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'w'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'r'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'d'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h3 id=\"counter를-사전처럼-사용하기\" style=\"position:relative;\"><a href=\"#counter%EB%A5%BC-%EC%82%AC%EC%A0%84%EC%B2%98%EB%9F%BC-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0\" aria-label=\"counter를 사전처럼 사용하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Counter를 사전처럼 사용하기</h3>\n<p><code>collections</code> 모듈의 <code>Counter</code> 클래스는 파이썬의 기본 자료구조인 사전(dictionary)를 확장하고 있기 때문에, 사전에서 제공하는 API를 그대로 다 시용할 수가 있습니다.</p>\n<p>예를 들어, 대괄호를 이용하여 키로 값을 읽을 수 있고요.</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\">counter <span class=\"token operator\">=</span> Counter<span class=\"token punctuation\">(</span><span class=\"token string\">\"hello world\"</span><span class=\"token punctuation\">)</span>\ncounter<span class=\"token punctuation\">[</span><span class=\"token string\">\"o\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> counter<span class=\"token punctuation\">[</span><span class=\"token string\">\"l\"</span><span class=\"token punctuation\">]</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token punctuation\">(</span><span class=\"token number\">2</span>, <span class=\"token number\">3</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>특정 키에 해당하는 값을 갱신할 수도 있고요.</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\">counter<span class=\"token punctuation\">[</span><span class=\"token string\">\"l\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\ncounter<span class=\"token punctuation\">[</span><span class=\"token string\">\"h\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-=</span> <span class=\"token number\">1</span>\ncounter</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">Counter<span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token string\">'h'</span><span class=\"token builtin class-name\">:</span> <span class=\"token number\">0</span>, <span class=\"token string\">'e'</span><span class=\"token builtin class-name\">:</span> <span class=\"token number\">1</span>, <span class=\"token string\">'l'</span><span class=\"token builtin class-name\">:</span> <span class=\"token number\">4</span>, <span class=\"token string\">'o'</span><span class=\"token builtin class-name\">:</span> <span class=\"token number\">2</span>, <span class=\"token string\">' '</span><span class=\"token builtin class-name\">:</span> <span class=\"token number\">1</span>, <span class=\"token string\">'w'</span><span class=\"token builtin class-name\">:</span> <span class=\"token number\">1</span>, <span class=\"token string\">'r'</span><span class=\"token builtin class-name\">:</span> <span class=\"token number\">1</span>, <span class=\"token string\">'d'</span><span class=\"token builtin class-name\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p><code>if</code> 문에서 <code>in</code> 키워드를 이용하여 특정 키가 카운터에 존재하는지를 확인할 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token keyword\">if</span> <span class=\"token string\">\"o\"</span> <span class=\"token keyword\">in</span> counter<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"o in counter\"</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">del</span> counter<span class=\"token punctuation\">[</span><span class=\"token string\">\"o\"</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token string\">\"o\"</span> <span class=\"token keyword\">not</span> <span class=\"token keyword\">in</span> counter<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"o not in counter\"</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">o <span class=\"token keyword\">in</span> counter\no not <span class=\"token keyword\">in</span> counter</code></pre></div>\n<h2 id=\"사전으로-counter-흉내하기\" style=\"position:relative;\"><a href=\"#%EC%82%AC%EC%A0%84%EC%9C%BC%EB%A1%9C-counter-%ED%9D%89%EB%82%B4%ED%95%98%EA%B8%B0\" aria-label=\"사전으로 counter 흉내하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>사전으로 Counter 흉내하기</h2>\n<p>Counter를 사용하는 것은 쉽지만 Counter를 만드는 것은 그만큼 간단하지는 않습니다.</p>\n<p>일반 사전을 이용하여 어떤 단어가 주어졌을 때 단어에 포함된 각 알파벳의 글자 수를 세어주는 함수를 작성해보겠습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token keyword\">def</span> <span class=\"token function\">countLetters</span><span class=\"token punctuation\">(</span>word<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    counter <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">for</span> letter <span class=\"token keyword\">in</span> word<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> letter <span class=\"token keyword\">not</span> <span class=\"token keyword\">in</span> counter<span class=\"token punctuation\">:</span>\n            counter<span class=\"token punctuation\">[</span>letter<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n        counter<span class=\"token punctuation\">[</span>letter<span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n    <span class=\"token keyword\">return</span> counter\n\ncountLetters<span class=\"token punctuation\">(</span><span class=\"token string\">'hello world'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token punctuation\">{</span><span class=\"token string\">'h'</span><span class=\"token builtin class-name\">:</span> <span class=\"token number\">1</span>, <span class=\"token string\">'e'</span><span class=\"token builtin class-name\">:</span> <span class=\"token number\">1</span>, <span class=\"token string\">'l'</span><span class=\"token builtin class-name\">:</span> <span class=\"token number\">3</span>, <span class=\"token string\">'o'</span><span class=\"token builtin class-name\">:</span> <span class=\"token number\">2</span>, <span class=\"token string\">' '</span><span class=\"token builtin class-name\">:</span> <span class=\"token number\">1</span>, <span class=\"token string\">'w'</span><span class=\"token builtin class-name\">:</span> <span class=\"token number\">1</span>, <span class=\"token string\">'r'</span><span class=\"token builtin class-name\">:</span> <span class=\"token number\">1</span>, <span class=\"token string\">'d'</span><span class=\"token builtin class-name\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"가장-흔한-데이터-찾기\" style=\"position:relative;\"><a href=\"#%EA%B0%80%EC%9E%A5-%ED%9D%94%ED%95%9C-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%B0%BE%EA%B8%B0\" aria-label=\"가장 흔한 데이터 찾기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>가장 흔한 데이터 찾기</h2>\n<p>아마도 실전에서 <code>Counter</code>가 자주 쓰이는 경우는 가장 많이 나온 데이터나 가장 적게 나온 데이터를 찾을 때일 것일 텐데요.</p>\n<p><code>Counter</code> 클래스는 이와 같은 작업을 좀 더 쉽게 할 수 있도록, 데이터의 개수가 많은 순으로 정렬된 배열을 리턴하는 <code>most_common()</code>이라는 메서드를 제공하고 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token keyword\">from</span> collections <span class=\"token keyword\">import</span> Counter\n\nCounter<span class=\"token punctuation\">(</span><span class=\"token string\">'hello world'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>most_common<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span><span class=\"token string\">'l'</span>, <span class=\"token number\">3</span><span class=\"token punctuation\">)</span>, <span class=\"token punctuation\">(</span><span class=\"token string\">'o'</span>, <span class=\"token number\">2</span><span class=\"token punctuation\">)</span>, <span class=\"token punctuation\">(</span><span class=\"token string\">'h'</span>, <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>, <span class=\"token punctuation\">(</span><span class=\"token string\">'e'</span>, <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>, <span class=\"token punctuation\">(</span><span class=\"token string\">' '</span>, <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>, <span class=\"token punctuation\">(</span><span class=\"token string\">'w'</span>, <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>, <span class=\"token punctuation\">(</span><span class=\"token string\">'r'</span>, <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>, <span class=\"token punctuation\">(</span><span class=\"token string\">'d'</span>, <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span></code></pre></div>\n<p>이 메서드의 인자로 숫자 <code>K</code>를 넘기면 그 숫자 만큼만 리턴하기 때문에, 가장 개수가 많은 <code>K</code>개의 데이터를 얻을 수도 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token keyword\">from</span> collections <span class=\"token keyword\">import</span> Counter\n\nCounter<span class=\"token punctuation\">(</span><span class=\"token string\">'hello world'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>most_common<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span><span class=\"token string\">'l'</span>, <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span></code></pre></div>\n<p><code>Counter</code>의 <code>most_common()</code> 함수가 없었다면 가장 많은 나온 데이터를 구하려면 다음과 같은 함수를 직접 작성했어야겠죠? 😝</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token keyword\">from</span> collections <span class=\"token keyword\">import</span> Counter\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">find_max</span><span class=\"token punctuation\">(</span>word<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    counter <span class=\"token operator\">=</span> Counter<span class=\"token punctuation\">(</span>word<span class=\"token punctuation\">)</span>\n    max_count <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span>\n    <span class=\"token keyword\">for</span> letter <span class=\"token keyword\">in</span> counter<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> counter<span class=\"token punctuation\">[</span>letter<span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> max_count<span class=\"token punctuation\">:</span>\n            max_count <span class=\"token operator\">=</span> counter<span class=\"token punctuation\">[</span>letter<span class=\"token punctuation\">]</span>\n            max_letter <span class=\"token operator\">=</span> letter\n    <span class=\"token keyword\">return</span> max_letter<span class=\"token punctuation\">,</span> max_count\n\nfind_max<span class=\"token punctuation\">(</span><span class=\"token string\">'hello world'</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token punctuation\">(</span><span class=\"token string\">'l'</span>, <span class=\"token number\">3</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h2 id=\"산술-연산자-활용\" style=\"position:relative;\"><a href=\"#%EC%82%B0%EC%88%A0-%EC%97%B0%EC%82%B0%EC%9E%90-%ED%99%9C%EC%9A%A9\" aria-label=\"산술 연산자 활용 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>산술 연산자 활용</h2>\n<p><code>Counter</code>가 재밌는 부분은 바로 마치 숫자처럼 산술 연산자를 사용할 수 있다는 것인데요.</p>\n<p>예를 들어, 아래와 같이 2개의 카운터 객체가 있을 때,</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\">counter1 <span class=\"token operator\">=</span> Counter<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"A\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"A\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"B\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\ncounter2 <span class=\"token operator\">=</span> Counter<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"A\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"B\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"B\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>이 두 객체를 더할 수도 있고요.</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\">counter1 <span class=\"token operator\">+</span> counter2</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">Counter<span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token string\">'A'</span><span class=\"token builtin class-name\">:</span> <span class=\"token number\">3</span>, <span class=\"token string\">'B'</span><span class=\"token builtin class-name\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>이 두 객체를 뺄 수도 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\">counter1 <span class=\"token operator\">-</span> counter2</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">Counter<span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token string\">'A'</span><span class=\"token builtin class-name\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>뺄샘의 결과로 <code>0</code>이나 음수가 나온 경우에는 최종 카운터 객체에서 제외가 되니 이 부분 주의해서 사용하시길 바랍니다.</p>\n<h2 id=\"전체-코드\" style=\"position:relative;\"><a href=\"#%EC%A0%84%EC%B2%B4-%EC%BD%94%EB%93%9C\" aria-label=\"전체 코드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>전체 코드</h2>\n<p>본 포스팅에서 제가 작성한 코드는 아래에서 직접 확인하고 실행해보실 수 있습니다.</p>\n<p><a href=\"https://dales.link/kcx\">https://dales.link/kcx</a></p>\n<h2 id=\"마치면서\" style=\"position:relative;\"><a href=\"#%EB%A7%88%EC%B9%98%EB%A9%B4%EC%84%9C\" aria-label=\"마치면서 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>마치면서</h2>\n<p>이상으로 파이썬에서 제공하는 <code>collections</code> 모듈의 <code>Counter</code> 클래스에 대해서 간단히 살펴보았습니다.\n좀 더 사용한 세부적인 사항은 아래 파이썬 공식 레퍼런스 문서를 참고 바라겠습니다.</p>\n<ul>\n<li><a href=\"https://docs.python.org/3/library/collections.html#collections.Counter\">https://docs.python.org/3/library/collections.html#collections.Counter</a></li>\n</ul>","timeToRead":4,"fields":{"slug":"/python-collections-counter/","tags":["Python","파이썬","dict","사전","dictionary","collections","Counter"]},"frontmatter":{"title":"파이썬 collections 모듈의 Counter 사용법","date":"Mar 10, 2019"}},"next":{"fields":{"slug":"/jest-fn-spy-on/"},"frontmatter":{"title":"[Jest] jest.fn(), jest.spyOn() 함수 모킹"}}}},"staticQueryHashes":["2168229929","2362167539","3056348342"]}