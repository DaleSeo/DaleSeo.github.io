{"componentChunkName":"component---src-templates-detail-template-jsx","path":"/js-module-import/","result":{"pageContext":{"previous":{"fields":{"slug":"/js-babel6-node/"},"frontmatter":{"title":"Node.js로 ES6 코드 실행하기 (Babel6)"}},"node":{"html":"<p>자바스크립트 개발을 하다보면 <code>require</code>나 <code>import</code> 키워드를 통해 외부 라이브러리를 불러오는 코드를 자주 보게 됩니다. <code>require</code>는 NodeJS에서 사용되고 있는 CommonJS 키워드이고, <code>import</code>는 ES6(ES2015)에서 새롭게 도입된 키워드입니다. 두 개의 키워드 모두 하나의 파일에서 다른 파일의 코드를 불러온다는 동일한 목적을 가지고 있지만, 비슷한듯 약간씩 다른 문법 때문에 종종 우리를 혼란스럽게 하기도 합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> moment <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"moment\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> moment <span class=\"token keyword\">from</span> <span class=\"token string\">\"moment\"</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>예를 들어, 위 2줄의 코드는 기본적으로 MomentJS라는 라이브러리를 불러오는 동일한 작업을 수행하고 있습니다. CommonJS 방식을 따른 첫번째 코드는 Ruby처럼 <code>require</code> 키워드를 사용하여 여타 다른 변수를 할당하듯이 모듈을 불러오는 반면에, ES6 방식을 따른 두번째 코드는 Java나 Python처럼 <code>import</code> 키워드를 사용하여 좀 더 명시적으로 모듈을 불러오고 있습니다.</p>\n<p>이번 포스트에서는 이 중 두 번째 방식인 ES6 기반 모듈 내보내기/불러오기 방법에 대해서 알아보겠습니다. CommonJS 기반 모듈 내보내기/불러오기에 대해서는 아래 포스트를 참고하시기 바랍니다.</p>\n<ul>\n<li><a href=\"/js-module-require\">자바스크립트 CommonJS 모듈 내보내기/불러오기 (require)</a></li>\n</ul>\n<h2 id=\"es6-모듈-시스템의-이점\" style=\"position:relative;\"><a href=\"#es6-%EB%AA%A8%EB%93%88-%EC%8B%9C%EC%8A%A4%ED%85%9C%EC%9D%98-%EC%9D%B4%EC%A0%90\" aria-label=\"es6 모듈 시스템의 이점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ES6 모듈 시스템의 이점</h2>\n<p>아무래도 ES6 모듈 시스템이 좀 더 최신 스팩이다 보니 CommonJS 방식 대비 여러가지 이점들이 있습니다. 우선 <code>import</code>, <code>from</code>, <code>export</code>, <code>default</code>처럼 모듈 관리 전용 키워드를 사용하기 때문에 가독성이 좋습니다. 또한 비동기 방식으로 작동하고 모듈에서 실제로 쓰이는 부분만 불러오기 때문에 성능과 메모리 부분에서 유리한 측면이 있습니다. 뿐만 아니라 앞으로 다룰 Named Parameter와 같이 CommonJS에서는 지원하지 않는 기능들이 있습니다.</p>\n<h2 id=\"복수-객체-내보내기불러오기\" style=\"position:relative;\"><a href=\"#%EB%B3%B5%EC%88%98-%EA%B0%9D%EC%B2%B4-%EB%82%B4%EB%B3%B4%EB%82%B4%EA%B8%B0%EB%B6%88%EB%9F%AC%EC%98%A4%EA%B8%B0\" aria-label=\"복수 객체 내보내기불러오기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>복수 객체 내보내기/불러오기</h2>\n<p>먼저 하나의 자바스크립트 모듈 파일에서 여러 개의 객체를 내보내고 불러오는 방법을 알아보도록 하겠습니다.</p>\n<h3 id=\"내보내기\" style=\"position:relative;\"><a href=\"#%EB%82%B4%EB%B3%B4%EB%82%B4%EA%B8%B0\" aria-label=\"내보내기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>내보내기</h3>\n<p>CommonJS에서는 내보낼 복수 객체들을 <code>exports</code> 변수의 속성으로 할당하는 방식을 썼었는데, ES6에서는 <code>import</code> 키워드의 짝꿍인 <code>export</code> 키워드를 사용해서 명시적으로 선언해줍니다. 이 때 내보내는 변수나 함수의 이름이 그대로 불러낼 때 사용하게 되는 이름이 되기 때문에 이를 Named Exports라고 일겉습니다.</p>\n<p>아래는 미국과 캐나다 달러를 상호 변환해주는 자바스크립트 예제 코드입니다. 이 파일에는 3개의 함수가 있는데 아래 2개의 함수만 다른 파일에서 접근할 수 있도록 내보내기를 하였습니다. 첫번째 방법처럼 선언과 동시에 내보낼 수도 있고, 두번째 방법처럼 선언 후에 별도로 내보낼 수도 있습니다.</p>\n<ul>\n<li>currency-functions.js</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> exchangeRate <span class=\"token operator\">=</span> <span class=\"token number\">0.91</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 안 내보냄</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">roundTwoDecimals</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">amount</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">round</span><span class=\"token punctuation\">(</span>amount <span class=\"token operator\">*</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// 내보내기 1</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">function</span> <span class=\"token function\">canadianToUs</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">canadian</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token function\">roundTwoDecimals</span><span class=\"token punctuation\">(</span>canadian <span class=\"token operator\">*</span> exchangeRate<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// 내보내기 2</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">usToCanadian</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">us</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token function\">roundTwoDecimals</span><span class=\"token punctuation\">(</span>us <span class=\"token operator\">/</span> exchangeRate<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">export</span> <span class=\"token punctuation\">{</span> usToCanadian <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"불러오기\" style=\"position:relative;\"><a href=\"#%EB%B6%88%EB%9F%AC%EC%98%A4%EA%B8%B0\" aria-label=\"불러오기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>불러오기</h3>\n<p>여러 객체(Named Exports)를 불러올 때는 ES6의 Destructuring 문법을 사용해서 필요한 객체만 선택적으로 전역에서 사용하거나, 모든 객체에 별명을 붙이고 그 별명을 통해서 접근할 수도 있습니다.</p>\n<ul>\n<li>test-currency-functions.js</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// Destructuring</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> canadianToUs <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"./currency-functions\"</span><span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"50 Canadian dollars equals this amount of US dollars:\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">canadianToUs</span><span class=\"token punctuation\">(</span><span class=\"token number\">50</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Alias</span>\n<span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">as</span> currency <span class=\"token keyword\">from</span> <span class=\"token string\">\"./currency-functions\"</span><span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"30 US dollars equals this amount of Canadian dollars:\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>currency<span class=\"token punctuation\">.</span><span class=\"token function\">usToCanadian</span><span class=\"token punctuation\">(</span><span class=\"token number\">30</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ul>\n<li>실행 결과</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token number\">50</span> Canadian dollars equals this amount of US dollars:\n<span class=\"token number\">45.5</span>\n<span class=\"token number\">30</span> US dollars equals this amount of Canadian dollars:\n<span class=\"token number\">32.97</span></code></pre></div>\n<h2 id=\"단일-객체-내보내기불러오기\" style=\"position:relative;\"><a href=\"#%EB%8B%A8%EC%9D%BC-%EA%B0%9D%EC%B2%B4-%EB%82%B4%EB%B3%B4%EB%82%B4%EA%B8%B0%EB%B6%88%EB%9F%AC%EC%98%A4%EA%B8%B0\" aria-label=\"단일 객체 내보내기불러오기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>단일 객체 내보내기/불러오기</h2>\n<p>다음으로 하나의 자바스크립트 모듈 파일에서 단 하나의 객체를 내보내고 불러오는 방법을 알아보겠습니다.</p>\n<h2 id=\"내보내기-1\" style=\"position:relative;\"><a href=\"#%EB%82%B4%EB%B3%B4%EB%82%B4%EA%B8%B0-1\" aria-label=\"내보내기 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>내보내기</h2>\n<p>CommonJS에서는 내보낼 단일 객체를 <code>module.exports</code> 변수에 할당하는 방식을 썼었는데, ES6에서는 그 대신 <code>export default</code> 키워드를 사용해서 명시적으로 선언해줍니다. 하나의 모듈에서 하나의 객체만 내보내기 때문에 이를 Default Export라고 일겉습니다.</p>\n<p>이번에는 예제 코드를 살짝 수정하여 아래 두 개 함수를 객체로 묶어서 내보내기를 하였습니다. (객체 내에서 첫 번째 함수는 ES6 문법을 사용하였습니다) 이름이 필요없기 때문에 별도로 변수 할당 없이 바로 객체를 내보내기를 할 수 있습니다. 내보낼 때 어떤 이름도 지정하기 않기 때문에 불러올 때도 아무 이름이나 사용할 수 있습니다.</p>\n<ul>\n<li>currency-object.js</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> exchangeRate <span class=\"token operator\">=</span> <span class=\"token number\">0.91</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 안 내보냄</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">roundTwoDecimals</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">amount</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">round</span><span class=\"token punctuation\">(</span>amount <span class=\"token operator\">*</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// 내보내기</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">canadianToUs</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">canadian</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">roundTwoDecimals</span><span class=\"token punctuation\">(</span>canadian <span class=\"token operator\">*</span> exchangeRate<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n  <span class=\"token function-variable function\">usToCanadian</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">us</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">roundTwoDecimals</span><span class=\"token punctuation\">(</span>us <span class=\"token operator\">/</span> exchangeRate<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>굳이 꼭 변수에 할당하고 내보내기를 하고 싶다면 다음과 같이 작성할 수도 있습니다. 하지만 불러내는 쪽에서 반드시 이 <code>obj</code>라는 변수 이름을 사용하도록 강제되지는 않습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">canadianToUs</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">canadian</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">roundTwoDecimals</span><span class=\"token punctuation\">(</span>canadian <span class=\"token operator\">*</span> exchangeRate<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\nobj<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">usToCanadian</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">us</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token function\">roundTwoDecimals</span><span class=\"token punctuation\">(</span>us <span class=\"token operator\">/</span> exchangeRate<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> obj<span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"불러오기-1\" style=\"position:relative;\"><a href=\"#%EB%B6%88%EB%9F%AC%EC%98%A4%EA%B8%B0-1\" aria-label=\"불러오기 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>불러오기</h2>\n<p>하나의 객체(Default Export)를 불러올 때는 간단하게 <code>import</code> 키워드를 사용해서 아무 이름이나 원하는 이름을 주고 해당 객체를 통해 속성에 접근하면 됩니다.</p>\n<ul>\n<li>test-currency-object.js</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> currency <span class=\"token keyword\">from</span> <span class=\"token string\">\"./currency-object\"</span><span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"50 Canadian dollars equals this amount of US dollars:\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>currency<span class=\"token punctuation\">.</span><span class=\"token function\">canadianToUs</span><span class=\"token punctuation\">(</span><span class=\"token number\">50</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"30 US dollars equals this amount of Canadian dollars:\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>currency<span class=\"token punctuation\">.</span><span class=\"token function\">usToCanadian</span><span class=\"token punctuation\">(</span><span class=\"token number\">30</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ul>\n<li>실행 결과</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token number\">50</span> Canadian dollars equals this amount of US dollars:\n<span class=\"token number\">45.5</span>\n<span class=\"token number\">30</span> US dollars equals this amount of Canadian dollars:\n<span class=\"token number\">32.97</span></code></pre></div>\n<h2 id=\"마치면서\" style=\"position:relative;\"><a href=\"#%EB%A7%88%EC%B9%98%EB%A9%B4%EC%84%9C\" aria-label=\"마치면서 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>마치면서</h2>\n<p>이상으로 ES6에서 모듈을 내보내고 불러내는 두 가지 방법인 Named Exports와 Default Export에 대해서 알아보았습니다.</p>\n<p>한 가지 주의하실 점은 Babel 없이 순수하게 Node.js 최신 버전으로 ES 모듈을 사용하고 계시다면, <code>import</code>를 사용할 때 <code>.js</code> 확장자를 붙여주서야 합니다.\n자세한 내용은 아래 관련 포스트를 참고 바라겠습니다.</p>\n<ul>\n<li><a href=\"https://www.daleseo.com/js-node-es-modules/\">Node.js에서 ES 모듈(import/export) 사용하기</a></li>\n<li><a href=\"https://www.daleseo.com/js-babel-node/\">Node.js로 ES6 코드 실행하기 (Babel)</a></li>\n</ul>","timeToRead":5,"fields":{"slug":"/js-module-import/","tags":["JavaScript","자바스크립트","ES6","import","export","export default"]},"frontmatter":{"title":"자바스크립트 ES6 모듈 내보내기/불러오기 (import)","date":"Apr 7, 2018"}},"next":{"fields":{"slug":"/js-module-require/"},"frontmatter":{"title":"자바스크립트 CommonJS 모듈 내보내기/불러오기 (require)"}}}},"staticQueryHashes":["2362167539","3000541721","3056348342"]}