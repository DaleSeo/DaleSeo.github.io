{"componentChunkName":"component---src-templates-detail-template-jsx","path":"/python-venv/","result":{"pageContext":{"previous":{"fields":{"slug":"/python-black/"},"frontmatter":{"title":"Black으로 파이썬 코드 스타일 통일하기"}},"node":{"html":"<h2 id=\"파이썬-가상-환경이란\" style=\"position:relative;\"><a href=\"#%ED%8C%8C%EC%9D%B4%EC%8D%AC-%EA%B0%80%EC%83%81-%ED%99%98%EA%B2%BD%EC%9D%B4%EB%9E%80\" aria-label=\"파이썬 가상 환경이란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>파이썬 가상 환경이란?</h2>\n<p>파이썬에서 가상 환경(virtual environment)은 하나의 PC에서 프로젝트 별로 독룁된 파이썬 실행 환경(runtime/interpreter)을 사용할 수 있도록 해줍니다.\n가상 환경을 사용하지 않으면 PC 내의 모든 프로젝트에서 운영체제에 설치된 하나의 파이썬 런타임을 사용하게 되고 동일한 위치에 외부 패키지를 설치하고 서로 공유하게 됩니다.\n이럴 경우, 하나의 프로젝트에서 설치한 패키지의 버전이 다른 프로젝트에서 설치한 동일 패키지의 다른 버전과 충동을 일으킬 소지가 생기기 때문에, 프로젝트 별로 독립된 가상 환경을 구성하여 사용하는 것이 권장됩니다.</p>\n<p>파이썬에서 외부 패키지를 설치할 때는 일반적으로 <code>pip</code>이라는 패키지 매니저를 사용하는데, 기본적으로 운영체제에 파이썬이 설치된 위치의 <code>site-packages</code> 디렉터리에 안에 설치됩니다.\n노드의 <code>npm</code>이나 자바의 <code>maven</code>과 같은 패키지 매니저가 프로젝트 별 패키지 설치를 지원하는 반면에, 아직 파이썬의 <code>pip</code>는 시스템 전역으로만 패키지를 설치할 수 있습니다.\n파이썬의 가상 환경을 이용하면 프로젝트 별로 따로 패키지를 설치하고, 다른 프로젝트로 부터 격리시킬 수 있기 때문에 시스템 전역 패키지 설치로 인한 불필요한 이슈를 방지할 수 있습니다.</p>\n<h2 id=\"가상-환경-생성\" style=\"position:relative;\"><a href=\"#%EA%B0%80%EC%83%81-%ED%99%98%EA%B2%BD-%EC%83%9D%EC%84%B1\" aria-label=\"가상 환경 생성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>가상 환경 생성</h2>\n<p>파이썬 2에서는 <a href=\"https://virtualenv.pypa.io\"><code>virtualenv</code></a>라는 외부 패키지를 사용해서 가상 환경을 구성했었는데, 파이썬 3.3 부터는 <a href=\"https://docs.python.org/3/library/venv.html\"><code>venv</code></a> 모듈이 내장되기 때문에 별도 패키지 설치없이 파이썬만 설치되어 있으면 바로 가상 환경 구성이 가능하게 되었습니다.</p>\n<p>가상 환경을 구성할 프로젝트 디렉터리에 들어가서 아래와 같이 커맨드를 날리면 <code>.venv</code>라는 디렉터리가 생길 것입니다.\n여기서 반드시 디렉터리 이름을 <code>.venv</code>로 할 필요는 없지만, 대부분의 파이썬 프로젝트들이 따르는 관행이므로 지켜주시는 게 좋습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token builtin class-name\">cd</span> <span class=\"token operator\">&lt;</span>프로젝트 디렉터리<span class=\"token operator\">></span>\n$ python -m venv .venv\n$ <span class=\"token function\">ls</span>\n.venv</code></pre></div>\n<p>가상 환경을 굳이 Git과 같은 소스 버전 관리 시스템에 올릴 필요는 없으므로 <code>.venv</code> 디렉터리를 <code>.gitignore</code> 파일에 추가해줍니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ echo &#39;.venv&#39; &gt;&gt; .gitignore</code></pre></div>\n<h2 id=\"가상-환경-활성화\" style=\"position:relative;\"><a href=\"#%EA%B0%80%EC%83%81-%ED%99%98%EA%B2%BD-%ED%99%9C%EC%84%B1%ED%99%94\" aria-label=\"가상 환경 활성화 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>가상 환경 활성화</h2>\n<p>가상 환경을 활성화 하기 위해서 <code>bin/activate</code>를 실행하면 , 쉘 프롬프트 앞에 <code>(.venv)</code>라고 붙으면서 가상 환경이 활성화 될 것입니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token builtin class-name\">.</span> .venv/bin/activate\n<span class=\"token punctuation\">(</span>.venv<span class=\"token punctuation\">)</span> $</code></pre></div>\n<p><code>.</code> 커맨드가 안 먹는 분들은 <code>source</code> 커맨드를 쓰셔도 됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token builtin class-name\">source</span> .venv/bin/activate\n<span class=\"token punctuation\">(</span>.venv<span class=\"token punctuation\">)</span> $</code></pre></div>\n<p>이제 <code>which</code> 커맨드를 통해 어떤 파이썬 인터프리터가 사용되는지 확인보겠습니다.\n<code>venv</code> 디렉터리 안에 있는 <code>bin/python</code>이 운영체제에 기본 설치된 파이썬 대신에 사용됨을 알 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token punctuation\">(</span>.venv<span class=\"token punctuation\">)</span> $ <span class=\"token function\">which</span> python\n/Users/dale/temp/my-project/.venv/bin/python</code></pre></div>\n<p>가상 환경에서 제공하는 파이썬의 버전은 다음과 같이 확인할 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token punctuation\">(</span>.venv<span class=\"token punctuation\">)</span> $ python -V\nPython <span class=\"token number\">3.7</span>.6</code></pre></div>\n<h2 id=\"가상-환경에-패키지-설치\" style=\"position:relative;\"><a href=\"#%EA%B0%80%EC%83%81-%ED%99%98%EA%B2%BD%EC%97%90-%ED%8C%A8%ED%82%A4%EC%A7%80-%EC%84%A4%EC%B9%98\" aria-label=\"가상 환경에 패키지 설치 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>가상 환경에 패키지 설치</h2>\n<p>가상 환경이 활성화된 상태에서 패키지를 설치하면, <code>.venv</code> 디렉터리 내부에 해당 패키지가 설치됩니다.\n즉, 운영체제에 설치되어 있는 파이썬이나 동일 PC내의 다른 파이썬 프로젝트에 아무 영향을 주지 않습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token punctuation\">(</span>.venv<span class=\"token punctuation\">)</span> $ pip <span class=\"token function\">install</span> requests</code></pre></div>\n<p><code>pip show</code> 커맨드로 설치된 패키지의 세부사항을 살펴보면 <code>.venv/lib/python3.7/site-packages</code>에 해당 패키지가 설치되었다는 것을 확인할 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ pip show requests\nName: requests\nVersion: <span class=\"token number\">2.22</span>.0\nSummary: Python HTTP <span class=\"token keyword\">for</span> Humans.\nHome-page: http://python-requests.org\nAuthor: Kenneth Reitz\nAuthor-email: me@kennethreitz.org\nLicense: Apache <span class=\"token number\">2.0</span>\nLocation: /Users/dale/temp/my-project/.venv/lib/python3.7/site-packages\nRequires: certifi, chardet, urllib3, idna\nRequired-by:</code></pre></div>\n<h2 id=\"가상-환경-비활성화\" style=\"position:relative;\"><a href=\"#%EA%B0%80%EC%83%81-%ED%99%98%EA%B2%BD-%EB%B9%84%ED%99%9C%EC%84%B1%ED%99%94\" aria-label=\"가상 환경 비활성화 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>가상 환경 비활성화</h2>\n<p>가상 환경을 빠져나올 떄는 터밀널에 <code>deactivate</code>만 입력해주면 됩니다.\n가상 환경이 비활성화 되면 다시 원래대로 운영체제의 기본 파이썬 인터프리터를 사용하게 됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(.venv) $ deactivate\nwhich python\n/usr/local/bin/python3</code></pre></div>\n<h2 id=\"마치면서\" style=\"position:relative;\"><a href=\"#%EB%A7%88%EC%B9%98%EB%A9%B4%EC%84%9C\" aria-label=\"마치면서 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>마치면서</h2>\n<p>이상으로 파이썬에 기본 내장된 <code>venv</code> 모듈을 이용하여 가상 환경을 관리하는 방법에 대해서 알아보았습니다.\n<code>venv</code>를 잘 활용하셔서 파이썬 프로젝트 별로 패키지 관리를 깔끔하게 하셨으면 좋겠습니다.</p>","timeToRead":3,"fields":{"slug":"/python-venv/","tags":["Python","파이썬","venv"]},"frontmatter":{"title":"파이썬에서 venv로 가상 환경 사용하기","date":"Jan 12, 2020"}},"next":{"fields":{"slug":"/python-pyenv/"},"frontmatter":{"title":"여러 버전의 파이썬 관리하기 (pyenv)"}}}}}