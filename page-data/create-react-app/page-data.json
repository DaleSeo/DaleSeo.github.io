{
    "componentChunkName": "component---src-templates-detail-template-jsx",
    "path": "/create-react-app/",
    "result": {"pageContext":{"previous":{"fields":{"slug":"/python-yield/"},"frontmatter":{"title":"파이썬의 yield 키워드와 제너레이터(generator)"}},"node":{"html":"<p>이번 포스팅에서는 React 프로젝트를 쉽고 빠르게 만들 수 있도록 도와주는 Create React App에 대해서 알아보겠습니다.</p>\n<h2 id=\"create-react-app\" style=\"position:relative;\"><a href=\"#create-react-app\" aria-label=\"create react app permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Create React App</h2>\n<p>React로 개발 프로젝트를 맨땅에서 시작하려면 웹팩(Webpack), 바벨(Babel) 등 정말 미리 배워야하는 기술들이 한 두개가 아닙니다.\n초보 개발자들이 이러한 선수 기술들을 일일이 학습하다보면 본래 목표했던 React 애플리케이션 개발이 아득하게 멀어지기 일수인데요…</p>\n<p>React는 각종 개발 편의 도구가 함께 포함된 프레임워크(framework)라기 보다는 어느 프로젝트에서나 추가해서 쓸 수 있는 가벼운 라이브러리(library)에 가깝기 때문에 React를 기반으로 프로젝트를 시작하려고 하면 막막해지는 경우가 많은 것 같습니다.</p>\n<p>과연 이러한 관련 기술을 신경쓰지 않고 React 애플케이션을 바로 개발할 수 있는 방법은 없을까요?\n디행이도 React를 만든 페이스북(Facebook)에서는 Create React App이라는 CLI(커맨드 라인 인터페이스) 도구를 제공하고 있는데요.\n이 도구를 사용하면 이러한 골치 아픈 문제없이 아주 간단하게 React 프로젝트를 구성할 수 있습니다!</p>\n<h2 id=\"프로젝트-생성\" style=\"position:relative;\"><a href=\"#%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EC%83%9D%EC%84%B1\" aria-label=\"프로젝트 생성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>프로젝트 생성</h2>\n<p>Create React App은 Node.js가 설치된 컴퓨터에서 npx 커맨드를 이용해서 부담없게 사용해볼 수 있습니다.</p>\n<blockquote>\n<p>npx 커맨드를 포함한 자주 사용되는 npm 커맨드에 대한 자세한 설명은 <a href=\"https://www.daleseo.com/js-npm-cli/\">관련 포스팅</a>을 참고 바랍니다.</p>\n</blockquote>\n<p>터미널을 열고 다음과 같이 <code>our-app</code> 디렉토리에 React 프로젝트를 생성해보겠습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ npx create-react-app our-app --use-npm</code></pre></div>\n<p>Create React App은 기본적으로 Yarn을 패키지 매니저로 사용하기 때문에 <code>--use-npm</code> 옵션을 사용하여 대신에 npm을 패키지 매니저로 사용하도록 해주었습니다.\n패키지 매니저로 Yarn을 사용하는 것을 선호하시는 분은 <code>--use-npm</code> 옵션을 제거하고 위 명령어를 실행하시면 됩니다.\n(Yarn이 설치되어 있지 않은 컴퓨터에서는 npm을 패키지로 사용하기 때문에 이 옵션을 있든 없든 무방합니다.)</p>\n<p>생성된 React 프로젝트 디렉토리에 들어가보면 전형적인 자바스크립트 프로젝트의 디렉토리 구조가 잡혀있는 것을 확인할 수 있을 것입니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token builtin class-name\">cd</span> our-app\n$ tree <span class=\"token parameter variable\">-L</span> <span class=\"token number\">2</span> <span class=\"token parameter variable\">-I</span> node_modules\n<span class=\"token builtin class-name\">.</span>\n├── README.md\n├── package-lock.json\n├── package.json\n├── public\n│   ├── favicon.ico\n│   ├── index.html\n│   ├── logo192.png\n│   ├── logo512.png\n│   ├── manifest.json\n│   └── robots.txt\n└── src\n    ├── App.css\n    ├── App.js\n    ├── App.test.js\n    ├── index.css\n    ├── index.js\n    ├── logo.svg\n    ├── reportWebVitals.js\n    └── setupTests.js</code></pre></div>\n<p>간단한 커맨드 하나를 통해서 React 애플리케이션 개발을 위한 프로젝트 구성을 모두 마쳤습니다! 🎉\n정말 쉽고 빠르죠?</p>\n<p>심지어 <code>npm install</code> 커맨드로 의존하는 패키지를 설치할 필요조차 없습니다.\n<code>node_modules</code> 디렉토리에 모든 패키지가 이미 다운받아져있기 때문입니다.</p>\n<h2 id=\"애플리케이션-실행\" style=\"position:relative;\"><a href=\"#%EC%95%A0%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98-%EC%8B%A4%ED%96%89\" aria-label=\"애플리케이션 실행 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>애플리케이션 실행</h2>\n<p>애플리케이션을 로컬에서 개발 모드로 띄워보려면 터미널에서 <code>npm start</code> 커맨드를 실행하면 됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">npm</span> start\n\n<span class=\"token operator\">></span> our-app@0.1.0 start\n<span class=\"token operator\">></span> react-scripts start\n\nStarting the development server<span class=\"token punctuation\">..</span>.\n\nCompiled successfully<span class=\"token operator\">!</span>\n\nYou can now view our-app <span class=\"token keyword\">in</span> the browser.\n\n  Local:            http://localhost:3000\n  On Your Network:  http://192.168.2.33:3000\n\nNote that the development build is not optimized.\nTo create a production build, use <span class=\"token function\">npm</span> run build.</code></pre></div>\n<p>이제 브라우저에서 <code>http://localhost:3000</code>를 열어보면 React 로고가 찬란하게 회전하고 있는 화면을 볼 수 있을 것입니다.\n코드 에디터에서 <code>src/App.js</code>를 열고 소스 코드를 변경해보면 바로 브라우저 화면에 반영되는 것도 확인할 수 있을텐데요.\n이는 Create React App으로 생성한 프로젝트는 기본적으로 live reloading을 지원하기 때문입니다.</p>\n<h2 id=\"테스트-실행\" style=\"position:relative;\"><a href=\"#%ED%85%8C%EC%8A%A4%ED%8A%B8-%EC%8B%A4%ED%96%89\" aria-label=\"테스트 실행 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>테스트 실행</h2>\n<p>Create React App으로 프로젝트를 생성하면 기본적으로 <a href=\"/?tag=Jest\">Jest</a>와 <a href=\"/?tag=testingLibrary\">Testing Library</a>가 세팅이 되어 있어서 바로 테스트 코드를 작성하고 실행해볼 수 있습니다.</p>\n<p>테스트를 실행해보려면 <code>npm test</code> 커맨드를 실행하면 됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">npm</span> <span class=\"token builtin class-name\">test</span>\n\n<span class=\"token operator\">></span> our-app@0.1.0 <span class=\"token builtin class-name\">test</span>\n<span class=\"token operator\">></span> react-scripts <span class=\"token builtin class-name\">test</span>\n\nNo tests found related to files changed since last commit.\nPress <span class=\"token variable\"><span class=\"token variable\">`</span>a<span class=\"token variable\">`</span></span> to run all tests, or run Jest with <span class=\"token variable\"><span class=\"token variable\">`</span><span class=\"token parameter variable\">--watchAll</span><span class=\"token variable\">`</span></span><span class=\"token builtin class-name\">.</span>\n\nWatch Usage\n › Press a to run all tests.\n › Press f to run only failed tests.\n › Press q to quit <span class=\"token function\">watch</span> mode.\n › Press p to filter by a filename regex pattern.\n › Press t to filter by a <span class=\"token builtin class-name\">test</span> name regex pattern.\n › Press Enter to trigger a <span class=\"token builtin class-name\">test</span> run.</code></pre></div>\n<p>이 커맨드는 Jest를 관찰(watch) 모드로 실행하기 때문에 변경된 테스트만 실행하게 되어 있습니다.</p>\n<p>전체 테스트를 실행하고 싶다면 위 상태에서 <code>a</code> 버튼을 누르면 됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"> PASS  src/App.test.js\n  ✓ renders learn react <span class=\"token function\">link</span> <span class=\"token punctuation\">(</span><span class=\"token number\">14</span> ms<span class=\"token punctuation\">)</span>\n\nTest Suites: <span class=\"token number\">1</span> passed, <span class=\"token number\">1</span> total\nTests:       <span class=\"token number\">1</span> passed, <span class=\"token number\">1</span> total\nSnapshots:   <span class=\"token number\">0</span> total\nTime:        <span class=\"token number\">1.099</span> s\nRan all <span class=\"token builtin class-name\">test</span> suites.\n\nWatch Usage: Press w to show more.</code></pre></div>\n<h2 id=\"프로젝트-빌드\" style=\"position:relative;\"><a href=\"#%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EB%B9%8C%EB%93%9C\" aria-label=\"프로젝트 빌드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>프로젝트 빌드</h2>\n<p>애플리케이션을 상용 모드로 빌드를 하려면 <code>npm run build</code> 커맨드를 사용하면 됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">npm</span> run build\n\n<span class=\"token operator\">></span> our-app@0.1.0 build\n<span class=\"token operator\">></span> react-scripts build\n\nCreating an optimized production build<span class=\"token punctuation\">..</span>.\nCompiled successfully.\n\nFile sizes after gzip:\n\n  <span class=\"token number\">41.34</span> KB  build/static/js/2.ec78e7ef.chunk.js\n  <span class=\"token number\">1.63</span> KB   build/static/js/3.05b4cfec.chunk.js\n  <span class=\"token number\">1.17</span> KB   build/static/js/runtime-main.13c9fd9c.js\n  <span class=\"token number\">592</span> B     build/static/js/main.a3a2f303.chunk.js\n  <span class=\"token number\">556</span> B     build/static/css/main.a617e044.chunk.css\n\nThe project was built assuming it is hosted at /.\nYou can control this with the homepage field <span class=\"token keyword\">in</span> your package.json.\n\nThe build folder is ready to be deployed.\nYou may serve it with a static server:\n\n  <span class=\"token function\">npm</span> <span class=\"token function\">install</span> <span class=\"token parameter variable\">-g</span> serve\n  serve <span class=\"token parameter variable\">-s</span> build\n\nFind out <span class=\"token function\">more</span> about deployment here:\n\n  https://cra.link/deployment</code></pre></div>\n<p>프로젝트 빌드가 완료되면 <code>build</code> 디렉토리에 빌드 결과물들이 저장됩니다.\n<code>serve</code> CLI 도구를 이용해서 로컬에서 애플리케이션을 상용 모드로 띄워볼 수도 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ npx serve <span class=\"token parameter variable\">-s</span> build\n\n   ┌──────────────────────────────────────────────────┐\n   │                                                  │\n   │   Serving<span class=\"token operator\">!</span>                                       │\n   │                                                  │\n   │   - Local:            http://localhost:5000      │\n   │   - On Your Network:  http://192.168.2.33:5000   │\n   │                                                  │\n   │   Copied <span class=\"token builtin class-name\">local</span> address to clipboard<span class=\"token operator\">!</span>             │\n   │                                                  │\n   └──────────────────────────────────────────────────┘</code></pre></div>\n<p>브라우저에서 <code>http://localhost:5000</code>를 열어보면 동일한 React 로고가 회전하고 있는 것을 볼 수 있을 것입니다.</p>\n<p>이러한 상용 빌드를 Netlify와 같은 호스팅 플래폼에 배포하게 되면 인터넷에서 누구나 접근이 가능하게 됩니다.</p>\n<h2 id=\"마치면서\" style=\"position:relative;\"><a href=\"#%EB%A7%88%EC%B9%98%EB%A9%B4%EC%84%9C\" aria-label=\"마치면서 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>마치면서</h2>\n<p>Create React App이 빠르게 React 프로젝트를 만드는데는 최적화된 도구이지만 분명 큰 규모의 프로젝트에서 사용하기에는 제약사항도 많은 것이 사실입니다.\n그래서 상용 프로젝트를 시작할 때는 <a href=\"https://www.gatsbyjs.com/\">Gatsby.js</a>나 <a href=\"https://nextjs.org/\">Next.js</a>처럼 좀 더 복잡하지만 많은 기능을 제공하는 React 프레임워크를 사용하는 것을 고려하셔야 합니다.</p>\n<p>본 포스팅에서 다루지 않은 Create React App에 대한 좀 더 상세한 내용은 <a href=\"https://create-react-app.dev\">공식 사이트</a>를 참고바랍니다.</p>","timeToRead":5,"fields":{"slug":"/create-react-app/","tags":["JavaScript","React","CLI"]},"frontmatter":{"title":"Create React App: 손쉽게 프로젝트 만들기","date":"Sep 25, 2021"}},"next":{"fields":{"slug":"/react-intl/"},"frontmatter":{"title":"React Intl로 다국어 지원하기 (국제화)"}}}},
    "staticQueryHashes": ["2168229929","2362167539","3056348342"]}