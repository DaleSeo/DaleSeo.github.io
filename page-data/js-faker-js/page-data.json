{
    "componentChunkName": "component---src-templates-detail-template-jsx",
    "path": "/js-faker-js/",
    "result": {"pageContext":{"previous":{"fields":{"slug":"/qs-vs-query-string/"},"frontmatter":{"title":"쿼리 스트링을 다루기 위한 자바스크립트 라이브러리 2종 비교 (qs vs. query-string)"}},"node":{"html":"<p>제가 몇 년 전에 블로그에서 npm 패키지 저장소에 <code>faker</code>라는 이름으로 등록되어 있는 라이브러리를 소개해 드린 적이 있는데요.\n안타깝게도 2022년에 <code>faker</code>를 유지보수하던 개발자가 불미스러운 일을 저질러 더 이상 사용하면 안 되는 라이브러리가 되었습니다.\n(오픈 소스 커뮤니티에 시사하는 바가 컸던 사건이므로 관심있으신 분은 <a href=\"https://www.bleepingcomputer.com/news/security/dev-corrupts-npm-libs-colors-and-faker-breaking-thousands-of-apps/\">관련 기사</a>를 참고하시기 바랍니다.)</p>\n<p>현재는 npm 패키지 저장소에 <code>@faker-js/faker</code>라는 패키지 이름으로 등록된 새로운 라이브러리가 예전에 <code>faker</code> 라이브러리를 대신하고 있는데요.\n과거의 실수를 교훈 삼아 여러 명의 개발자가 공동으로 유지보수하는 형태로 운영이 되고 있습니다.\n이번 포스팅에서는 얼마 전에 출시된 V8을 기준으로 Faker 라이브러리를 사용하여 어떻게 가짜 데이터를 생성할 수 있는지에 대해 다루려고 합니다.</p>\n<h2 id=\"가짜-데이터가-왜-필요할까\" style=\"position:relative;\"><a href=\"#%EA%B0%80%EC%A7%9C-%EB%8D%B0%EC%9D%B4%ED%84%B0%EA%B0%80-%EC%99%9C-%ED%95%84%EC%9A%94%ED%95%A0%EA%B9%8C\" aria-label=\"가짜 데이터가 왜 필요할까 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>가짜 데이터가 왜 필요할까?</h2>\n<p>Faker 사용법에 대해서 배우기 전에 먼저 소프트웨어 개발에서 가짜 데이터가 왜 필요한지 짚고 넘어가면 좋을 것 같아요.</p>\n<p>시제품(prototype)을 개발하거나, 테스트를 작성하다보면 가짜 데이터가 필요할 때가 자주 있지요?\n소규모 프로젝트라면 직접 가짜 데이터를 하드코딩(hard-coding)할 수도 있겠지만, 프로젝트의 규모가 커지게 되면 가짜 데이터를 생성하는데 들어가는 노력이 눈덩이처럼 불어날 수 있습니다.\n그리고 현실에 충분히 있을 법한 가짜 데이터를 생각해내는 것도 개발자 입장에서 불필요한 스트레스가 될 수 있고요.</p>\n<p>Faker와 같은 가짜 데이터를 생성해주는 라이브러리를 사용하면 이러한 가짜 데이터 생성에 들어가는 비용을 획기적으로 줄일 수 있는데요.\n함수 호출 한 번만으로 해당 비즈니스 도메인에 맞는 그럴듯한 가짜 데이터를 생성할 수 있기 때문에 개발 생산성과 개발자 경험을 크게 개선할 수 있습니다.</p>\n<p>뿐만 데이터의 진위 여부가 중요하지 않은 개인 프로젝트나 코딩 연습을 할 때도 이러한 라이브러리를 정말 유용하게 사용할 수 있겠죠?</p>\n<h2 id=\"패키지-설치\" style=\"position:relative;\"><a href=\"#%ED%8C%A8%ED%82%A4%EC%A7%80-%EC%84%A4%EC%B9%98\" aria-label=\"패키지 설치 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>패키지 설치</h2>\n<p><code>npm i</code> 또는 <code>npm  install</code> 명령어를 사용하여 <code>@faker-js/faker</code>라는 이름의 패키지를 설치합니다.\n대부분의 경우, 가짜 데이터를 실제품에서 사용하지는 않을 것이므로 <code>-D</code> 또는 <code>--save-dev</code> 옵션을 사용하여 개발 의존성으로 설치하셔야 할 것입니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">npm</span> i <span class=\"token parameter variable\">-D</span> @faker-js/faker</code></pre></div>\n<h2 id=\"패키지-임포트\" style=\"position:relative;\"><a href=\"#%ED%8C%A8%ED%82%A4%EC%A7%80-%EC%9E%84%ED%8F%AC%ED%8A%B8\" aria-label=\"패키지 임포트 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>패키지 임포트</h2>\n<p><code>@faker-js/faker</code> 패키지로부터 <code>faker</code>를 named import로 불러옵니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> faker <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@faker-js/faker\"</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>참고로 Faker는 다국어도 지원하는데요.\n예를 들어, 한국어로 가짜 데이터를 생성하고 싶다면 다음과 같이 한국어용 <code>faker</code>를 불러오실 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> fakerKO <span class=\"token keyword\">as</span> faker <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@faker-js/faker\"</span><span class=\"token punctuation\">;</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> faker <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@faker-js/faker/locale/ko\"</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>제가 직접 사용을 해보니 아직 한국어 지원이 많이 미흡하더라고요.\n한국어로 설정해도 영어로 결과가 나오는 API도 많고 한국어로 결과가 나오더라도 어색한 많습니다.</p>\n<h2 id=\"faker-api-구조\" style=\"position:relative;\"><a href=\"#faker-api-%EA%B5%AC%EC%A1%B0\" aria-label=\"faker api 구조 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Faker API 구조</h2>\n<p>Faker 라이브러리는 가짜 데이터를 생성하기 위한 수 많은 함수를 제공하고 있는데요.\n서로 관련있는 함수들을 여러 범주로 나누어 놓았기 때문에 API가 <code>faker.&#x3C;범주>.&#x3C;함수>()</code> 구조로 이루어져 있습니다.</p>\n<p>따라서 생성하려는 가짜 데이터가 어느 범주에 속하는지를 파악하시면 좀 더 쉽게 라이브러리를 사용할 수 있습니다.\n예를 들어, 가짜 사용자 데이터를 생성할 때 필요한 함수는 <code>faker.person</code> 속성에 모여있고, 가짜 삼품 데이터를 생성할 때 필요한 함수는 <code>faker.commerce</code> 속성에 모여있습니다.</p>\n<h2 id=\"가짜-사용자-정보-생성\" style=\"position:relative;\"><a href=\"#%EA%B0%80%EC%A7%9C-%EC%82%AC%EC%9A%A9%EC%9E%90-%EC%A0%95%EB%B3%B4-%EC%83%9D%EC%84%B1\" aria-label=\"가짜 사용자 정보 생성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>가짜 사용자 정보 생성</h2>\n<p>어떤 서비스를 개발하든지 가짜 사용자 정보가 정말 자주 필요하죠?\n특히 테스트 작성할 때요.\n<code>faker.person</code> 속성 아래에 모여있는 함수를 사용하면 가짜 사용자 데이터를 간편하게 생성할 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">faker<span class=\"token punctuation\">.</span>person<span class=\"token punctuation\">.</span><span class=\"token function\">firstName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 'Claude'</span>\nfaker<span class=\"token punctuation\">.</span>person<span class=\"token punctuation\">.</span><span class=\"token function\">lastName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 'Mueller'</span>\nfaker<span class=\"token punctuation\">.</span>person<span class=\"token punctuation\">.</span><span class=\"token function\">fullName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 'Dr. Brad Schaden'</span>\nfaker<span class=\"token punctuation\">.</span>person<span class=\"token punctuation\">.</span><span class=\"token function\">jobTitle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 'Internal Division Orchestrator'</span>\nfaker<span class=\"token punctuation\">.</span>person<span class=\"token punctuation\">.</span><span class=\"token function\">sex</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 'male'</span></code></pre></div>\n<h2 id=\"가짜-인터넷-데이터-생성\" style=\"position:relative;\"><a href=\"#%EA%B0%80%EC%A7%9C-%EC%9D%B8%ED%84%B0%EB%84%B7-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%83%9D%EC%84%B1\" aria-label=\"가짜 인터넷 데이터 생성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>가짜 인터넷 데이터 생성</h2>\n<p>인터넷에서 흔히 찾아볼 수 있는 이메일, 비밀번호, IP 주소, URL과 같은 데이터를 생성하기 위한 함수는 <code>faker.internet</code> 속성에 모여있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">faker<span class=\"token punctuation\">.</span>internet<span class=\"token punctuation\">.</span><span class=\"token function\">email</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 'Claude_Mueller@hotmail.com'</span>\nfaker<span class=\"token punctuation\">.</span>internet<span class=\"token punctuation\">.</span><span class=\"token function\">password</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// '3PnJkjkr3mn0tBP'</span>\nfaker<span class=\"token punctuation\">.</span>internet<span class=\"token punctuation\">.</span><span class=\"token function\">ip</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// '38.70.50.205'</span>\nfaker<span class=\"token punctuation\">.</span>internet<span class=\"token punctuation\">.</span><span class=\"token function\">url</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 'https://sniveling-script.org'</span></code></pre></div>\n<h2 id=\"가짜-전화번호-생성\" style=\"position:relative;\"><a href=\"#%EA%B0%80%EC%A7%9C-%EC%A0%84%ED%99%94%EB%B2%88%ED%98%B8-%EC%83%9D%EC%84%B1\" aria-label=\"가짜 전화번호 생성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>가짜 전화번호 생성</h2>\n<p>가짜 전화번호는 <code>faker.phone</code> 속성을 통해서 생성할 수 있는데요.\n일반 전화번호 뿐만 아니라 IMEI 번호도 생성할 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">faker<span class=\"token punctuation\">.</span>phone<span class=\"token punctuation\">.</span><span class=\"token function\">number</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// '568.567.7782'</span>\nfaker<span class=\"token punctuation\">.</span>phone<span class=\"token punctuation\">.</span><span class=\"token function\">imei</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// '12-188918-130546-7'</span></code></pre></div>\n<h2 id=\"가짜-상품-정보-생성\" style=\"position:relative;\"><a href=\"#%EA%B0%80%EC%A7%9C-%EC%83%81%ED%92%88-%EC%A0%95%EB%B3%B4-%EC%83%9D%EC%84%B1\" aria-label=\"가짜 상품 정보 생성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>가짜 상품 정보 생성</h2>\n<p>전자 상거래 서비스를 개발하시면 가짜 상품 정보도 많이 필요하실텐데요.\n<code>faker.commerce</code> 속성을 통해서 상품 이름, 설명, 가격 등을 가짜로 생성해주는 유용한 함수를 사용할 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">faker<span class=\"token punctuation\">.</span>commerce<span class=\"token punctuation\">.</span><span class=\"token function\">product</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 'Mouse'</span>\nfaker<span class=\"token punctuation\">.</span>commerce<span class=\"token punctuation\">.</span><span class=\"token function\">productAdjective</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 'Recycled'</span>\nfaker<span class=\"token punctuation\">.</span>commerce<span class=\"token punctuation\">.</span><span class=\"token function\">productDescription</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 'Carbonite web goalkeeper gloves are ergonomically designed to give easy fit'</span>\nfaker<span class=\"token punctuation\">.</span>commerce<span class=\"token punctuation\">.</span><span class=\"token function\">department</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 'Jewelery'</span>\nfaker<span class=\"token punctuation\">.</span>commerce<span class=\"token punctuation\">.</span><span class=\"token function\">price</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// '438.00'</span></code></pre></div>\n<h2 id=\"가짜-문자열-데이터-생성\" style=\"position:relative;\"><a href=\"#%EA%B0%80%EC%A7%9C-%EB%AC%B8%EC%9E%90%EC%97%B4-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%83%9D%EC%84%B1\" aria-label=\"가짜 문자열 데이터 생성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>가짜 문자열 데이터 생성</h2>\n<p><code>faker.string</code> 속성에는 문자형의 가짜 데이터를 생성하기 위한 함수가 모여있습니다.</p>\n<p>우선, 단순히 무작위 문자열을 얻고 싶다면 <code>simple()</code> 함수를 호출하면 됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">faker<span class=\"token punctuation\">.</span>string<span class=\"token punctuation\">.</span><span class=\"token function\">sample</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// '2OZmIYjhiq'</span></code></pre></div>\n<p>제한된 문자로만 이루어진 문자열을 얻기 위해서는 다음과 같이 다양한 함수를 사용할 수 있는데요.\n이러한 함수들은 기본적으로는 길이가 1인 문자열을 제공하지만, 문자열 길이를 인자로 넘겨서 더 긴 문자열을 얻을 수도 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">faker<span class=\"token punctuation\">.</span>string<span class=\"token punctuation\">.</span><span class=\"token function\">alpha</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 'j'</span>\nfaker<span class=\"token punctuation\">.</span>string<span class=\"token punctuation\">.</span><span class=\"token function\">numeric</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// '7'</span>\nfaker<span class=\"token punctuation\">.</span>string<span class=\"token punctuation\">.</span><span class=\"token function\">alphanumeric</span><span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 'rBMLMRg9'</span>\nfaker<span class=\"token punctuation\">.</span>string<span class=\"token punctuation\">.</span><span class=\"token function\">symbol</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// ')$^'</span>\nfaker<span class=\"token punctuation\">.</span>string<span class=\"token punctuation\">.</span><span class=\"token function\">fromCharacters</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"xyz\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 'zzxzx'</span></code></pre></div>\n<p><code>faker.string</code> 속성에는 가짜 아이디가 필요할 때 아주 유용하게 쓸 수 있는 함수도 있는데요.\n예전 많이 쓰이던 숫자형 아이디는 물론이고 최근에 많이 쓰이는 UUID나 Nano ID도 쉽게 생성할 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">faker<span class=\"token punctuation\">.</span>string<span class=\"token punctuation\">.</span><span class=\"token function\">numeric</span><span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// '74640945'</span>\nfaker<span class=\"token punctuation\">.</span>string<span class=\"token punctuation\">.</span><span class=\"token function\">uuid</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// '4243cdf2-e150-487a-95bc-51808700c4e3'</span>\nfaker<span class=\"token punctuation\">.</span>string<span class=\"token punctuation\">.</span><span class=\"token function\">nanoid</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 'C4_VEoMjzRr-8HHdVrU3_'</span></code></pre></div>\n<blockquote>\n<p>UUID와 NanoID 대한 자세한 설명은 아래 포스팅을 참고 바랍니다.</p>\n<ul>\n<li><a href=\"/js-uuid/\">자바스크립트로 UUID 생성하기</a></li>\n<li><a href=\"/nanoid/\">NanoID: 작고 빠른 고유 식별자 생성기</a></li>\n</ul>\n</blockquote>\n<h2 id=\"가짜-숫자형-데이터-생성\" style=\"position:relative;\"><a href=\"#%EA%B0%80%EC%A7%9C-%EC%88%AB%EC%9E%90%ED%98%95-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%83%9D%EC%84%B1\" aria-label=\"가짜 숫자형 데이터 생성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>가짜 숫자형 데이터 생성</h2>\n<p><code>faker.number</code> 속성을 통해서 정수, 소수, 이진수와 같은 다양한 숫자형 데이터를 가짜로 생성할 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">faker<span class=\"token punctuation\">.</span>number<span class=\"token punctuation\">.</span><span class=\"token function\">int</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 1725053848780800</span>\nfaker<span class=\"token punctuation\">.</span>number<span class=\"token punctuation\">.</span><span class=\"token function\">float</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 0.49766366626136005</span>\nfaker<span class=\"token punctuation\">.</span>number<span class=\"token punctuation\">.</span><span class=\"token function\">binary</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 1</span></code></pre></div>\n<h2 id=\"가짜-불리언-생성\" style=\"position:relative;\"><a href=\"#%EA%B0%80%EC%A7%9C-%EB%B6%88%EB%A6%AC%EC%96%B8-%EC%83%9D%EC%84%B1\" aria-label=\"가짜 불리언 생성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>가짜 불리언 생성</h2>\n<p>가짜 불리언을 생성하실 때는 <code>faker.datatype.boolean()</code> 함수를 호출하면 됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">faker<span class=\"token punctuation\">.</span>datatype<span class=\"token punctuation\">.</span><span class=\"token function\">boolean</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span>\nfaker<span class=\"token punctuation\">.</span>datatype<span class=\"token punctuation\">.</span><span class=\"token function\">boolean</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span>\nfaker<span class=\"token punctuation\">.</span>datatype<span class=\"token punctuation\">.</span><span class=\"token function\">boolean</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// false</span></code></pre></div>\n<p>참고로 <code>faker.datatype</code> 속성에는 다른 기본형 데이터를 생성하기 위한 함수도 있는데요.\n하지만 V8에서 모두 deprecated, 즉 폐기 예정이기 때문에 가급적 쓰시지 말기를 추천드립니다.</p>\n<p>대신에 위에서 다룬 것처럼, 가짜 문자형 데이터가 필요하시다면 <code>faker.string</code> 속성을 쓰시면 되고, 가짜 숫자형 데이터가 필요하시다면 <code>faker.number</code> 속성을 쓰시기 바랍니다.</p>\n<h2 id=\"가짜-날짜-데이터-생성\" style=\"position:relative;\"><a href=\"#%EA%B0%80%EC%A7%9C-%EB%82%A0%EC%A7%9C-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%83%9D%EC%84%B1\" aria-label=\"가짜 날짜 데이터 생성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>가짜 날짜 데이터 생성</h2>\n<p>가짜 데이터를 논할 때 날짜도 빼놓을 수 없는데요.\n<code>faker.date</code> 속성에는 날짜 데이터를 가짜로 생성하기 위한 함수가 들어 있습니다.</p>\n<p>우선, 그냥 무작위 날짜를 생성하려면 <code>anytime()</code> 함수를 호출하면 되고요.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">faker<span class=\"token punctuation\">.</span>date<span class=\"token punctuation\">.</span><span class=\"token function\">anytime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 2023-01-14T18:35:51.237Z</span></code></pre></div>\n<p>몇 일 내의 가까운 과거는 <code>past()</code> 함수를 사용하여 생성하고, 몇 달 이상의 먼 과거는 <code>recent()</code> 함수를 사용합니다.\n반대로 가까운 미래는 <code>soon()</code> 함수, 먼 미래는 <code>future()</code> 함수를 사용하여 생성합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">faker<span class=\"token punctuation\">.</span>date<span class=\"token punctuation\">.</span><span class=\"token function\">past</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 2023-02-27T07:38:34.596Z</span>\nfaker<span class=\"token punctuation\">.</span>date<span class=\"token punctuation\">.</span><span class=\"token function\">recent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 2023-08-27T08:14:45.903Z</span>\nfaker<span class=\"token punctuation\">.</span>date<span class=\"token punctuation\">.</span><span class=\"token function\">soon</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 2023-08-28T18:48:17.902Z</span>\nfaker<span class=\"token punctuation\">.</span>date<span class=\"token punctuation\">.</span><span class=\"token function\">future</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 2024-02-03T17:40:18.962Z</span></code></pre></div>\n<p><code>between()</code> 함수를 사용하면 특정 기간 내에서 무작위 날짜를 생성할 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">faker<span class=\"token punctuation\">.</span>date<span class=\"token punctuation\">.</span><span class=\"token function\">between</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">from</span><span class=\"token operator\">:</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"2000\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">to</span><span class=\"token operator\">:</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"2002\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 2000-05-20T00:01:02.041Z</span></code></pre></div>\n<h2 id=\"가짜-텍스트-생성\" style=\"position:relative;\"><a href=\"#%EA%B0%80%EC%A7%9C-%ED%85%8D%EC%8A%A4%ED%8A%B8-%EC%83%9D%EC%84%B1\" aria-label=\"가짜 텍스트 생성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>가짜 텍스트 생성</h2>\n<p>Faker는 <code>faker.lorem</code> 속성을 통해서 lorem ipsum을 기반으로 하는 무작위 텍스트 생성도 지원하는데요.\n특히 시제품을 만들 때 유용합니다.</p>\n<p>예를 들어, 무작위 단어, 문장, 문단을 생성해보겠습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">faker<span class=\"token punctuation\">.</span>lorem<span class=\"token punctuation\">.</span><span class=\"token function\">word</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// ratione</span>\nfaker<span class=\"token punctuation\">.</span>lorem<span class=\"token punctuation\">.</span><span class=\"token function\">sentence</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Error facere iure iste porro impedit.</span>\nfaker<span class=\"token punctuation\">.</span>lorem<span class=\"token punctuation\">.</span><span class=\"token function\">paragraph</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Nulla tempora sed incidunt nesciunt quod facere sapiente quia. Dicta corporis aut blanditiis odio fuga veniam expedita maxime ipsam. Molestias ipsa blanditiis.</span></code></pre></div>\n<p>블로그 포스팅의 URL로 많이 사용되는 소위 slug도 어렵지 않게 만들 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">faker<span class=\"token punctuation\">.</span>lorem<span class=\"token punctuation\">.</span><span class=\"token function\">slug</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// ratione-ducimus-error</span></code></pre></div>\n<h2 id=\"기타-도우미-함수\" style=\"position:relative;\"><a href=\"#%EA%B8%B0%ED%83%80-%EB%8F%84%EC%9A%B0%EB%AF%B8-%ED%95%A8%EC%88%98\" aria-label=\"기타 도우미 함수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>기타 도우미 함수</h2>\n<p>마지막으로 소개해드리고 싶은 Faker의 API는 바로 <code>faker.helpers</code>인데요.</p>\n<p>우선 배열에서 무작위로 값을 선택하기 위한 <code>arrayElement()</code>와 <code>arrayElements()</code> 함수가 상당히 유용합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">faker<span class=\"token punctuation\">.</span>helpers<span class=\"token punctuation\">.</span><span class=\"token function\">arrayElement</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"To do\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Doing\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Done\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// To do</span>\nfaker<span class=\"token punctuation\">.</span>helpers<span class=\"token punctuation\">.</span><span class=\"token function\">arrayElements</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"To do\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Doing\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Done\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [ 'Done', 'Doing' ]</span></code></pre></div>\n<p>이러한 도우미 함수가 없었다면 다음과 같이 복잡한 코드를 스스로 작성했어야 할 것입니다. 😬</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">[</span><span class=\"token string\">\"To do\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Doing\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Done\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> array<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// To do</span></code></pre></div>\n<p><code>shuffle()</code> 함수를 이용하면 배열 내의 원소를 무작위로 섞을 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">faker<span class=\"token punctuation\">.</span>helpers<span class=\"token punctuation\">.</span><span class=\"token function\">shuffle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"a\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"b\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"c\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [ 'b', 'c', 'a' ]</span></code></pre></div>\n<p>객체에서 무작위로 키 또는 값을 선택하거나 키와 값의 동시에 선택할 수도 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">faker<span class=\"token punctuation\">.</span>helpers<span class=\"token punctuation\">.</span><span class=\"token function\">objectKey</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">a</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">b</span><span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">c</span><span class=\"token operator\">:</span> <span class=\"token number\">3</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 'a'</span>\nfaker<span class=\"token punctuation\">.</span>helpers<span class=\"token punctuation\">.</span><span class=\"token function\">objectValue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">a</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">b</span><span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">c</span><span class=\"token operator\">:</span> <span class=\"token number\">3</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 2</span>\nfaker<span class=\"token punctuation\">.</span>helpers<span class=\"token punctuation\">.</span><span class=\"token function\">objectEntry</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">a</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">b</span><span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">c</span><span class=\"token operator\">:</span> <span class=\"token number\">3</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// ['b', 2]</span></code></pre></div>\n<p><code>enumValue()</code> 함수는 이넘(Enum)에서 하나의 맴버를 선택할 때 유용합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">enum</span> HttpStatus <span class=\"token punctuation\">{</span>\n  Ok <span class=\"token operator\">=</span> <span class=\"token number\">200</span><span class=\"token punctuation\">,</span>\n  Created <span class=\"token operator\">=</span> <span class=\"token number\">201</span><span class=\"token punctuation\">,</span>\n  BadRequest <span class=\"token operator\">=</span> <span class=\"token number\">400</span><span class=\"token punctuation\">,</span>\n  Unauthorized <span class=\"token operator\">=</span> <span class=\"token number\">401</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\nfaker<span class=\"token punctuation\">.</span>helpers<span class=\"token punctuation\">.</span><span class=\"token function\">enumValue</span><span class=\"token punctuation\">(</span>HttpStatus<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 200</span></code></pre></div>\n<h2 id=\"가짜-데이터-고정\" style=\"position:relative;\"><a href=\"#%EA%B0%80%EC%A7%9C-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EA%B3%A0%EC%A0%95\" aria-label=\"가짜 데이터 고정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>가짜 데이터 고정</h2>\n<p>스냅샷(snapshot) 테스트를 작성하실 때는 테스트가 실행될 때 마다 가짜 데이터가 변하면 곤란한데요.\n이 때는 <code>faker.seed()</code> 함수를 사용하여 고정된 시드(seed) 값을 넘겨주시면 항상 동일한 가짜 데이터의 생성을 보장받을 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"user snapshot\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  faker<span class=\"token punctuation\">.</span><span class=\"token function\">seed</span><span class=\"token punctuation\">(</span><span class=\"token number\">101</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> faker<span class=\"token punctuation\">.</span>person<span class=\"token punctuation\">.</span><span class=\"token function\">fullName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">email</span><span class=\"token operator\">:</span> faker<span class=\"token punctuation\">.</span>internet<span class=\"token punctuation\">.</span><span class=\"token function\">email</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">phone</span><span class=\"token operator\">:</span> faker<span class=\"token punctuation\">.</span>phone<span class=\"token punctuation\">.</span><span class=\"token function\">number</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toMatchSnapshot</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>스냅샷 이외에 테스트 케이스에서는 원래대로 가변 데이터가 생성되길 원하다면 <code>afterEach()</code> 함수를 통해 인자없이 <code>faker.seed()</code>를 호출해주시면 됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">afterEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  faker<span class=\"token punctuation\">.</span><span class=\"token function\">seed</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"마치면서\" style=\"position:relative;\"><a href=\"#%EB%A7%88%EC%B9%98%EB%A9%B4%EC%84%9C\" aria-label=\"마치면서 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>마치면서</h2>\n<p>지금까지 가짜 데이터를 생성을 위한 자바스크립트 라이브러리인 Faker의 다양한 API에 대해서 살펴보았습니다.</p>\n<p>사실 본 포스팅에서 Faker로 만들어본 가짜 데이터는 빙산의 일각일 뿐이며 이 보다 훨씬 더 다채로운 가짜 데이터도 만드실 수 있습니다.\n너무 방대하여 본 포스팅에서 미처 다루지 못한 Faker에서 제공하는 다른 API에 대해서는 <a href=\"https://fakerjs.dev/api/\">공식 API 레퍼런스 문서</a>를 참고하시길 바랍니다.</p>\n<p><a href=\"/js-test-object-factory/\">다음 포스팅</a>에서는 실제로 테스트 코드를 작성할 때 Faker를 어떻게 활용하는지에 대해서 다루겠습니다.</p>","timeToRead":9,"fields":{"slug":"/js-faker-js/","tags":["JavaScript","Node.js","library","testing","faker"]},"frontmatter":{"title":"자바스크립트에서 Faker로 가짜 데이터 생성하기","date":"Aug 27, 2023"}},"next":{"fields":{"slug":"/react-use-location/"},"frontmatter":{"title":"React에서 location 객체 접근하기"}}}},
    "staticQueryHashes": ["2168229929","2362167539","3056348342"]}