{
    "componentChunkName": "component---src-templates-detail-template-jsx",
    "path": "/css-before-after/",
    "result": {"pageContext":{"previous":{"fields":{"slug":"/styled-components-global-style/"},"frontmatter":{"title":"Styled Components 전역 스타일링 (Global Style)"}},"node":{"html":"<p>이번 포스팅에서는 추가 컨텐츠를 삽입하기 위해서 사용되는 <code>::before</code>과 <code>::after</code>에 대해서 알아보겠습니다.</p>\n<h2 id=\"pseudo-element\" style=\"position:relative;\"><a href=\"#pseudo-element\" aria-label=\"pseudo element permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Pseudo Element</h2>\n<p><code>::before</code>과 <code>::after</code>는 CSS에서 소위 pseudo element라고 하는데요.\n일반적인 CSS 선택자(selector)로는 지정할 수 없는 미세한 영역을 선택하기 위해서 사용됩니다.\n본 포스팅에서 다룰 <code>::before</code>과 <code>::after</code>뿐만 아니라 <code>::first-letter</code>, <code>::first-line</code>, <code>::selection</code>, <code>::marker</code> 등 CSS에는 다양한 pseudo element가 있습니다.</p>\n<p>pseudo element는 선택자 뒤에 붙여주는데 CSS3 문법 상 <code>:</code> 기호를 사용하는 pseudo class와 구분해주기 위해서 원칙적으로는 <code>::</code> 기호를 사용해야 하지만 <code>:</code> 기호를 사용하더라도 대부분 브라우저에서 문제없이 작동을 합니다.\n예를 들어, <code>::before</code> pseudo element는 다음과 같이 두가지 문법을 모두 사용할 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">div::before</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">content</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"before\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">div:before</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">content</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"before\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>은근히 많은 분이 햇갈려하는 부분이라서 먼저 짚고 넘어가고 싶었습니다.\npseudo element에 대한 좀 더 전반적인 내용은 관련 <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/Pseudo-elements\">MDN 문서</a>를 참고 바랍니다.</p>\n<h2 id=\"before--after\" style=\"position:relative;\"><a href=\"#before--after\" aria-label=\"before  after permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>::before / ::after</h2>\n<p><code>::before</code>과 <code>::after</code>이 적용된 간단한 다음 사례를 먼저 볼까요?</p>\n<iframe height=\"265\" style=\"width: 100%;\" scrolling=\"no\" title=\"css-before-after\" src=\"https://codepen.io/daleseo/embed/oNBEZPb?height=265&theme-id=dark&default-tab=html,result\" frameborder=\"no\" loading=\"lazy\" allowtransparency=\"true\" allowfullscreen=\"true\">\n  See the Pen <a href='https://codepen.io/daleseo/pen/oNBEZPb'>css-before-after</a> by Dale Seo\n  (<a href='https://codepen.io/daleseo'>@daleseo</a>) on <a href='https://codepen.io'>CodePen</a>.\n</iframe>\n<p>목록에서 <code>star</code> 클래스가 적용된 항목은 앞에 별 아이콘이 붙어있고, <code>heart</code> 클래스가 적용된 항목은 뒤에 하트 아이콘이 붙어 있습니다.</p>\n<p>CSS 코드를 보면 <code>star</code> 클래스에는 <code>::before</code>를 <code>heart</code> 클래스에는 <code>::after</code>가 사용하여 <code>content</code> 속성에 해당 아이콘을 명시해준 것을 볼 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.star::before</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">content</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"⭐\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.heart::after</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">content</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"❤️\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>여기서 우리는 <code>::before</code> 또는 <code>::after</code>를 사용해서 <code>content</code> 속성값이 선택된 엘리먼트의 앞또는 뒤에 삽압되는 것을 알 수 있습니다.</p>\n<p>브라우저 개발자 도구로 좀 더 자세히 해당 엘리먼트를 살펴보면, <code>::before</code>/<code>::after</code>라는 placeholder가 엘리먼트 안에 삽입된 것을 볼 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&lt;li class=\"heart\">\n  \"CSS\"\n  ::after\n&lt;/li>\n&lt;li class=\"star\">\n  ::before\n  JavaScript\n&lt;/li></code></pre></div>\n<p><code>::before</code>/<code>::after</code>를 사용할 때 주의할 점이 바로 해당 엘리먼트 앞뒤로 새로운 엘리먼트를 삽입되는 것이 아니라 해당 엘리먼트 내부의 맨 앞 또는 맨 뒤에 컨텐츠만 삽입된다는 것입니다.</p>\n<p>참고로 <code>content</code> 속성에는 단순 텍스트 뿐만 아니라 이미지도 사용할 수 있습니다.</p>\n<h2 id=\"예제-특수-기호-삽입\" style=\"position:relative;\"><a href=\"#%EC%98%88%EC%A0%9C-%ED%8A%B9%EC%88%98-%EA%B8%B0%ED%98%B8-%EC%82%BD%EC%9E%85\" aria-label=\"예제 특수 기호 삽입 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[예제] 특수 기호 삽입</h2>\n<p><code>::before</code>과 <code>::after</code>가 실전에서 많이 사용되는 사례로 특수 기호 넣기를 들 수 있습니다.</p>\n<p>다음과 같은 HTML 코드를 예로 들어 봅시다.</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>figure</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>blockquote</span><span class=\"token punctuation\">></span></span>\n    당신이 언젠가 죽을 것이라는 사실을 기억하는 것이야말로 무언가 잃을지도\n    모른다는 두려움에 갖히는 것을 피할 수 있는, 제가 아는 가장 최고의\n    방법입니다.\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>blockquote</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>figcaption</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>cite</span><span class=\"token punctuation\">></span></span>스티브 잡스<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>cite</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>figcaption</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>figure</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>먼저 <code>&#x3C;blockquote></code>으로 마크업되어 있는 명언 부분에는 앞뒤로 인용 부호를 넣어보겠습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">blockquote::before</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">content</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"“\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">blockquote::after</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">content</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"”\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>그리고 <code>&#x3C;cite></code>로 마크업되어 있는 저자 부분에는 앞에만 대시 부호를 넣어보겠습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">cite::before</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">content</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"—\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>이렇게 약간의 특수 기호만 추가되어도 컨텐츠가 훨씬 맛깔나보이지 않나요?</p>\n<iframe height=\"300\" style=\"width: 100%;\" scrolling=\"no\" title=\"css-before-after-quote\" src=\"https://codepen.io/daleseo/embed/JjEpNaJ?height=265&theme-id=dark&default-tab=html,result\" frameborder=\"no\" loading=\"lazy\" allowtransparency=\"true\" allowfullscreen=\"true\">\n  See the Pen <a href='https://codepen.io/daleseo/pen/JjEpNaJ'>css-before-after-quote</a> by Dale Seo\n  (<a href='https://codepen.io/daleseo'>@daleseo</a>) on <a href='https://codepen.io'>CodePen</a>.\n</iframe>\n<p>이쯤에서 뭐하러 복잡하게 CSS로 이 걸 하냐? HTML 코드에 바로 특수 기호를 넣으면 안되냐? 라고 물어보시는 분이 있으실텐데요.</p>\n<p>한 번 명언이나 저자 부분을 복사해보시면 CSS로 삽입된 특수 기호는 포함이 되지 않는 다는 것을 볼 수 있으실 거에요.\n만약에, 특수 기호까지 함께 복사가 되었다면 사용자 입장에서는 특수 기호를 제거해줘야 되서 번거로웠겠지요?</p>\n<p>즉, 이렇게 CSS로 삽입된 특수 기호는 어디까지나 스타일 목적이며 브라우저에서 실제 컨텐츠로 다루어지지는 않습니다.\n실제 컨텐츠로 다뤄져야하는 경우에는 당연히 평소처럼 HTML을 사용하셔야 합니다.</p>\n<h2 id=\"마치면서\" style=\"position:relative;\"><a href=\"#%EB%A7%88%EC%B9%98%EB%A9%B4%EC%84%9C\" aria-label=\"마치면서 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>마치면서</h2>\n<p>지금까지 CSS의 pseudo element인 <code>::before</code>과 <code>::after</code>를 사용하는 방법에 대해서 간단히 알아보았습니다.\n추후 기회가 되면 다른 활용 사례에 대해서도 다뤄보도록 하겠습니다.</p>","timeToRead":3,"fields":{"slug":"/css-before-after/","tags":["CSS","selectors"]},"frontmatter":{"title":"[CSS] ::before / ::after","date":"Apr 10, 2021"}},"next":{"fields":{"slug":"/css-overflow/"},"frontmatter":{"title":"CSS의 overflow 속성 사용법"}}}},
    "staticQueryHashes": ["2168229929","2362167539","3056348342"]}