{"componentChunkName":"component---src-templates-detail-template-jsx","path":"/git-init/","result":{"pageContext":{"previous":{"fields":{"slug":"/css-min-max/"},"frontmatter":{"title":"CSS 함수 - min(), max()"}},"node":{"html":"<p><code>git init</code>는 새로운 Git 저장소(repository)를 생성할 때 사용하는 Git 명령어 입니다.</p>\n<p>Git 사용할 때 보통 다른 사람이 이미 생성해 놓은 Git 원격 저장소를 <code>git clone</code> 명령어를 통해 내려받는 경우가 많고, 직접 Git 저장소를 생성하더라도 프로젝트 초기에 딱 한 번만 사용하기 때문에 생소하게 느껴질 수도 있는 명령어입니다.</p>\n<p>하지만 저처럼 모든 개인 프로젝트를 항상 Git으로 버전 관리를 하는 분들에게는 의외로 자주 사용하게 되는 명령어 입니다.</p>\n<h2 id=\"실습-디렉토리-준비\" style=\"position:relative;\"><a href=\"#%EC%8B%A4%EC%8A%B5-%EB%94%94%EB%A0%89%ED%86%A0%EB%A6%AC-%EC%A4%80%EB%B9%84\" aria-label=\"실습 디렉토리 준비 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>실습 디렉토리 준비</h2>\n<p>일단 Git으로 버전 관리를 하고 싶은 디렉토리로 이동합니다.\n저는 실습을 위해서 새로운 디렉토리를 생성하고, 그 안에 파일 몇개를 생성하였습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">mkdir</span> our-project\n$ <span class=\"token builtin class-name\">cd</span> our-project\n$ <span class=\"token function\">touch</span> a.js b.js c.js .env\n$ <span class=\"token function\">ls</span> -al\ntotal <span class=\"token number\">0</span>\ndrwxr-xr-x   <span class=\"token number\">6</span> dale  staff   <span class=\"token number\">192</span> <span class=\"token number\">26</span> Sep <span class=\"token number\">14</span>:04 <span class=\"token builtin class-name\">.</span>\ndrwxr-xr-x  <span class=\"token number\">52</span> dale  staff  <span class=\"token number\">1664</span> <span class=\"token number\">26</span> Sep <span class=\"token number\">14</span>:03 <span class=\"token punctuation\">..</span>\n-rw-r--r--   <span class=\"token number\">1</span> dale  staff     <span class=\"token number\">0</span> <span class=\"token number\">26</span> Sep <span class=\"token number\">14</span>:04 .env\n-rw-r--r--   <span class=\"token number\">1</span> dale  staff     <span class=\"token number\">0</span> <span class=\"token number\">26</span> Sep <span class=\"token number\">14</span>:04 a.js\n-rw-r--r--   <span class=\"token number\">1</span> dale  staff     <span class=\"token number\">0</span> <span class=\"token number\">26</span> Sep <span class=\"token number\">14</span>:04 b.js\n-rw-r--r--   <span class=\"token number\">1</span> dale  staff     <span class=\"token number\">0</span> <span class=\"token number\">26</span> Sep <span class=\"token number\">14</span>:04 c.js</code></pre></div>\n<p>이 상태에서 <code>git status</code> 명령어를 쳐보면, 이 곳은 Git 저장소가 아니라는 에러가 뜹니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">➜  our-project <span class=\"token function\">git</span> status\nfatal: not a <span class=\"token function\">git</span> repository <span class=\"token punctuation\">(</span>or any of the parent directories<span class=\"token punctuation\">)</span>: .git</code></pre></div>\n<h2 id=\"git-저장소-생성\" style=\"position:relative;\"><a href=\"#git-%EC%A0%80%EC%9E%A5%EC%86%8C-%EC%83%9D%EC%84%B1\" aria-label=\"git 저장소 생성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Git 저장소 생성</h2>\n<p>여기서 <code>git init</code> 명령어를 실행하면, 현재 디렉토리를 기준으로 Git 저장소가 생성됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">git</span> init\nInitialized empty Git repository <span class=\"token keyword\">in</span> /Users/dale/temp/our-project/.git/</code></pre></div>\n<p>Git 저장소가 되었다는 가장 큰 증거는 디렉토리 내부에 <code>.git</code> 디렉토리가 생긴다는 것입니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">ls</span> -d .git\n.git</code></pre></div>\n<p>이 디렉토리에는 Git이 버전 관리를 하기 위한 메타 정보가 담겨있으며, 구체적으로 어떤 내용인지는 Git을 사용할 때 크게 중요하지 않습니다.\n정말 중요한 것은 이 디렉토리를 지우는 순간, 해당 Git 저장소의 모든 변경 이력은 소실되고 일반 디렉토리로 돌아온다는 것입니다.</p>\n<p>이 상태에서 다시 <code>git status</code> 명령어를 쳐보면, 아직까지 커밋(commit) 이력이 없다고 나옵니다. 그리고 디렉토리에 있는 모든 파일이 아직 Git으로 버전 관리가 되지 않고 있다고 나열됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">git</span> status\nOn branch master\n\nNo commits yet\n\nUntracked files:\n  <span class=\"token punctuation\">(</span>use <span class=\"token string\">\"git add &lt;file>...\"</span> to include <span class=\"token keyword\">in</span> what will be committed<span class=\"token punctuation\">)</span>\n\n\t.env\n\ta.js\n\tb.js\n\tc.js\n\nnothing added to commit but untracked files present <span class=\"token punctuation\">(</span>use <span class=\"token string\">\"git add\"</span> to track<span class=\"token punctuation\">)</span></code></pre></div>\n<h2 id=\"gitignore-생성\" style=\"position:relative;\"><a href=\"#gitignore-%EC%83%9D%EC%84%B1\" aria-label=\"gitignore 생성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>.gitignore 생성</h2>\n<p>Git 저장소를 생성할 때 간과하기 쉬운 부분이 <code>.gitignore</code> 파일을 생성해놓는 것입니다.\n<code>.gitignore</code> 파일은 Git으로 버전 관리를 하면 안 되거나, 할 필요가 없는 경로를 정의하는데 쓰입니다.</p>\n<p>예를 들어, 디렉토리 내의 특정 파일이 DB 비밀번호나 API 비밀키처럼 민감한 정보를 담고 있는데, 이 파일이 Git 저장소에 올라가 Github와 같은 서비스를 통해 외부에 공개가 된다면 보안 사고가 나겠지요. 😰</p>\n<p>또한, 동영상처럼 용량이 크고 사람 눈으로 해독하기 불가능한 파일들은 Git 저장소에 올리면 저장소를 복제하는 시간만 오래 걸리게 할 것입니다.</p>\n<p>그래서 프로젝트 초기에 이러한 파일들의 경로를 <code>.gitignore</code> 파일에 등록해놓는 것이 매우 중요합니다.\n대표적인 예로, <code>.env</code> 파일은 많은 자바스크립트 프로젝트에서 개발자들이 로컬 컴퓨터에 임의의 환경 변수를 설정하기 위한 용도로 사용합니다.\n따라서 이 파일은 <code>.gitignore</code> 파일에 등록을 해야 보안적으로 안전하고 개발자 간에 불필요한 코드 충돌을 피할 수 있습니다.</p>\n<p>본 실습에서는 <code>.gitignore</code> 파일을 생성하고, 위에서 디렉토리를 생성할 때 함께 생성해놓은 <code>.env</code> 파일을 등록하겠습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token builtin class-name\">echo</span> .env <span class=\"token operator\">></span> .gitignore\n$ <span class=\"token function\">cat</span> .gitignore\n.env</code></pre></div>\n<p>이제 다시 <code>git status</code> 명령어를 쳐보면 <code>.env</code> 파일이 무시되고, <code>.gitignore</code> 파일이 Git으로 버전 관리할 파일로 잡히는 것을 볼 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">git</span> status\nOn branch master\n\nNo commits yet\n\nUntracked files:\n  <span class=\"token punctuation\">(</span>use <span class=\"token string\">\"git add &lt;file>...\"</span> to include <span class=\"token keyword\">in</span> what will be committed<span class=\"token punctuation\">)</span>\n\n\t.gitignore\n\ta.js\n\tb.js\n\tc.js\n\nnothing added to commit but untracked files present <span class=\"token punctuation\">(</span>use <span class=\"token string\">\"git add\"</span> to track<span class=\"token punctuation\">)</span></code></pre></div>\n<h2 id=\"최초-커밋-남기기\" style=\"position:relative;\"><a href=\"#%EC%B5%9C%EC%B4%88-%EC%BB%A4%EB%B0%8B-%EB%82%A8%EA%B8%B0%EA%B8%B0\" aria-label=\"최초 커밋 남기기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>최초 커밋 남기기</h2>\n<p>자, 이제 안전하게 생성한 Git 저장소의 첫번째 커밋을 남길 수 있습니다.</p>\n<p>먼저, <code>git add</code> 명령어로 디렉토리 내의 모든 파일이 Git으로 관리되도록 추가해줍니다. (<code>.env</code> 파일은 위에서 <code>.gitignore</code> 파일에 등록했으므로 당연히 제외가 되겠지요?)</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">git</span> <span class=\"token function\">add</span> -A\n$ <span class=\"token function\">git</span> status\nOn branch master\n\nNo commits yet\n\nChanges to be committed:\n  <span class=\"token punctuation\">(</span>use <span class=\"token string\">\"git rm --cached &lt;file>...\"</span> to unstage<span class=\"token punctuation\">)</span>\n\n\tnew file:   .gitignore\n\tnew file:   a.js\n\tnew file:   b.js\n\tnew file:   c.js</code></pre></div>\n<p>다음, <code>git commit</code> 명령어로 커밋을 생성하면서 메시지를 남깁니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">git</span> commit -m <span class=\"token string\">\"init commit\"</span>\n<span class=\"token punctuation\">[</span>master <span class=\"token punctuation\">(</span>root-commit<span class=\"token punctuation\">)</span> a48c527<span class=\"token punctuation\">]</span> init commit\n <span class=\"token number\">4</span> files changed, <span class=\"token number\">1</span> insertion<span class=\"token punctuation\">(</span>+<span class=\"token punctuation\">)</span>\n create mode <span class=\"token number\">100644</span> .gitignore\n create mode <span class=\"token number\">100644</span> a.js\n create mode <span class=\"token number\">100644</span> b.js\n create mode <span class=\"token number\">100644</span> c.js\n$ <span class=\"token function\">git</span> status\nOn branch master\nnothing to commit, working tree clean</code></pre></div>\n<h2 id=\"원격-저장소에-올리기\" style=\"position:relative;\"><a href=\"#%EC%9B%90%EA%B2%A9-%EC%A0%80%EC%9E%A5%EC%86%8C%EC%97%90-%EC%98%AC%EB%A6%AC%EA%B8%B0\" aria-label=\"원격 저장소에 올리기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>원격 저장소에 올리기</h2>\n<p>생성한 Git 저장소를 혼자서 로컬에서만 사용하실 분은 여기까지가 끝입니다.\n하지만, 많은 경우 Github와 같은 서비스에 원격 저장소를 만들어 놓고 다른 개발자들과 협업을 하는 경우가 많을 것입니다.</p>\n<p>먼저, Github에 원격 저장소를 하나 생성하고, <code>git remote</code> 명령어를 이용해서 로컬 저장소에 연결합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">git</span> remote <span class=\"token function\">add</span> origin https://github.com/<span class=\"token operator\">&lt;</span>본인 계정<span class=\"token operator\">></span>/our-project</code></pre></div>\n<p>마지막으로, <code>git push</code> 명령어를 사용해서 원격 저정소에 모든 파일을 업로드합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">git</span> push -u origin master\nEnumerating objects: <span class=\"token number\">4</span>, done.\nCounting objects: <span class=\"token number\">100</span>% <span class=\"token punctuation\">(</span><span class=\"token number\">4</span>/4<span class=\"token punctuation\">)</span>, done.\nDelta compression using up to <span class=\"token number\">12</span> threads.\nCompressing objects: <span class=\"token number\">100</span>% <span class=\"token punctuation\">(</span><span class=\"token number\">2</span>/2<span class=\"token punctuation\">)</span>, done.\nWriting objects: <span class=\"token number\">100</span>% <span class=\"token punctuation\">(</span><span class=\"token number\">4</span>/4<span class=\"token punctuation\">)</span>, <span class=\"token number\">264</span> bytes <span class=\"token operator\">|</span> <span class=\"token number\">264.00</span> KiB/s, done.\nTotal <span class=\"token number\">4</span> <span class=\"token punctuation\">(</span>delta <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>, reused <span class=\"token number\">0</span> <span class=\"token punctuation\">(</span>delta <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\nTo https://github.com/<span class=\"token operator\">&lt;</span>본인 계정<span class=\"token operator\">></span>/our-project\n * <span class=\"token punctuation\">[</span>new branch<span class=\"token punctuation\">]</span>      master -<span class=\"token operator\">></span> master\nBranch <span class=\"token string\">'master'</span> <span class=\"token builtin class-name\">set</span> up to track remote branch <span class=\"token string\">'master'</span> from <span class=\"token string\">'origin'</span><span class=\"token builtin class-name\">.</span></code></pre></div>\n<h2 id=\"마치면서\" style=\"position:relative;\"><a href=\"#%EB%A7%88%EC%B9%98%EB%A9%B4%EC%84%9C\" aria-label=\"마치면서 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>마치면서</h2>\n<p>이상으로 <code>git init</code> 명령어를 사용해서 간단한 Git 저장소의 생성해보고 추가적으로 챙겨야할 부분에 대해서 알아보았습니다.</p>","timeToRead":4,"fields":{"slug":"/git-init/","tags":["Git"]},"frontmatter":{"title":"git init 명령어로 Git 저장소 생성하기","date":"Sep 26, 2020"}},"next":{"fields":{"slug":"/react-downshift/"},"frontmatter":{"title":"[React] Downshift로 드롭다운(dropdown) 구현"}}}},"staticQueryHashes":["2168229929","2362167539","3056348342"]}