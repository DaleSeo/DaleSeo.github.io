{"componentChunkName":"component---src-templates-detail-template-jsx","path":"/js-timer/","result":{"pageContext":{"previous":null,"node":{"html":"<p>자바스크립트로 개발을 시작하게 되면 꼭 한번 씩은 만나게 되지만 별로 대수롭지 않게 넘어가는 함수 2개가 있습니다.\n바로 <code>setTimeout()</code> 함수와 <code>setInterval()</code> 함수인데요.\n이번 포스팅에서는 자바스크립트의 타이머를 사용하는 이 두 내장 함수에 대해서 한 번 알아보려고 합니다.</p>\n<h2 id=\"settimeout-사용법\" style=\"position:relative;\"><a href=\"#settimeout-%EC%82%AC%EC%9A%A9%EB%B2%95\" aria-label=\"settimeout 사용법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>setTimeout() 사용법</h2>\n<p>어떤 코드를 바로 실행하지 않고 일정 시간 기다린 후 실행해야하는 경우가 있는데요.\n이럴 때는 자바스크립트의 <code>setTimeout()</code> 함수를 사용할 수 있습니다.</p>\n<p><code>setTimeout()</code> 함수는 첫번째 인자로 실행할 코드를 담고 있는 함수를 받고, 두번째 인자로 지연 시간을 밀리초(ms) 단위로 받습니다.</p>\n<p>간단한 예로, 2초를 기다린 후에 어떤 문자열을 콘솔에 출력해보겠습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"2초 후에 실행됨\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token number\">2</span>초 후에 실행됨</code></pre></div>\n<p><code>setTimeout()</code> 함수는 세번째 인자부터는 가변 인자를 받는데요.\n첫번째 인자로 넘어온 함수가 인자를 받는 경우, 이 함수에 넘길 인자를 명시해주기 위해서 사용합니다.</p>\n<p>예를 들어, 두 개의 수를 인자로 받아 더한 값을 출력해주는 <code>add()</code>라는 함수에 인자로 <code>3</code>과 <code>4</code>를 넘겨 2초를 기다린 후에 호출해보겠습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">x<span class=\"token punctuation\">,</span> y</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">+</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span>add<span class=\"token punctuation\">,</span> <span class=\"token number\">2000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token number\">7</span></code></pre></div>\n<p><code>setTimeout()</code> 함수는 타임아웃 아이디(Timeout ID)라고 불리는 숫자를 반환하는데요.\n타임아웃 아이디는 <code>setTimeout()</code> 함수를 호출할 때 마다 내부적으로 생성되는 타이머 객체를 가리키고 있습니다.\n이 값을 인자로 <code>clearTimeout()</code> 함수를 호출하면 기다렸다가 실행될 코드를 취소할 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> timeoutId <span class=\"token operator\">=</span> <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"5초 후에 실행됨\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">clearTimeout</span><span class=\"token punctuation\">(</span>timeoutId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">// 아무 것도 출력 안 됨</code></pre></div>\n<h2 id=\"setinterval-사용법\" style=\"position:relative;\"><a href=\"#setinterval-%EC%82%AC%EC%9A%A9%EB%B2%95\" aria-label=\"setinterval 사용법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>setInterval() 사용법</h2>\n<p>웹페이지의 특정 부분을 주기적으로 업데이트해줘야 하거나, 어떤 API로 부터 변경된 데이터를 주기적으로 받아와야 하는 경우가 있는데요.\n이럴 때는 자바스크립트의 <code>setInterval()</code> 함수를 사용할 수 있습니다.</p>\n<p><code>setInterval()</code> 함수는 어떤 코드를 일정한 시간 간격을 두고 반복해서 실행하고 싶을 때 사용합니다.\n함수 API는 <code>setTimeout()</code> 함수와 대동소이한데요.\n첫번째 인자로 실행할 코드를 담고 있는 함수를 받고, 두번째 인자로 반복 주기를 밀리초(ms) 단위로 받습니다.</p>\n<p>간단한 예로, <code>setInterval()</code> 함수를 사용하여 콘솔에 현재 시간을 2초마다 출력해보겠습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">setInterval</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">Sun Dec <span class=\"token number\">12</span> <span class=\"token number\">2021</span> <span class=\"token number\">12</span>:29:06 GMT-0500 <span class=\"token punctuation\">(</span>Eastern Standard Time<span class=\"token punctuation\">)</span>\nSun Dec <span class=\"token number\">12</span> <span class=\"token number\">2021</span> <span class=\"token number\">12</span>:29:08 GMT-0500 <span class=\"token punctuation\">(</span>Eastern Standard Time<span class=\"token punctuation\">)</span>\nSun Dec <span class=\"token number\">12</span> <span class=\"token number\">2021</span> <span class=\"token number\">12</span>:29:10 GMT-0500 <span class=\"token punctuation\">(</span>Eastern Standard Time<span class=\"token punctuation\">)</span>\nSun Dec <span class=\"token number\">12</span> <span class=\"token number\">2021</span> <span class=\"token number\">12</span>:29:12 GMT-0500 <span class=\"token punctuation\">(</span>Eastern Standard Time<span class=\"token punctuation\">)</span>\nSun Dec <span class=\"token number\">12</span> <span class=\"token number\">2021</span> <span class=\"token number\">12</span>:29:14 GMT-0500 <span class=\"token punctuation\">(</span>Eastern Standard Time<span class=\"token punctuation\">)</span>\nSun Dec <span class=\"token number\">12</span> <span class=\"token number\">2021</span> <span class=\"token number\">12</span>:29:16 GMT-0500 <span class=\"token punctuation\">(</span>Eastern Standard Time<span class=\"token punctuation\">)</span>\nSun Dec <span class=\"token number\">12</span> <span class=\"token number\">2021</span> <span class=\"token number\">12</span>:29:18 GMT-0500 <span class=\"token punctuation\">(</span>Eastern Standard Time<span class=\"token punctuation\">)</span></code></pre></div>\n<p>다른 예로, 0과 9 사이의 수를 무작위로 생성하여 2초마다 출력해보겠습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">setInterval</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token number\">3</span>\n<span class=\"token number\">2</span>\n<span class=\"token number\">8</span>\n<span class=\"token number\">3</span>\n<span class=\"token number\">1</span>\n<span class=\"token number\">9</span>\n<span class=\"token number\">4</span>\n<span class=\"token number\">8</span>\n<span class=\"token number\">3</span>\n<span class=\"token number\">0</span>\n<span class=\"token number\">9</span>\n<span class=\"token number\">5</span>\n<span class=\"token number\">1</span>\n<span class=\"token number\">3</span>\n<span class=\"token number\">1</span></code></pre></div>\n<p>숫자를 변수에 저장해놓고 2초 마다 1씩 증가시키는 것도 가능합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> count <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">setInterval</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token operator\">++</span>count<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token number\">1</span>\n<span class=\"token number\">2</span>\n<span class=\"token number\">3</span>\n<span class=\"token number\">4</span>\n<span class=\"token number\">5</span>\n<span class=\"token number\">6</span>\n<span class=\"token number\">7</span>\n<span class=\"token number\">8</span>\n<span class=\"token number\">9</span>\n<span class=\"token number\">10</span></code></pre></div>\n<p><code>setInterval()</code> 함수는 인터벌 아이디(Interval ID)라고 불리는 숫자를 반환하는데요.\n인터벌 아이디는 <code>setInterval()</code> 함수를 호출할 때 마다 내부적으로 생석되는 타이머 객체를 가리키고 있습니다.\n이 값을 인자로 <code>clearInterval()</code> 함수를 호출하면 코드가 주기적으로 실행되는 것을 중단시킬 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token operator\">></span> <span class=\"token keyword\">const</span> intervalId <span class=\"token operator\">=</span> <span class=\"token function\">setInterval</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">&lt;</span> Sun Dec <span class=\"token number\">12</span> <span class=\"token number\">2021</span> <span class=\"token number\">12</span><span class=\"token operator\">:</span><span class=\"token number\">45</span><span class=\"token operator\">:</span><span class=\"token number\">31</span> <span class=\"token constant\">GMT</span><span class=\"token operator\">-</span><span class=\"token number\">0500</span> <span class=\"token punctuation\">(</span>Eastern Standard Time<span class=\"token punctuation\">)</span>\n<span class=\"token operator\">&lt;</span> Sun Dec <span class=\"token number\">12</span> <span class=\"token number\">2021</span> <span class=\"token number\">12</span><span class=\"token operator\">:</span><span class=\"token number\">45</span><span class=\"token operator\">:</span><span class=\"token number\">33</span> <span class=\"token constant\">GMT</span><span class=\"token operator\">-</span><span class=\"token number\">0500</span> <span class=\"token punctuation\">(</span>Eastern Standard Time<span class=\"token punctuation\">)</span>\n<span class=\"token operator\">&lt;</span> Sun Dec <span class=\"token number\">12</span> <span class=\"token number\">2021</span> <span class=\"token number\">12</span><span class=\"token operator\">:</span><span class=\"token number\">45</span><span class=\"token operator\">:</span><span class=\"token number\">35</span> <span class=\"token constant\">GMT</span><span class=\"token operator\">-</span><span class=\"token number\">0500</span> <span class=\"token punctuation\">(</span>Eastern Standard Time<span class=\"token punctuation\">)</span>\n<span class=\"token operator\">></span> <span class=\"token function\">clearInterval</span><span class=\"token punctuation\">(</span>intervalId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"마치면서\" style=\"position:relative;\"><a href=\"#%EB%A7%88%EC%B9%98%EB%A9%B4%EC%84%9C\" aria-label=\"마치면서 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>마치면서</h2>\n<p>지금까지 자바스크립트의 타이머를 사용하는 내장 함수인 <code>setTimeout()</code> 함수와 <code>setInterval()</code> 함수에 대해서 살펴보았습니다.</p>\n<p>마지막으로 <code>setTimeout()</code> 함수와 <code>setInterval()</code> 함수를 사용한 후에는 반드시 <code>clearTimeout()</code> 함수와 <code>clearInterval()</code> 함수를 사용해서 타이머를 청소해주는 습관을 들이시라고 말씀드리고 싶습니다.\n특히, SPA(Single Page Application)을 개발할 때는 이 부분이 메모리 누수(memory leak)로 이어질 수 있기 때문에 각별히 주의가 필요합니다.</p>","timeToRead":3,"fields":{"slug":"/js-timer/","tags":["JavaScript","async","setTimeout","setInterval"]},"frontmatter":{"title":"자바스크립트의 setTimeout()과 setInterval() 함수","date":"Dec 12, 2021"}},"next":{"fields":{"slug":"/react-pagination/"},"frontmatter":{"title":"React로 페이지네이션 UI 구현하기"}}}},"staticQueryHashes":["2362167539","3000541721","3056348342"]}