{
    "componentChunkName": "component---src-templates-detail-template-jsx",
    "path": "/github-dependabot/",
    "result": {"pageContext":{"previous":{"fields":{"slug":"/dale-ui-tech-stack/"},"frontmatter":{"title":"달레UI 디자인 시스템: 테크 스택 선정 과정 A to Z"}},"node":{"html":"<p>현대 소프트웨어 개발에서 의존성(Dependency)은 필수 불가결한 존재입니다.\n직접 구현해야 하는 코드를 줄여 생산성을 높여주지만, 관리되지 않고 방치된 의존성은 보안 취약점이나 호환성 문제로 이어지기 쉽죠.</p>\n<p>이번 글에서는 깃허브에서 제공하는 Dependabot을 통해 의존성 관리와 보안 업데이트를 어떻게 자동화할 수 있는지 알아보겠습니다.</p>\n<h2 id=\"dependabot이란\" style=\"position:relative;\"><a href=\"#dependabot%EC%9D%B4%EB%9E%80\" aria-label=\"dependabot이란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Dependabot이란?</h2>\n<p><img src=\"https://res.cloudinary.com/daleseo/image/upload/v1746993042/github-dependabot.webp\" alt=\"github-dependabot\"></p>\n<p>Dependabot은 깃허브에서 제공하는 보안 취약점 경보 및 의존성 업데이트 기능입니다.\n초기에는 독립 서비스였지만, 2019년 GitHub에 인수된 후 현재는 깃허브 플랫폼에 완전히 통합되어 무료로 사용할 수 있습니다.\n덕분에 Dependabot에 대한 접근성과 사용성이 크게 개선되어 복잡한 과정없이 코드 저장소에 간단한 설정만으로 바로 쓸 수 있습니다.</p>\n<p>Dependabot은 다음 세 가지 기능으로 이루어져 있습니다.</p>\n<ul>\n<li>Alerts(알람): 코드 저장소의 보안 취약점을 감지하여 경고합니다.</li>\n<li>Security Updates(보안 업데이트): 보안 취약점이 발견된 의존성을 업데이트하는 Pull Request을 자등으로 생성합니다.</li>\n<li>Version Updates(버전 업데이트): 보안과 무관하게 의존성을 최신 상태로 유지하기 Pull Request을 자등으로 생성합니다.</li>\n</ul>\n<p>npm이나 Maven, PyPI, RubyGems, Docker Hub 등과 같은 패키지 저장소를 통해 의존성을 내려받는 프로젝트는 모두 잠재적인 공급망 공격(Supply Chain Attack) 위험에 처해 있습니다.\nDependabot은 점점 정교해지고 있는 공급망 공격을 방어하고, 알려진 보안 취약점으로부터 프로젝트를 지킬 수 있는 강력한 보안 도구입니다.</p>\n<h2 id=\"dependabot-작동-원리\" style=\"position:relative;\"><a href=\"#dependabot-%EC%9E%91%EB%8F%99-%EC%9B%90%EB%A6%AC\" aria-label=\"dependabot 작동 원리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Dependabot 작동 원리</h2>\n<p>어떤 프로그래밍 언어의 생태계 속에서 소프트웨어 개발을 하든 의존성이 있는 프로젝트에는 패키지 설정과 잠금을 위한 파일이 존재하기 마련입니다.\n그리고 이 것은 해당 프로젝트에서 어떤 패키지 매니저를 사용하느냐에 따라 결정됩니다.</p>\n<p>예를 들어, 자바스크립트 프로젝트 <code>package.json</code>, <code>package-lock.json</code>, <code>yarn.lock</code>, <code>pnpm-lock.yaml</code>, <code>bun.lock</code>과 같은 파일이 있을 것이고,\n자바나 코틀린, 스칼라와 같이 JVM 계열의 언어를 사용하는 프로젝트라면 <code>pom.xml</code>, <code>build.gradle.kts</code>, <code>gradle.lockfile</code>, 과 같은 파일이 있을 것입니다.\n파이썬 프로젝트라면 <code>requirements.txt</code>와 같은 파일이 있겠죠.</p>\n<p>Dependabot은 코드 저장소에 있는 이러한 패키지 잠금 파일을 깃허브의 보안 데이터베이스와 비교하여 보안 취약점을 찾아내고, 설정에 따라 Pull Request도 자동으로 생성해줍니다.\n따라서 Dependabot을 제대로 사용하려면 현재 프로젝트가 어떤 패키지 저장소로 부터 의존성을 내려받고 어떤 패키지 매니저를 쓰고 있는지 파악하고 있어야 하며, 패키지 설정 및 잠금 파일의 위치도 정확히 알고 있어야 합니다.</p>\n<blockquote>\n<p>패키지 버전 잠금에 대한 자세한 내용은 <a href=\"/js-package-locks\">별도의 포스팅</a>로 다루었으니 참고 바랍니다.</p>\n</blockquote>\n<h2 id=\"dependabot-기능-제어\" style=\"position:relative;\"><a href=\"#dependabot-%EA%B8%B0%EB%8A%A5-%EC%A0%9C%EC%96%B4\" aria-label=\"dependabot 기능 제어 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Dependabot 기능 제어</h2>\n<p>Dependabot의 3가지 기능은 모두 저장소의 Settings 탭의 Advanced Security 메뉴에서 제어할 수 있습니다.\n설정 페이지의 URL 형식은 다음과 같습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">https://github.com/&lt;사용자 또는 조직>/&lt;저장소>/settings/security_analysis</code></pre></div>\n<p><img src=\"https://res.cloudinary.com/daleseo/image/upload/v1746398224/github-dependabot-settings.png\" alt=\"github-dependabot-settings\"></p>\n<p>GitHub에서 새로운 저장소를 만들면 Alerts 기능은 일부로 비활성화 시키지 않는 이상 기본으로 활성화되어 있고요.\nSecurity Updates와 Version Updates는 직접 활성화를 해줘야 합니다.\nVersion Updates의 경우 별도의 설정 파일도 필요한데, 이 부분에 대해서는 아래에서 다루겠습니다.</p>\n<h2 id=\"alerts-기능\" style=\"position:relative;\"><a href=\"#alerts-%EA%B8%B0%EB%8A%A5\" aria-label=\"alerts 기능 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Alerts 기능</h2>\n<p>단순히 코드 저장소에 존재하는 보안 취약점에 대해서 경보를 받고 싶다면 Dependabot의 Alerts 기능을 사용합니다.\n보안 취약점은 Security 탭의 Dependabot 메뉴를 통해서 확인할 수 있습니다.\n보안 경고 페이지의 URL 형식은 다음과 같습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">https://github.com/&lt;사용자 또는 조직>/&lt;저장소>/demo/security/dependabot</code></pre></div>\n<p><img src=\"https://res.cloudinary.com/daleseo/image/upload/v1746397977/github-dependabot-alerts.png\" alt=\"github-dependabot-alerts\"></p>\n<p>목록 페이지에서는 현재 코드 저장소에 어떤 보안 취약점이 있고 과거에 어떤 보안 취약점을 조치했는지 알 수 있습니다.\n뿐만 아니라 패키지 이름, 생태계, 패키지 관리자 파일, 심각도 별로 필터링 및 정렬도 지원해서 보안 취약점이 많은 경우에도 파악이 용이합니다.</p>\n<p>경고 하나를 클릭하여 상세 페이지로 들어가면 해당 보안 취약점에 대한 CVE 또는 GHSA에 참조를 포함한 아주 자세한 정보를 확인해볼 수 있습니다.\n어떤 이유로든 보안 취약점을 조치할 수 없는 상황이라면 이유를 선택하고 해당 경보를 해제할 수도 있습니다.</p>\n<p><img src=\"https://res.cloudinary.com/daleseo/image/upload/v1746403258/github-dependabot-alerts-details.png\" alt=\"github-dependabot-alerts-details\"></p>\n<p>바로 다음에 다룰 Security Updates 기능이 활성화되어 있다면 여기서 바로 Pull Request를 생성할 수 있습니다.</p>\n<h2 id=\"security-updates-기능\" style=\"position:relative;\"><a href=\"#security-updates-%EA%B8%B0%EB%8A%A5\" aria-label=\"security updates 기능 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Security Updates 기능</h2>\n<p>보안 경고를 받더라도 어떤 패키지를 어떻게 업데이트해야 할지 보안 전문가가 아니라면 모를 때가 많습니다.\n이때 유용한 것이 바로 Dependabot의 Security Updates 기능인데요.\n이 기능을 켜놓으면 Dependabot이 알아서 어떤 패키지를 어떤 버전으로 업데이트해야하는지 파악하여 PR을 생성해줍니다.</p>\n<p><img src=\"https://res.cloudinary.com/daleseo/image/upload/v1746403774/github-dependabot-security-updates.webp\" alt=\"github-dependabot-security-updates\"></p>\n<p>너무 당연한 얘기이겠지만 보안 위험을 최소화하기 위해서 Security Updates를 통해서 생성된 Pull Request는 가능한 신속하게 검토하고 병합하는 것이 권장됩니다.</p>\n<h2 id=\"version-updates-기능\" style=\"position:relative;\"><a href=\"#version-updates-%EA%B8%B0%EB%8A%A5\" aria-label=\"version updates 기능 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Version Updates 기능</h2>\n<p>Version Updates 기능은 보안과 관계없이 프로젝트이 모든 의존성을 지속적으로 최신 상태로 유지하기 위한 기능입니다.</p>\n<p>Dependabot의 다른 기능과 달리 Version Updates을 활성화하려면 별도의 설정 파일을 필요한데요.\n코드 저장소의 <code>.github</code> 디렉토리 안에 <code>dependabot.yml</code> 파일을 생성해야 합니다.</p>\n<p>예를 들어, 패키지 매니저로 npm을 사용하는 React 프로젝트의 경우 다음과 같이 설정을 할 수 있습니다.</p>\n<ul>\n<li>매일 업데이트를 하며, Pull Request에는 <code>deps</code> 태그를 답니다.</li>\n<li>React 관련 패키지는 묶어서 하나의 Pull Request로 올립니다.</li>\n<li>Testing Library 관련 패키지는 자동으로 업데이트하지 않습니다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"yml\"><pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token key atrule\">updates</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">package-ecosystem</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"npm\"</span>\n    <span class=\"token key atrule\">directory</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"/\"</span>\n    <span class=\"token key atrule\">schedule</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">interval</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"daily\"</span>\n    <span class=\"token key atrule\">labels</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token string\">\"deps\"</span>\n    <span class=\"token key atrule\">react</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">patterns</span><span class=\"token punctuation\">:</span>\n        <span class=\"token punctuation\">-</span> <span class=\"token string\">\"react\"</span>\n        <span class=\"token punctuation\">-</span> <span class=\"token string\">\"react-dom\"</span>\n        <span class=\"token punctuation\">-</span> <span class=\"token string\">\"@types/react*\"</span>\n      <span class=\"token key atrule\">update-types</span><span class=\"token punctuation\">:</span>\n        <span class=\"token punctuation\">-</span> <span class=\"token string\">\"minor\"</span>\n        <span class=\"token punctuation\">-</span> <span class=\"token string\">\"patch\"</span>\n    <span class=\"token key atrule\">ignore</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">dependency-name</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"@testing-library*\"</span></code></pre></div>\n<p>Dependabot은 하나의 코드 저장소에서 여러 생태계를 동시에 지원하기 때문에 모노리포(monorepo)에서도 사용하는데 문제가 없습니다.</p>\n<p>예를 들어서, 자바스크립트와 루비를 동시에 사용하는 프로젝트에서는 다음과 같이 업데이트 주기를 다르게 설정할 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"yml\"><pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token key atrule\">version</span><span class=\"token punctuation\">:</span> <span class=\"token number\">2</span>\n<span class=\"token key atrule\">updates</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">package-ecosystem</span><span class=\"token punctuation\">:</span> npm\n    <span class=\"token key atrule\">directory</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"/javascript\"</span>\n    <span class=\"token key atrule\">schedule</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">interval</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"weekly\"</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">package-ecosystem</span><span class=\"token punctuation\">:</span> bundler\n    <span class=\"token key atrule\">directory</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"/ruby\"</span>\n    <span class=\"token key atrule\">schedule</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">interval</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"monthly\"</span></code></pre></div>\n<p>그 밖에 어떤 설정이 가능한지는 <a href=\"https://docs.github.com/en/code-security/dependabot/working-with-dependabot/dependabot-options-reference\">공식 레퍼런스 문서</a>를 참고바랍니다.</p>\n<p><code>dependabot.yml</code> 파일을 생성하고 Version Updates 기능을 활성화하면 설정해놓은 스케줄에 따라서 코드 저장소에 자동으로 Pull Request가 올라오게 됩니다.</p>\n<p><img src=\"https://res.cloudinary.com/daleseo/image/upload/v1746404516/github-dependabot-version-updates.png\" alt=\"github-dependabot-version-updates\"></p>\n<p>Dependabot이 생성해준 Pull Request는 저장소의 기본 브랜치에 맞춰서 자동으로 업데이트가 되서 매우 편리합니다.</p>\n<h2 id=\"주의-사항\" style=\"position:relative;\"><a href=\"#%EC%A3%BC%EC%9D%98-%EC%82%AC%ED%95%AD\" aria-label=\"주의 사항 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>주의 사항</h2>\n<p>Security Updates나 Version Updates을 통해서 자동으로 생성된 Pull Request가 병합했을 때 소프트웨어가 정상적으로 작동할지는 Dependabot이 보장하지 않습니다.\n그러므로 반드시 개발자가 새로운 버전과 호환성 문제가 없는지를 확인하고 깨지는 부분에 대해서 적절한 조치를 취한 후에 Pull Request를 병합해야 합니다.\n특히 major나 minor 버전이 업데이트될 때는 위험이 더 크므로 각별히 주의가 필요합니다.</p>\n<p>Dependabot이 자동으로 생성해준 Pull Request을 사람이 임의로 건드리면 Dependabot은 해당 PR을 더 이상 자동으로 관리해주지 않습니다.\n따라서 가급적 <code>@dependabot rebase</code>나 <code>@dependabot recreate</code>와 같은 코멘트를 PR에 달아서 Dependabot에게 원하시는 작업을 명령하는 방식으로 사용해주세요.</p>\n<h2 id=\"마치며\" style=\"position:relative;\"><a href=\"#%EB%A7%88%EC%B9%98%EB%A9%B0\" aria-label=\"마치며 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>마치며</h2>\n<p>지금까지 깃허브에서 제공하는 Dependabot을 통해서 어떻게 보안 취약점 관리하고 의존성 업데이트를 자동화할 수 있는지 알아보았습니다.\nDependabot를 잘 활용하셔서 최소한의 노력으로 여러분의 프로젝트를 보안 취약점으로 부터 보호하고 항상 패키지를 최신 상태로 유지하실 수 있으셨으면 좋겠습니다.</p>","timeToRead":4,"fields":{"slug":"/github-dependabot/","tags":["GitHub","Dependabot"]},"frontmatter":{"title":"Dependabot을 통한 안전한 의존성 관리","date":"May 4, 2025"}},"next":{"fields":{"slug":"/what-is-good-about-working-abroad/"},"frontmatter":{"title":"🌎 해외에서 일하면 뭐가 좋을까요❓"}}}},
    "staticQueryHashes": ["2168229929","2362167539","3056348342"]}