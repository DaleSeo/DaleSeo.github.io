{
    "componentChunkName": "component---src-templates-detail-template-jsx",
    "path": "/python-type-annotations/",
    "result": {"pageContext":{"previous":{"fields":{"slug":"/docker-compose/"},"frontmatter":{"title":"Docker Compose 커맨드 사용법"}},"node":{"html":"<p>파이썬 버전 3.5에 추가된 타입 어노테이션(type annotation)이 점점 많은 파이썬 프로젝트에서 사용되고 있는 추세입니다.\n정적(static) 프로그래밍 언어에서 흔히 볼 수 있는 타입 체킹(type checking)도 아니고 파이썬의 타입 힌팅(type hinting)는 도대체 무엇일까요?</p>\n<p>이번 포스팅에서는 파이썬에서 타입 힌팅(type hinting)의 개념과 파이썬 코드에 타입 어노테이션(type annotation)을 어떻게 추가하는지 알아보겠습니다.</p>\n<h2 id=\"파이썬은-동적-프로그래밍-언어\" style=\"position:relative;\"><a href=\"#%ED%8C%8C%EC%9D%B4%EC%8D%AC%EC%9D%80-%EB%8F%99%EC%A0%81-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D-%EC%96%B8%EC%96%B4\" aria-label=\"파이썬은 동적 프로그래밍 언어 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>파이썬은 동적 프로그래밍 언어</h2>\n<p>동적(dynamic) 프로그래밍 언어인 파이썬에서는 인터프리터(interpreter)가 코드를 실행하면서 타입(type)을 추론합니다.\n또한 파이썬에서 변수의 타입(type)은 고정되어 있지 않기 때문에 개발자가 원하면 자유롭게 바꿀 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> no <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>no<span class=\"token punctuation\">)</span>\n<span class=\"token operator\">&lt;</span><span class=\"token keyword\">class</span> <span class=\"token string\">'int'</span><span class=\"token operator\">></span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> no <span class=\"token operator\">=</span> <span class=\"token string\">\"1\"</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>no<span class=\"token punctuation\">)</span>\n<span class=\"token operator\">&lt;</span><span class=\"token keyword\">class</span> <span class=\"token string\">'str'</span><span class=\"token operator\">></span></code></pre></div>\n<p>위 코드를 보면 <code>no</code> 변수의 타입이 처음에는 <code>int</code>였다가 <code>str</code>으로 바뀐 것을 알 수 있습니다.\n자바와 같은 정적(static) 프로그래밍 언어에서는 상상도 하기 힘든 일이며 이런 코드는 컴파일(compile)조차 되지 않습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token comment\">/* java */</span>\n<span class=\"token keyword\">int</span> no <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\nno <span class=\"token operator\">=</span> <span class=\"token string\">\"1\"</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// compile error!!</span></code></pre></div>\n<p>이렇게 유연한 파이썬의 타입 처리는 타입을 명시적으로 표시할 필요가 없기 때문에 파이썬으로 우리는 다른 언어에 비해 매우 간단명료한 코드를 작성할 수 있는 것이지요.</p>\n<h2 id=\"타입-어노테이션힌트\" style=\"position:relative;\"><a href=\"#%ED%83%80%EC%9E%85-%EC%96%B4%EB%85%B8%ED%85%8C%EC%9D%B4%EC%85%98%ED%9E%8C%ED%8A%B8\" aria-label=\"타입 어노테이션힌트 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>타입 어노테이션/힌트?</h2>\n<p>타입에 대한 파이썬의 유연함은 일회성 스크립트나 소규모의 애플리케이션을 빠르게 개발할 때는 큰 장점으로 작용합니다.\n하지만 애플리케이션이 규모가 커지게 되면 이러한 파이썬의 다이나믹함이 치명적인 버그로 이어질 확률이 높아지게 되며 애플리케이션 안정성에 위험 요소가 되기도 합니다.\n따라서 중규모 이상의 파이썬 프로젝트에서는 소위 타입 힌팅(type hinting)이라는 개발 프로세스를 도입하여 사용하는 경우가 많습니다.</p>\n<p>타입 힌팅(type hinting)은 말 그대로 파이썬 코드를 작성할 때 타입에 대한 메타 정보를 제공하는 것입니다.\n파이썬에 타입 힌팅이 추가되기 전에는 타입을 표시하려면 주석(comments)을 이용했어야 했었습니다.\n이 방법은 코드를 읽는 개발자에게는 약간의 도움이 될지는 모르겠으나 정해진 표준이 없었고 일반 주석과 구분이 어려웠습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\">num <span class=\"token operator\">=</span> <span class=\"token number\">1</span>  <span class=\"token comment\"># type: int</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">repeat</span><span class=\"token punctuation\">(</span>message<span class=\"token punctuation\">,</span> times<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token comment\"># type: (str, int) -> list[str]</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span>message<span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> times</code></pre></div>\n<p>반면에 타입 힌팅에서는 타입 어노테이션(annotation)이라는 새로운 방법으로 파이썬 코드의 타입 표시를 표준화합니다.\n따라서 코드 편집기(IDE)나 린터(linter)에서도 해석할 수 있도록 고안되었으며, 코드 자동 완성이나 정적 타입 체킹에도 활용되고 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\">num<span class=\"token punctuation\">:</span> <span class=\"token builtin\">int</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">repeat</span><span class=\"token punctuation\">(</span>message<span class=\"token punctuation\">:</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">,</span> times<span class=\"token punctuation\">:</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span>message<span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> times</code></pre></div>\n<p>여기서 주의 사항은 타입 힌팅은 언어 레벨에서 실질적으로 어떠한 제약 사항도 강요되지 않는다는 것입니다.\n다시 말해, 변수나 함수에 추가한 타입 어노테이션이 부정확한다고 해서 경고나 오류가 발생하는 것은 아닙니다.</p>\n<p>타입 힌팅(type hinting)은 우리가 작성한 코드를 다른 개발자가 읽기 수월하게 해주고, 우리가 사용하는 개발 도구가 활용할 수 있도록 도와줄 뿐입니다.\n여기서 한 걸음 더 나아가, 좀 더 견고한 프로그램 개발하기 위해서 애플리케이션을 배포하기 전에 타입 체킹(type checking)을 수행할 수도 있습니다.</p>\n<blockquote>\n<p>파이썬에서 타입 검사기(type checker)로 가장 많이 사용되는 도구인 Mypy에 대해서는 <a href=\"/python-mypy/\">별도 포스팅</a>에서 자세히 다루고 있으니 참고 바랍니다.</p>\n</blockquote>\n<h2 id=\"변수-타입-어노테이션\" style=\"position:relative;\"><a href=\"#%EB%B3%80%EC%88%98-%ED%83%80%EC%9E%85-%EC%96%B4%EB%85%B8%ED%85%8C%EC%9D%B4%EC%85%98\" aria-label=\"변수 타입 어노테이션 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>변수 타입 어노테이션</h2>\n<p>먼저 매우 간단한 변수에 타입 어노테이션을 추가하는 방법에 대해서 알아보겠습니다.\n변수 이름 뒤에 콜론(<code>:</code>)을 붙이고 타입을 명시해주면 됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\">name<span class=\"token punctuation\">:</span> <span class=\"token builtin\">str</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"John Doe\"</span>\n\nage<span class=\"token punctuation\">:</span> <span class=\"token builtin\">int</span> <span class=\"token operator\">=</span> <span class=\"token number\">25</span>\n\n<span class=\"token comment\"># 파이썬 3.8 이하</span>\nemails<span class=\"token punctuation\">:</span> <span class=\"token builtin\">list</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"john1@doe.com\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"john2@doe.com\"</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token comment\"># 파이썬 3.9 이상</span>\nemails<span class=\"token punctuation\">:</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"john1@doe.com\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"john2@doe.com\"</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token comment\"># 파이썬 3.8 이하</span>\naddress<span class=\"token punctuation\">:</span> <span class=\"token builtin\">dict</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token string\">\"street\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"54560 Daugherty Brooks Suite 581\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"city\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Stokesmouth\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"state\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"NM\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"zip\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"80556\"</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\"># 파이썬 3.9 이상</span>\naddress<span class=\"token punctuation\">:</span> <span class=\"token builtin\">dict</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token string\">\"street\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"54560 Daugherty Brooks Suite 581\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"city\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Stokesmouth\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"state\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"NM\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"zip\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"80556\"</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"함수-타입-어노테이션\" style=\"position:relative;\"><a href=\"#%ED%95%A8%EC%88%98-%ED%83%80%EC%9E%85-%EC%96%B4%EB%85%B8%ED%85%8C%EC%9D%B4%EC%85%98\" aria-label=\"함수 타입 어노테이션 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>함수 타입 어노테이션</h2>\n<p>함수에 타입 힌팅 적용할 때는 인자 타입과 반환 타입, 이렇게 두 곳에 추가해줄 수 있습니다.</p>\n<p>인자에 타입 어노테이션을 추가할 때는 변수와 동일한 문법을 사용하며, 반환값에 대한 타입을 추가할 때는 화살표(<code>-></code>)를 사용합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token keyword\">def</span> 함수명<span class=\"token punctuation\">(</span><span class=\"token operator\">&lt;</span>필수 인자<span class=\"token operator\">></span><span class=\"token punctuation\">:</span> <span class=\"token operator\">&lt;</span>인자 타입<span class=\"token operator\">></span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&lt;</span>선택 인자<span class=\"token operator\">></span><span class=\"token punctuation\">:</span> <span class=\"token operator\">&lt;</span>인자 타입<span class=\"token operator\">></span> <span class=\"token operator\">=</span> <span class=\"token operator\">&lt;</span>기본값<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token operator\">&lt;</span>반환 타입<span class=\"token operator\">></span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></code></pre></div>\n<p>예를 들면,</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token keyword\">def</span> <span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">:</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">plus</span><span class=\"token punctuation\">(</span>num1<span class=\"token punctuation\">:</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> num2<span class=\"token punctuation\">:</span> <span class=\"token builtin\">float</span> <span class=\"token operator\">=</span> <span class=\"token number\">3.5</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token builtin\">float</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> num1 <span class=\"token operator\">+</span> num2\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">greet</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">:</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hi! \"</span> <span class=\"token operator\">+</span> name<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 파이썬 3.8 이하</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">repeat</span><span class=\"token punctuation\">(</span>message<span class=\"token punctuation\">:</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">,</span> times<span class=\"token punctuation\">:</span> <span class=\"token builtin\">int</span> <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span>message<span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> times\n\n<span class=\"token comment\"># 파이썬 3.9 이상</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">repeat</span><span class=\"token punctuation\">(</span>message<span class=\"token punctuation\">:</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">,</span> times<span class=\"token punctuation\">:</span> <span class=\"token builtin\">int</span> <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span>message<span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> times</code></pre></div>\n<p>참고로 콜론(<code>:</code>)과 화살표(<code>-></code>)를 사용할 때는 파이썬의 관행을 따라 콜론은 뒤에만 한 칸을 뛰우고, 화살표는 앞뒤로 한 칸을 띄웁니다.</p>\n<h2 id=\"typing-모듈\" style=\"position:relative;\"><a href=\"#typing-%EB%AA%A8%EB%93%88\" aria-label=\"typing 모듈 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>typing 모듈</h2>\n<p>내장 타입을 이용해서 좀 더 복잡한 타입 어노테이션을 추가할 때는 스탠다드 라이브러리의 typing 모듈을 사용할 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token keyword\">from</span> typing <span class=\"token keyword\">import</span> Dict<span class=\"token punctuation\">,</span> List<span class=\"token punctuation\">,</span> Optional<span class=\"token punctuation\">,</span> Set<span class=\"token punctuation\">,</span> Tuple<span class=\"token punctuation\">,</span> Union\n\nnums<span class=\"token punctuation\">:</span> List<span class=\"token punctuation\">[</span>Optional<span class=\"token punctuation\">[</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span>\n\nunique_nums<span class=\"token punctuation\">:</span> Set<span class=\"token punctuation\">[</span>Union<span class=\"token punctuation\">[</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">float</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7.5</span><span class=\"token punctuation\">}</span>\n\nvision<span class=\"token punctuation\">:</span> Dict<span class=\"token punctuation\">[</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">float</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token string\">\"left\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"right\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0.9</span><span class=\"token punctuation\">}</span>\n\njohn<span class=\"token punctuation\">:</span> Tuple<span class=\"token punctuation\">[</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">,</span> List<span class=\"token punctuation\">[</span><span class=\"token builtin\">float</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">25</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"John Doe\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.9</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></code></pre></div>\n<blockquote>\n<p>typing 내장 모듈에 대한 자세한 설명은 <a href=\"/python-typing/\">관련 포스팅</a>를 참고 바랍니다.</p>\n</blockquote>\n<h2 id=\"사용자-정의-타입-힌팅\" style=\"position:relative;\"><a href=\"#%EC%82%AC%EC%9A%A9%EC%9E%90-%EC%A0%95%EC%9D%98-%ED%83%80%EC%9E%85-%ED%9E%8C%ED%8C%85\" aria-label=\"사용자 정의 타입 힌팅 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>사용자 정의 타입 힌팅</h2>\n<p>내장 타입 뿐만 아니라 사용자 클래스에 대한 타입 어노테이션도 동일한 방법으로 추가할 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">User</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">find_user</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">id</span><span class=\"token punctuation\">:</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> User<span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">update_user</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">:</span> User<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> User<span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></code></pre></div>\n<h2 id=\"타입-어노테이션-검사\" style=\"position:relative;\"><a href=\"#%ED%83%80%EC%9E%85-%EC%96%B4%EB%85%B8%ED%85%8C%EC%9D%B4%EC%85%98-%EA%B2%80%EC%82%AC\" aria-label=\"타입 어노테이션 검사 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>타입 어노테이션 검사</h2>\n<p>타입 힌팅을 하다보면 종종 코드에 추가한 타입 어노테이션을 검사하고 싶을 때는 <code>__annotations__</code> 내장 사전 객체를 사용하면 됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> __annotations__\n<span class=\"token punctuation\">{</span><span class=\"token string\">'no'</span><span class=\"token punctuation\">:</span> <span class=\"token operator\">&lt;</span><span class=\"token keyword\">class</span> <span class=\"token string\">'int'</span><span class=\"token operator\">></span><span class=\"token punctuation\">,</span> <span class=\"token string\">'name'</span><span class=\"token punctuation\">:</span> <span class=\"token operator\">&lt;</span><span class=\"token keyword\">class</span> <span class=\"token string\">'str'</span><span class=\"token operator\">></span><span class=\"token punctuation\">,</span> <span class=\"token string\">'age'</span><span class=\"token punctuation\">:</span> <span class=\"token operator\">&lt;</span><span class=\"token keyword\">class</span> <span class=\"token string\">'int'</span><span class=\"token operator\">></span><span class=\"token punctuation\">,</span> <span class=\"token string\">'address'</span><span class=\"token punctuation\">:</span> <span class=\"token operator\">&lt;</span><span class=\"token keyword\">class</span> <span class=\"token string\">'dict'</span><span class=\"token operator\">></span><span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> repeat<span class=\"token punctuation\">.</span>__annotations__\n<span class=\"token punctuation\">{</span><span class=\"token string\">'message'</span><span class=\"token punctuation\">:</span> <span class=\"token operator\">&lt;</span><span class=\"token keyword\">class</span> <span class=\"token string\">'str'</span><span class=\"token operator\">></span><span class=\"token punctuation\">,</span> <span class=\"token string\">'times'</span><span class=\"token punctuation\">:</span> <span class=\"token operator\">&lt;</span><span class=\"token keyword\">class</span> <span class=\"token string\">'int'</span><span class=\"token operator\">></span><span class=\"token punctuation\">,</span> <span class=\"token string\">'return'</span><span class=\"token punctuation\">:</span> <span class=\"token operator\">&lt;</span><span class=\"token keyword\">class</span> <span class=\"token string\">'list'</span><span class=\"token operator\">></span><span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"마치면서\" style=\"position:relative;\"><a href=\"#%EB%A7%88%EC%B9%98%EB%A9%B4%EC%84%9C\" aria-label=\"마치면서 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>마치면서</h2>\n<p>지금까지 파이썬에서 타입 힌팅(type hinting)의 개념과 파이썬 코드에 타입 어노테이션(type annotation)을 어떻게 추가하는지 알아보았습니다.</p>\n<p>타입 힌팅은 비강제적이고 선택적으로 적용할 수 있기 때문에 모든 파이썬 프로젝트에서 부담없이 점진적으로 도입할 수 있습니다.\n따라서 신규 프로젝트 뿐만 아니라 기존 프로젝트에서도 코드 가독성과 개발 도구의 효율성을 위해서 고려해보셨으면 좋겠습니다.</p>\n<p>다음 포스팅에서는 실질적인 코드 품질에 도움이 되는 파이썬의 타입 체킹(type checking)에 대해서 다뤄보도록 하겠습니다.</p>","timeToRead":5,"fields":{"slug":"/python-type-annotations/","tags":["Python","파이썬","typing","TypeAnnotation","TypeHint"]},"frontmatter":{"title":"파이썬의 타입 어노테이션과 힌트","date":"May 29, 2020"}},"next":{"fields":{"slug":"/docker-compose-file/"},"frontmatter":{"title":"Docker Compose 설정 방법"}}}},
    "staticQueryHashes": ["2168229929","2362167539","3056348342"]}