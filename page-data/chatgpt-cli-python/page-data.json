{
    "componentChunkName": "component---src-templates-detail-template-jsx",
    "path": "/chatgpt-cli-python/",
    "result": {"pageContext":{"previous":{"fields":{"slug":"/nestjs-testing/"},"frontmatter":{"title":"Jest와 Supertest 활용한 NestJS 테스트"}},"node":{"html":"<p>이번 포스팅에서는 ChatGPT API를 활용하여 파이썬으로 GhatGPT와 유사하지만 터미널 상에서 돌아가는 간단한 챗앱을 구현해보겠습니다.</p>\n<h2 id=\"openai-api-키-설정\" style=\"position:relative;\"><a href=\"#openai-api-%ED%82%A4-%EC%84%A4%EC%A0%95\" aria-label=\"openai api 키 설정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>OpenAI API 키 설정</h2>\n<blockquote>\n<p>OpenAI에서 회원 가입 후에 API 키를 발급받는 방법은 <a href=\"/chatgpt-api-keys/\">별도 포스팅</a>에서 자세히 다루었으니 참고 바랍니다.</p>\n</blockquote>\n<p>사전 준비로 터미널을 열고 <code>OPENAI_API_KEY</code>라는 환경 변수에 OpenAI에서 발급받은 API 키를 설정해줍니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">OPENAI_API_KEY</span><span class=\"token operator\">=</span>sk-<span class=\"token punctuation\">..</span>.f4ZT\n$ <span class=\"token builtin class-name\">echo</span> <span class=\"token variable\">$OPENAI_API_KEY</span>\nsk-<span class=\"token punctuation\">..</span>.f4ZT</code></pre></div>\n<p>이렇게 API 키를 환경 변수로 저장해놓으면 Python 코드를 실행할 때 <code>os</code> 모듈의 <code>getenv()</code> 함수를 통해 쉽게 환경 변수를 읽어올 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\">$ python\nPython <span class=\"token number\">3.11</span><span class=\"token number\">.2</span> <span class=\"token punctuation\">(</span>main<span class=\"token punctuation\">,</span> Apr  <span class=\"token number\">7</span> <span class=\"token number\">2023</span><span class=\"token punctuation\">,</span> <span class=\"token number\">15</span><span class=\"token punctuation\">:</span><span class=\"token number\">52</span><span class=\"token punctuation\">:</span><span class=\"token number\">33</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">[</span>Clang <span class=\"token number\">14.0</span><span class=\"token number\">.3</span> <span class=\"token punctuation\">(</span>clang<span class=\"token operator\">-</span><span class=\"token number\">1403.0</span><span class=\"token number\">.22</span><span class=\"token number\">.14</span><span class=\"token number\">.1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> on darwin\nType <span class=\"token string\">\"help\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"copyright\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"credits\"</span> <span class=\"token keyword\">or</span> <span class=\"token string\">\"license\"</span> <span class=\"token keyword\">for</span> more information<span class=\"token punctuation\">.</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">import</span> os\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> os<span class=\"token punctuation\">.</span>getenv<span class=\"token punctuation\">(</span><span class=\"token string\">\"OPENAI_API_KEY\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token string\">'=sk-...f4ZT'</span></code></pre></div>\n<blockquote>\n<p>Python에서 환경 변수를 다루는 방법에 대해서는 <a href=\"/python-os-environ/\">관련 포스팅</a>을 참고 바랍니다.</p>\n</blockquote>\n<h2 id=\"chatgpt-api-호출\" style=\"position:relative;\"><a href=\"#chatgpt-api-%ED%98%B8%EC%B6%9C\" aria-label=\"chatgpt api 호출 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ChatGPT API 호출</h2>\n<p>지금부터 <code>chat.py</code> 파일을 생성하고 그 안에 ChatGPT API 호출하기 위한 파이썬 코드를 작성하겠습니다.</p>\n<p>우선 터미널을 열고 파이썬의 패키지 매니저인 pip를 사용하여 <code>requests</code>라는 패키지를 설치해줍니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ pip <span class=\"token function\">install</span> requests</code></pre></div>\n<blockquote>\n<p>파이썬으로 HTTP 통신이 필요한 프로그램을 작성할 때 많이 사용되는 라이브러리인 requests에 대해서는 <a href=\"/python-requests/\">별도 포스팅</a>에서 자세히 다루고 있으니 참고 바랍니다.</p>\n</blockquote>\n<p>이제 <code>requests</code> 모듈의 <code>post()</code> 함수를 이용해서 ChatGPT API에 <code>야!</code>라는 메시지를 전송해보겠습니다.\n이 때 환경 변수로 설정해놓은 API 키를 빼먹지 말고 헤더로 함께 넘겨주셔야 합니다.\n인공지능 모델로는 최근에 많이 사용되는 <code>gpt-3.5-turbo</code>를 사용하겠습니다.</p>\n<div class=\"gatsby-code-title\">chat.py</div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> os\n<span class=\"token keyword\">import</span> requests\n\nresponse <span class=\"token operator\">=</span> requests<span class=\"token punctuation\">.</span><span class=\"token function\">post</span><span class=\"token punctuation\">(</span>\n    <span class=\"token string\">\"https://api.openai.com/v1/chat/completions\"</span><span class=\"token punctuation\">,</span>\n    headers<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token string-property property\">\"Authorization\"</span><span class=\"token operator\">:</span> f<span class=\"token string\">\"Bearer {os.getenv('OPENAI_API_KEY')}\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    json<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>\n        <span class=\"token string-property property\">\"model\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"gpt-3.5-turbo\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string-property property\">\"messages\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span><span class=\"token string-property property\">\"role\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"user\"</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">\"content\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"야!\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">)</span>\n\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>ChatGPT API로 부터 사전의 형태로 응답된 결과를 콘솔에 출력해보면 <code>choices</code> 키 안에 답변이 들어있는 것을 볼 수 있습니다.</p>\n<div class=\"gatsby-code-title\">터미널</div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">node</span> chat.js\n<span class=\"token punctuation\">{</span><span class=\"token string\">'id'</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">'chatcmpl-77YyHZ3pjApero1ylATUbrQ78TBVd'</span>, <span class=\"token string\">'object'</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">'chat.completion'</span>, <span class=\"token string\">'created'</span><span class=\"token builtin class-name\">:</span> <span class=\"token number\">1682037081</span>, <span class=\"token string\">'model'</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">'gpt-3.5-turbo-0301'</span>, <span class=\"token string\">'usage'</span><span class=\"token builtin class-name\">:</span> <span class=\"token punctuation\">{</span><span class=\"token string\">'prompt_tokens'</span><span class=\"token builtin class-name\">:</span> <span class=\"token number\">10</span>, <span class=\"token string\">'completion_tokens'</span><span class=\"token builtin class-name\">:</span> <span class=\"token number\">27</span>, <span class=\"token string\">'total_tokens'</span><span class=\"token builtin class-name\">:</span> <span class=\"token number\">37</span><span class=\"token punctuation\">}</span>, <span class=\"token string\">'choices'</span><span class=\"token builtin class-name\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span><span class=\"token string\">'message'</span><span class=\"token builtin class-name\">:</span> <span class=\"token punctuation\">{</span><span class=\"token string\">'role'</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">'assistant'</span>, <span class=\"token string\">'content'</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">'저는 AI 어시스턴트입니다. 무엇을 도와드릴까요?'</span><span class=\"token punctuation\">}</span>, <span class=\"token string\">'finish_reason'</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">'stop'</span>, <span class=\"token string\">'index'</span><span class=\"token builtin class-name\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"커맨드-라인-인터페이스-구현\" style=\"position:relative;\"><a href=\"#%EC%BB%A4%EB%A7%A8%EB%93%9C-%EB%9D%BC%EC%9D%B8-%EC%9D%B8%ED%84%B0%ED%8E%98%EC%9D%B4%EC%8A%A4-%EA%B5%AC%ED%98%84\" aria-label=\"커맨드 라인 인터페이스 구현 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>커맨드 라인 인터페이스 구현</h2>\n<p>이제 터미널 상에서 ChatGPT와 메시지를 주고 받을 수 있도록 코드를 살짝 수정해야하는데요.</p>\n<p>우선 파이썬의 <code>input()</code> 내장 함수로 사용자의 입력을 받아서 <code>question</code> 변수에 할당합니다.\n그리고 ChatGPT API를 호출할 때 <code>content</code> 키에 <code>question</code>을 값으로 넘깁니다.\n마지막으로 ChatGPT API로 부터 응답된 결과에서 수신된 메세지만 다시 터미널에 출력만 해주면 됩니다.</p>\n<p>이 과정을 <code>while</code>문을 이용해서 반복해주면 ChatGPT와 계속해서 메세지를 주고 받을 수 있습니다.</p>\n<div class=\"gatsby-code-title\">chat.py</div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> os\n<span class=\"token keyword\">import</span> requests\n\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"💬 ChatGPT 터미널 챗앱 💬\"</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">while</span> <span class=\"token literal-property property\">True</span><span class=\"token operator\">:</span>\n    question <span class=\"token operator\">=</span> <span class=\"token function\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\n👤 \"</span><span class=\"token punctuation\">)</span>\n\n    response <span class=\"token operator\">=</span> requests<span class=\"token punctuation\">.</span><span class=\"token function\">post</span><span class=\"token punctuation\">(</span>\n        <span class=\"token string\">\"https://api.openai.com/v1/chat/completions\"</span><span class=\"token punctuation\">,</span>\n        headers<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token string-property property\">\"Authorization\"</span><span class=\"token operator\">:</span> f<span class=\"token string\">\"Bearer {os.getenv('OPENAI_API_KEY')}\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        json<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>\n            <span class=\"token string-property property\">\"model\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"gpt-3.5-turbo\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token string-property property\">\"messages\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span><span class=\"token string-property property\">\"role\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"user\"</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">\"content\"</span><span class=\"token operator\">:</span> question<span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">)</span>\n\n    answer <span class=\"token operator\">=</span> response<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"choices\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"message\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"content\"</span><span class=\"token punctuation\">]</span>\n\n    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"🤖\"</span><span class=\"token punctuation\">,</span> answer<span class=\"token punctuation\">)</span></code></pre></div>\n<p>다시 프로그램을 실행해보면 다음과 같이 터미널에서 ChatGPT와 메시지를 주고 받으며 채팅이 가능하게 됩니다! 🎉</p>\n<div class=\"gatsby-code-title\">터미널</div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ python chat.py\n💬 ChatGPT 터미널 챗앱 💬\n\n👤 대한민국의 수도는 어디야?\n🤖 대한민국의 수도는 서울입니다.\n\n👤 서울에서 가장 높은 건물은 뭐야?\n🤖 현재 서울에서 가장 높은 건물은 롯데월드타워<span class=\"token punctuation\">(</span><span class=\"token number\">123</span>층, 555m<span class=\"token punctuation\">)</span>입니다.\n\n👤</code></pre></div>\n<h2 id=\"마치면서\" style=\"position:relative;\"><a href=\"#%EB%A7%88%EC%B9%98%EB%A9%B4%EC%84%9C\" aria-label=\"마치면서 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>마치면서</h2>\n<p>이상으로 ChatGPT API를 활용하여 정말 간단한 터미널 챗앱을 파이썬으로 구현해보았습니다.\n<code>requests</code> 라이브러리만 있으면 이렇게 어렵지 않게 ChatGPT API와 상호작용하는 터미널 앱을 만들 수 있습니다.</p>\n<blockquote>\n<p>ChatGPT에 대한 포스팅은 <a href=\"/?tag=ChatGPT\">관련 태그</a>를 통해서 쉽게 만나보세요!</p>\n</blockquote>","timeToRead":3,"fields":{"slug":"/chatgpt-cli-python/","tags":["OpenAI","ChatGPT","API","Python","CLI","Terminal"]},"frontmatter":{"title":"ChatGPT 터미널 앱 파이썬으로 만들어보기","date":"Apr 20, 2023"}},"next":{"fields":{"slug":"/chatgpt-python/"},"frontmatter":{"title":"파이썬으로 ChatGPT API를 호출하는 방법"}}}},
    "staticQueryHashes": ["2168229929","2362167539","3056348342"]}