{"componentChunkName":"component---src-templates-detail-template-jsx","path":"/chatgpt-cli-js/","result":{"pageContext":{"previous":null,"node":{"html":"<p>이번 포스팅에서는 ChatGPT API를 활용하여 자바스크립트로 GhatGPT와 유사하지만 터미널 상에서 돌아가는 간단한 챗앱을 구현해보겠습니다.</p>\n<h2 id=\"사전-준비\" style=\"position:relative;\"><a href=\"#%EC%82%AC%EC%A0%84-%EC%A4%80%EB%B9%84\" aria-label=\"사전 준비 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>사전 준비</h2>\n<p>최대한 간단한 예제를 위해서 GhatGPT API를 호출할 때 외부 라이브러리를 사용하지 않고 Node.js에 내장되어 있는 <code>fetch()</code> 함수를 사용하려고 합니다.\nNode.js에서는 v17.5 이상부터 <code>fetch()</code> 함수를 지원하고 있으므로 본인 컴퓨터에 v17.5 이전 Node.js가 설치되어 있다면 현재 LTS 버전인 v18로 업그레이드를 추천드리겠습니다.</p>\n<blockquote>\n<p>원격 API를 호출할 때 사용되는 자바스크립트의 <code>fetch()</code> 함수에 대한 자세한 설명은 <a href=\"/js-window-fetch\">관련 포스팅</a>을 참고 바랍니다.</p>\n</blockquote>\n<h2 id=\"openai-api-키-설정\" style=\"position:relative;\"><a href=\"#openai-api-%ED%82%A4-%EC%84%A4%EC%A0%95\" aria-label=\"openai api 키 설정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>OpenAI API 키 설정</h2>\n<blockquote>\n<p>OpenAI에서 회원 가입 후에 API 키를 발급받는 방법은 <a href=\"/chatgpt-api-keys\">별도 포스팅</a>에서 자세히 다루었으니 참고 바랍니다.</p>\n</blockquote>\n<p>터미널을 열고 우선 <code>OPENAI_API_KEY</code>라는 환경 변수에 OpenAI에서 발급받은 API 키를 저장해놓고 시작하겠습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">OPENAI_API_KEY</span><span class=\"token operator\">=</span>sk-<span class=\"token punctuation\">..</span>.DECr\n$ <span class=\"token builtin class-name\">echo</span> <span class=\"token variable\">$OPENAI_API_KEY</span>\nsk-<span class=\"token punctuation\">..</span>.DECr</code></pre></div>\n<p>이렇게 API 키를 환경 변수에 저장해놓으면 Node.js 프로그램을 실행할 때 <code>process.env</code>를 통해 쉽게 환경 변수를 읽어올 수 있습니다.</p>\n<blockquote>\n<p>Node.js에서 환경 변수를 다루는 방법에 대해서는 <a href=\"/js-node-process-env\">관련 포스팅</a>을 참고 바랍니다.</p>\n</blockquote>\n<h2 id=\"openai-api-키-출력\" style=\"position:relative;\"><a href=\"#openai-api-%ED%82%A4-%EC%B6%9C%EB%A0%A5\" aria-label=\"openai api 키 출력 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>OpenAI API 키 출력</h2>\n<p><code>chat.js</code> 파일을 생성하고 그 안에 <code>OPENAI_API_KEY</code> 환경 변수를 읽어서 콘솔에 출력하는 코드를 작성합니다.</p>\n<div class=\"gatsby-code-title\">chat.js</div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">OPENAI_API_KEY</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>그리고 작성한 프로그램을 실행했을 때 방금 환경 변수로 설정한 API 키가 출력되는지 확인합니다.</p>\n<div class=\"gatsby-code-title\">터미널</div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ node chat.js\nsk-<span class=\"token punctuation\">..</span>.DECr</code></pre></div>\n<h2 id=\"chatgpt-api-호출\" style=\"position:relative;\"><a href=\"#chatgpt-api-%ED%98%B8%EC%B6%9C\" aria-label=\"chatgpt api 호출 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ChatGPT API 호출</h2>\n<p>이제 <code>fetch()</code> 함수를 호출하여 ChatGPT API에 <code>야!</code>라는 메시지를 전송해보겠습니다.\n이 때 환경 변수로 설정해놓은 API 키를 빼먹지 말고 헤더로 함께 넘겨주셔야 합니다.\n인공지능 모델로는 최근에 많이 사용되는 <code>gpt-3.5-turbo</code>를 사용하겠습니다.</p>\n<div class=\"gatsby-code-title\">chat.js</div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"https://api.openai.com/v1/chat/completions\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n  method<span class=\"token operator\">:</span> <span class=\"token string\">\"POST\"</span><span class=\"token punctuation\">,</span>\n  headers<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    Authorization<span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Bearer </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">OPENAI_API_KEY</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"Content-Type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"application/json\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  body<span class=\"token operator\">:</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    model<span class=\"token operator\">:</span> <span class=\"token string\">\"gpt-3.5-turbo\"</span><span class=\"token punctuation\">,</span>\n    messages<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span> role<span class=\"token operator\">:</span> <span class=\"token string\">\"user\"</span><span class=\"token punctuation\">,</span> content<span class=\"token operator\">:</span> <span class=\"token string\">\"야!\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">res</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> res<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">data</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>ChatGPT API로 부터 응답된 내용을 콘솔에 출력해보면 <code>choices</code> 속성 안에 답변이 들어있는 것을 볼 수 있습니다.</p>\n<div class=\"gatsby-code-title\">터미널</div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ node chat.js\n<span class=\"token punctuation\">{</span>\n  <span class=\"token string\">\"id\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"chatcmpl-753aCnaFlh35Cd4gY9vM069KvdhUM\"</span>,\n  <span class=\"token string\">\"object\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"chat.completion\"</span>,\n  <span class=\"token string\">\"created\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token number\">1681439768</span>,\n  <span class=\"token string\">\"model\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"gpt-3.5-turbo-0301\"</span>,\n  <span class=\"token string\">\"usage\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">\"prompt_tokens\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token number\">10</span>,\n    <span class=\"token string\">\"completion_tokens\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token number\">15</span>,\n    <span class=\"token string\">\"total_tokens\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token number\">25</span>\n  <span class=\"token punctuation\">}</span>,\n  <span class=\"token string\">\"choices\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token string\">\"message\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token string\">\"role\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"assistant\"</span>,\n        <span class=\"token string\">\"content\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"네, 무엇이 필요하신가요?\"</span>\n      <span class=\"token punctuation\">}</span>,\n      <span class=\"token string\">\"finish_reason\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"stop\"</span>,\n      <span class=\"token string\">\"index\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token number\">0</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"커맨드-라인-인터페이스-구현\" style=\"position:relative;\"><a href=\"#%EC%BB%A4%EB%A7%A8%EB%93%9C-%EB%9D%BC%EC%9D%B8-%EC%9D%B8%ED%84%B0%ED%8E%98%EC%9D%B4%EC%8A%A4-%EA%B5%AC%ED%98%84\" aria-label=\"커맨드 라인 인터페이스 구현 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>커맨드 라인 인터페이스 구현</h2>\n<p>마지막으로 터미널 상에서 ChatGPT와 메시지를 주고 받을 수 있는 프로그램을 작성할 차례입니다.</p>\n<p>먼저 위에서 작성한 코드를 함수화하면 좋을 것 같은데요.\n입력으로 들어온 질문을 ChatGPT API에 그대로 전달해주고, ChatGPT API로 부터 응답된 결과에서 답변만 추출해서 반환하는 함수를 작성하겠습니다.\n마지막에 이 함수에 질문을 인자로 넘겨서 호출도 해 볼께요.</p>\n<div class=\"gatsby-code-title\">chat.js</div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">chat</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">question</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"https://api.openai.com/v1/chat/completions\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n    method<span class=\"token operator\">:</span> <span class=\"token string\">\"POST\"</span><span class=\"token punctuation\">,</span>\n    headers<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      Authorization<span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Bearer </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">OPENAI_API_KEY</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">\"Content-Type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"application/json\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    body<span class=\"token operator\">:</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      model<span class=\"token operator\">:</span> <span class=\"token string\">\"gpt-3.5-turbo\"</span><span class=\"token punctuation\">,</span>\n      messages<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span> role<span class=\"token operator\">:</span> <span class=\"token string\">\"user\"</span><span class=\"token punctuation\">,</span> content<span class=\"token operator\">:</span> question <span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">res</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> res<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">data</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> data<span class=\"token punctuation\">.</span>choices<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">.</span>content<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">chat</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"야!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">answer</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>answer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>다시 프로그램을 실행해보면 답변이 출력되는 것을 볼 수 있습니다.</p>\n<div class=\"gatsby-code-title\">터미널</div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ node chat.js\n네, 무엇을 도와드릴까요?</code></pre></div>\n<p>이제 터미널을 통해서 사용자의 입력을 받아 이 함수를 호출하고 반환 결과를 터미널에 출력만 해주면 되는데요.\nNode.js에 내장된 <code>readline</code> 모듈을 활용해서 구현해보겠습니다.</p>\n<div class=\"gatsby-code-title\">chat.js</div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> readline <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"readline\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> rl <span class=\"token operator\">=</span> readline<span class=\"token punctuation\">.</span><span class=\"token function\">createInterface</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  input<span class=\"token operator\">:</span> process<span class=\"token punctuation\">.</span>stdin<span class=\"token punctuation\">,</span>\n  output<span class=\"token operator\">:</span> process<span class=\"token punctuation\">.</span>stdout<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"💬 ChatGPT 터미널 챗앱 💬\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nrl<span class=\"token punctuation\">.</span><span class=\"token function\">prompt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nrl<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"line\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">question</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">chat</span><span class=\"token punctuation\">(</span>question<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">answer</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">🤖 </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>answer<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">\\n</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    rl<span class=\"token punctuation\">.</span><span class=\"token function\">prompt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>다시 프로그램을 실행해보면 다음과 같이 터미널에서 ChatGPT와 메시지를 주고 받으며 채팅이 가능하게 됩니다! 🎉</p>\n<div class=\"gatsby-code-title\">터미널</div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ node chat.js\n💬 ChatGPT 터미널 챗앱 💬\n\n<span class=\"token operator\">></span> 대한민국의 수도는 어디야?\n🤖 대한민국의 수도는 서울입니다.\n\n<span class=\"token operator\">></span> 서울에서 가장 높은 건물은 뭐야?\n🤖 서울에서 가장 높은 건물은 롯데월드타워입니다. 높이는 555m입니다.\n\n<span class=\"token operator\">></span></code></pre></div>\n<h2 id=\"마치면서\" style=\"position:relative;\"><a href=\"#%EB%A7%88%EC%B9%98%EB%A9%B4%EC%84%9C\" aria-label=\"마치면서 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>마치면서</h2>\n<p>이상으로 ChatGPT API를 활용하여 정말 간단한 터미널 챗앱을 자바스크립트로 구현해보았습니다.\nNode.js만 있으면 별다른 라이브러리 설치 없이도 이렇게 어렵지 않게 ChatGPT API와 상호작용을 할 수 있겠습니다.</p>\n<blockquote>\n<p>ChatGPT에 대한 포스팅은 <a href=\"http://localhost:8000/?tag=ChatGPT\">관련 태그</a>를 통해서 쉽게 만나보세요! 😀</p>\n</blockquote>","timeToRead":4,"fields":{"slug":"/chatgpt-cli-js/","tags":["OpenAI","ChatGPT","API","Javascript","CLI","Terminal"]},"frontmatter":{"title":"자바스크립트로 ChatGPT 터미널 앱 만들기","date":"Apr 14, 2023"}},"next":{"fields":{"slug":"/chatgpt-curl/"},"frontmatter":{"title":"터미널에서 curl로 ChatGPT API 호출 해보기"}}}},"staticQueryHashes":["2168229929","2362167539","3056348342"]}