{
    "componentChunkName": "component---src-templates-detail-template-jsx",
    "path": "/jest-date-mocking/",
    "result": {"pageContext":{"previous":{"fields":{"slug":"/css-align-icon-text/"},"frontmatter":{"title":"CSS로 아이콘과 텍스트를 수평 정렬하기"}},"node":{"html":"<p>테스트를 작성하다보면 날짜와 시간이 골칫거리가 되는 경우가 많습니다.\n날짜와 시간은 다른 데이터와 다르게 항상 변하기 때문인데요.</p>\n<p>이번 포스팅에서는 Jest를 이용하여 날짜와 시간을 효과적으로 모킹(mocking)하는 방법에 대해서 알아보겠습니다.</p>\n<blockquote>\n<p>테스팅 프레임워크인 Jest에 생소하신 분들은 먼저 <a href=\"/jest-basic/\">관련 포스팅</a>를 읽어 보시고 돌아오시기를 추천드립니다.</p>\n</blockquote>\n<h2 id=\"예제-코드\" style=\"position:relative;\"><a href=\"#%EC%98%88%EC%A0%9C-%EC%BD%94%EB%93%9C\" aria-label=\"예제 코드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>예제 코드</h2>\n<p>자바스크립트의 <a href=\"/js-intl-api/\">Intl API</a>를 사용하여 현재 날짜를 주어진 언어에 따라 문자열로 변환해주는 간단한 함수를 작성해보겠습니다.</p>\n<div class=\"gatsby-code-title\">datetime.js</div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">function</span> <span class=\"token function\">formatCurrentDate</span><span class=\"token punctuation\">(</span>locale <span class=\"token operator\">=</span> <span class=\"token string\">\"en\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> koDtf <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Intl<span class=\"token punctuation\">.</span>DateTimeFormat</span><span class=\"token punctuation\">(</span>locale<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">dateStyle</span><span class=\"token operator\">:</span> <span class=\"token string\">\"long\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">timeStyle</span><span class=\"token operator\">:</span> <span class=\"token string\">\"short\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> koDtf<span class=\"token punctuation\">.</span><span class=\"token function\">format</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>이 함수는 <code>Date()</code> 생성자를 통해서 현재 날짜를 얻고 있는데요.\n함수 내부에서 생성되는 날짜 객체는 함수가 호출될 때 마다 바뀔 거에요.\n너무 당연한 얘기겠지만 우리의 시간은 언제나 흐르고 있으니까요.</p>\n<p>이 시간의 섭리가 테스트를 작성할 때는 의외의 복병으로 작용할 수 있는데요.\n지금부터 실제 테스트를 작성하면서 어떤 문제에 부딪히게 되는지 보여드릴께요.</p>\n<h2 id=\"테스트-작성\" style=\"position:relative;\"><a href=\"#%ED%85%8C%EC%8A%A4%ED%8A%B8-%EC%9E%91%EC%84%B1\" aria-label=\"테스트 작성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>테스트 작성</h2>\n<p>방금 작성한 함수가 영어와 한국어가 주어졌을 때 예상대로 작동하는지 검증하기 위한 테스트를 작성해보겠습니다.</p>\n<div class=\"gatsby-code-title\">datetime.test.js</div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> formatCurrentDate <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"./datetime\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"formats current date for English\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span><span class=\"token function\">formatCurrentDate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toEqual</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"October 21, 2023 at 4:57 PM\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"formats current date for Korean\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span><span class=\"token function\">formatCurrentDate</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ko\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toEqual</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"2023년 10월 21일 오후 4:57\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>그리고 테스트를 실행해보면 잘 통과하는데요.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ jest datetime.test.js\n PASS  ./datetime.test.js\n  ✓ formatted string starts with <span class=\"token function\">date</span> <span class=\"token punctuation\">(</span><span class=\"token number\">10</span> ms<span class=\"token punctuation\">)</span>\n  ✓ formatted string ends with <span class=\"token function\">time</span>\n\nTest Suites: <span class=\"token number\">1</span> passed, <span class=\"token number\">1</span> total\nTests:       <span class=\"token number\">2</span> passed, <span class=\"token number\">2</span> total\nSnapshots:   <span class=\"token number\">0</span> total\nTime:        <span class=\"token number\">0.189</span> s, estimated <span class=\"token number\">1</span> s\nRan all <span class=\"token builtin class-name\">test</span> suites matching /.datetime.test.js/i.</code></pre></div>\n<p>5분 정도 있다가 동일한 테스트를 다시 실행해보니 이번에는 실패합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ jest datetime.test.js\n FAIL  ./datetime.test.js\n  ✕ formats current <span class=\"token function\">date</span> <span class=\"token keyword\">for</span> English <span class=\"token punctuation\">(</span><span class=\"token number\">29</span> ms<span class=\"token punctuation\">)</span>\n  ✕ formats current <span class=\"token function\">date</span> <span class=\"token keyword\">for</span> Korean <span class=\"token punctuation\">(</span><span class=\"token number\">1</span> ms<span class=\"token punctuation\">)</span>\n\n  ● formats current <span class=\"token function\">date</span> <span class=\"token keyword\">for</span> English\n\n    expect<span class=\"token punctuation\">(</span>received<span class=\"token punctuation\">)</span>.toEqual<span class=\"token punctuation\">(</span>expected<span class=\"token punctuation\">)</span> // deep equality\n\n    Expected: <span class=\"token string\">\"October 21, 2023 at 4:57 PM\"</span>\n    Received: <span class=\"token string\">\"October 21, 2023 at 5:01 PM\"</span>\n\n      <span class=\"token number\">2</span> <span class=\"token operator\">|</span>\n      <span class=\"token number\">3</span> <span class=\"token operator\">|</span> test<span class=\"token punctuation\">(</span><span class=\"token string\">\"formats current date for English\"</span>, <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token operator\">></span> <span class=\"token number\">4</span> <span class=\"token operator\">|</span>   expect<span class=\"token punctuation\">(</span>formatCurrentDate<span class=\"token punctuation\">(</span><span class=\"token punctuation\">))</span>.toEqual<span class=\"token punctuation\">(</span><span class=\"token string\">\"October 21, 2023 at 4:57 PM\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token operator\">|</span>                               ^\n      <span class=\"token number\">5</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token number\">6</span> <span class=\"token operator\">|</span>\n      <span class=\"token number\">7</span> <span class=\"token operator\">|</span> test<span class=\"token punctuation\">(</span><span class=\"token string\">\"formats current date for Korean\"</span>, <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>\n\n      at Object.toEqual <span class=\"token punctuation\">(</span>./datetime.test.js:4:31<span class=\"token punctuation\">)</span>\n\n  ● formats current <span class=\"token function\">date</span> <span class=\"token keyword\">for</span> Korean\n\n    expect<span class=\"token punctuation\">(</span>received<span class=\"token punctuation\">)</span>.toEqual<span class=\"token punctuation\">(</span>expected<span class=\"token punctuation\">)</span> // deep equality\n\n    Expected: <span class=\"token string\">\"2023년 10월 21일 오후 4:57\"</span>\n    Received: <span class=\"token string\">\"2023년 10월 21일 오후 5:01\"</span>\n\n       <span class=\"token number\">6</span> <span class=\"token operator\">|</span>\n       <span class=\"token number\">7</span> <span class=\"token operator\">|</span> test<span class=\"token punctuation\">(</span><span class=\"token string\">\"formats current date for Korean\"</span>, <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token operator\">></span>  <span class=\"token number\">8</span> <span class=\"token operator\">|</span>   expect<span class=\"token punctuation\">(</span>formatCurrentDate<span class=\"token punctuation\">(</span><span class=\"token string\">\"ko\"</span><span class=\"token punctuation\">))</span>.toEqual<span class=\"token punctuation\">(</span><span class=\"token string\">\"2023년 10월 21일 오후 4:57\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n         <span class=\"token operator\">|</span>                                   ^\n       <span class=\"token number\">9</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token number\">10</span> <span class=\"token operator\">|</span>\n\n      at Object.toEqual <span class=\"token punctuation\">(</span>./datetime.test.js:8:35<span class=\"token punctuation\">)</span></code></pre></div>\n<p>왜 이런 일이 발생하는 걸까요?</p>\n<p>네, 맞습니다! 테스트를 실행할 때 마다 현재 날짜와 시간이 달라지기 때문입니다.\n다시 말해서 <code>formatCurrentDate()</code> 함수 안에서 생성되는 날짜 객체는 매번 다를 수 밖에 없는 것이지요.</p>\n<p>뿐만 아니라 이 문제는 테스트가 Deterministic, 즉 동일한 입력에 대해 항상 동일한 결과를 반환해야 한다는 테스틍의 기본 원칙도 위배하고 있습니다.\nDeterministic하지 않은 테스트는 예측이 어렵고 일관성을 보장할 수 없어서 개발 생산성에 저해하는 요소가 됩니다.</p>\n<h2 id=\"jest의-날짜-모킹\" style=\"position:relative;\"><a href=\"#jest%EC%9D%98-%EB%82%A0%EC%A7%9C-%EB%AA%A8%ED%82%B9\" aria-label=\"jest의 날짜 모킹 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Jest의 날짜 모킹</h2>\n<p>이 문제를 해결하려면 어떻게 해야할까요?</p>\n<p>우선, 함수를 호출할 때 인자로 <code>new Date(2023, 9, 21, 16, 57)</code>와 같은 날짜 객체를 넘기는 것을 생각해볼 수 있지만 함수의 구현을 변경하지 않고는 불가능합니다.</p>\n<p>결국은 <code>formatCurrentDate()</code> 함수 내부에서 생성되는 날짜 객체가 항상 동일하도록 만들어야하는데요.\n그러면 흘러가는 시간을 어떻게든 잡아야하겠죠? 🙃</p>\n<p>우리의 컴퓨터가 아무리 빠르더라도 현실적으로 <code>new Date()</code>의 호출 결과가 동일하기는 매우 어렵습니다.\n밀리초(ms) 단위에서는 차이가 발생하기 때문에 다음과 같이 <code>new Date()</code>를 연달아 두 번 연속으로 호출하더라도 결과는 다르거든요.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"date changes when using real timers\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> realDate <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token number\">2023</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">21</span><span class=\"token punctuation\">,</span> <span class=\"token number\">16</span><span class=\"token punctuation\">,</span> <span class=\"token number\">57</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>not<span class=\"token punctuation\">.</span><span class=\"token function\">toEqual</span><span class=\"token punctuation\">(</span>realDate<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 다름</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>그런데, Jest를 사용하면 테스트의 시간을 멈출 수 있다는 사실! 😲\nJest는 효과적인 날짜 모킹(mocking)을 위해서 소위 Fake Timer, 즉 가짜 타이머를 제공합니다.</p>\n<p>가짜 타이머는 <code>jest.useFakeTimers()</code>를 호출해서 얻을 수 있으며, 이 가짜 타이머의 <code>setSystemTime()</code> 함수를 통해서 특정 시간으로 고정해볼께요.\n이렇게 해주면 그 이후로는 <code>new Date()</code>를 호출했을 때 항상 동일한 결과가 나오게 됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> jest <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@jest/globals\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"date does not change when using fake timers\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> fakeDate <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token number\">2023</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">21</span><span class=\"token punctuation\">,</span> <span class=\"token number\">16</span><span class=\"token punctuation\">,</span> <span class=\"token number\">57</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\">  jest<span class=\"token punctuation\">.</span><span class=\"token function\">useFakeTimers</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">setSystemTime</span><span class=\"token punctuation\">(</span>fakeDate<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>  <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toEqual</span><span class=\"token punctuation\">(</span>fakeDate<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 같음</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"테스트-수정\" style=\"position:relative;\"><a href=\"#%ED%85%8C%EC%8A%A4%ED%8A%B8-%EC%88%98%EC%A0%95\" aria-label=\"테스트 수정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>테스트 수정</h2>\n<p>그럼 Jest의 가짜 타이머를 이용해서 <code>formatCurrentDate()</code> 함수에 대한 테스트가 언제 실행하든지와 상관없이 항상 통과하도록 수정해볼까요?</p>\n<p>각 테스트에서 <code>formatCurrentDate()</code> 함수를 호출하기 전에 가짜 타이머로 날짜와 시간을 고정시켜주기면 하면 됩니다.</p>\n<div class=\"gatsby-code-title\">datetime.test.js</div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> jest <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@jest/globals\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> formatCurrentDate <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"./datetime\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"formats current date for English\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  jest<span class=\"token punctuation\">.</span><span class=\"token function\">useFakeTimers</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">setSystemTime</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token number\">2023</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">21</span><span class=\"token punctuation\">,</span> <span class=\"token number\">16</span><span class=\"token punctuation\">,</span> <span class=\"token number\">57</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>  <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span><span class=\"token function\">formatCurrentDate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toEqual</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"October 21, 2023 at 4:57 PM\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"formats current date for Korean\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  jest<span class=\"token punctuation\">.</span><span class=\"token function\">useFakeTimers</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">setSystemTime</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token number\">2023</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">21</span><span class=\"token punctuation\">,</span> <span class=\"token number\">16</span><span class=\"token punctuation\">,</span> <span class=\"token number\">57</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>  <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span><span class=\"token function\">formatCurrentDate</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ko\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toEqual</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"2023년 10월 21일 오후 4:57\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>자, 이제 이 테스트는 다음 주에 실행하든 다음 달에 실행하든 내년에 실행하든 <code>formatCurrentDate()</code> 함수의 구현이 바뀌지 않는 이상 언제나 통과할 것입니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ jest datetime.test.js\n PASS  ./datetime.test.js\n  ✓ formats current <span class=\"token function\">date</span> <span class=\"token keyword\">for</span> English <span class=\"token punctuation\">(</span><span class=\"token number\">26</span> ms<span class=\"token punctuation\">)</span>\n  ✓ formats current <span class=\"token function\">date</span> <span class=\"token keyword\">for</span> Korean <span class=\"token punctuation\">(</span><span class=\"token number\">1</span> ms<span class=\"token punctuation\">)</span>\n\nTest Suites: <span class=\"token number\">1</span> passed, <span class=\"token number\">1</span> total\nTests:       <span class=\"token number\">2</span> passed, <span class=\"token number\">2</span> total\nSnapshots:   <span class=\"token number\">0</span> total\nTime:        <span class=\"token number\">0.211</span> s, estimated <span class=\"token number\">1</span> s\nRan all <span class=\"token builtin class-name\">test</span> suites matching /.datetime.test.js/i.</code></pre></div>\n<h2 id=\"주의사항\" style=\"position:relative;\"><a href=\"#%EC%A3%BC%EC%9D%98%EC%82%AC%ED%95%AD\" aria-label=\"주의사항 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>주의사항</h2>\n<p>Jest의 가짜 타이머를 사용할 때 흔하게 볼 수 있는 실수가 있는데요.</p>\n<p>우리가 작성한 테스트 파일에 나중에 다른 개발자가 테스트를 추가했다고 가정을 해볼께요.\n만약에 그 개발자가 Jest의 가짜 타이머에 대해서 잘 모르거나, 기존 테스트 코드를 꼼꼼이 읽어보지 않고, 아래와 같은 테스트를 추가한다면 어떻게 될까요?</p>\n<div class=\"gatsby-code-title\">datetime.test.js</div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> jest <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@jest/globals\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> formatCurrentDate <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"./datetime\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"formats current date for English\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  jest<span class=\"token punctuation\">.</span><span class=\"token function\">useFakeTimers</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">setSystemTime</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token number\">2023</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">21</span><span class=\"token punctuation\">,</span> <span class=\"token number\">16</span><span class=\"token punctuation\">,</span> <span class=\"token number\">57</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span><span class=\"token function\">formatCurrentDate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toEqual</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"October 21, 2023 at 4:57 PM\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"formats current date for Korean\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  jest<span class=\"token punctuation\">.</span><span class=\"token function\">useFakeTimers</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">setSystemTime</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token number\">2023</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">21</span><span class=\"token punctuation\">,</span> <span class=\"token number\">16</span><span class=\"token punctuation\">,</span> <span class=\"token number\">57</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span><span class=\"token function\">formatCurrentDate</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ko\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toEqual</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"2023년 10월 21일 오후 4:57\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"gatsby-highlight-code-line\"><span class=\"token comment\">// 다른 개발자가 나중에 추가한 테스트</span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"date always changes\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">const</span> realDate <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token number\">2023</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">21</span><span class=\"token punctuation\">,</span> <span class=\"token number\">16</span><span class=\"token punctuation\">,</span> <span class=\"token number\">57</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>not<span class=\"token punctuation\">.</span><span class=\"token function\">toEqual</span><span class=\"token punctuation\">(</span>realDate<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 다름</span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span></code></pre></div>\n<p>추가된 테스트가 예상과 다르게 실패하고 그 개발자는 영문을 몰라 머리를 긁적일 것입니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ jest datetime.test.js\n FAIL  ./datetime.test.js\n  ✓ formats current <span class=\"token function\">date</span> <span class=\"token keyword\">for</span> English <span class=\"token punctuation\">(</span><span class=\"token number\">9</span> ms<span class=\"token punctuation\">)</span>\n  ✓ formats current <span class=\"token function\">date</span> <span class=\"token keyword\">for</span> Korean <span class=\"token punctuation\">(</span><span class=\"token number\">1</span> ms<span class=\"token punctuation\">)</span>\n  ✕ <span class=\"token function\">date</span> always changes\n\n  ● <span class=\"token function\">date</span> always changes\n\n    expect<span class=\"token punctuation\">(</span>received<span class=\"token punctuation\">)</span>.not.toEqual<span class=\"token punctuation\">(</span>expected<span class=\"token punctuation\">)</span> // deep equality\n\n    Expected: not <span class=\"token number\">2023</span>-10-21T20:57:00.000Z\n\n      <span class=\"token number\">17</span> <span class=\"token operator\">|</span> test<span class=\"token punctuation\">(</span><span class=\"token string\">\"date always changes\"</span>, <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token number\">18</span> <span class=\"token operator\">|</span>   const realDate <span class=\"token operator\">=</span> new Date<span class=\"token punctuation\">(</span><span class=\"token number\">2023</span>, <span class=\"token number\">9</span>, <span class=\"token number\">21</span>, <span class=\"token number\">16</span>, <span class=\"token number\">57</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token operator\">></span> <span class=\"token number\">19</span> <span class=\"token operator\">|</span>   expect<span class=\"token punctuation\">(</span>new Date<span class=\"token punctuation\">(</span><span class=\"token punctuation\">))</span>.not.toEqual<span class=\"token punctuation\">(</span>realDate<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n         <span class=\"token operator\">|</span>                          ^\n      <span class=\"token number\">20</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token number\">21</span> <span class=\"token operator\">|</span>\n\n      at Object.toEqual <span class=\"token punctuation\">(</span>./datetime.test.js:19:26<span class=\"token punctuation\">)</span>\n\nTest Suites: <span class=\"token number\">1</span> failed, <span class=\"token number\">1</span> total\nTests:       <span class=\"token number\">1</span> failed, <span class=\"token number\">2</span> passed, <span class=\"token number\">3</span> total\nSnapshots:   <span class=\"token number\">0</span> total\nTime:        <span class=\"token number\">0.111</span> s, estimated <span class=\"token number\">1</span> s\nRan all <span class=\"token builtin class-name\">test</span> suites matching /.datetime.test.js/i.</code></pre></div>\n<p>팀 프로젝트에서 위와 같은 혼선을 예방하기 위해서, 가짜 타이머를 사용하고 난 후에는 반드시 원래 타이머로 복원해주는 것이 중요한데요.\n테스트 파일에 <code>beforeEach()</code> 함수를 추가하고, 그 안에서 <code>jest.useRealTimers()</code> 함수를 호출해 주면 가짜 타이머를 사용하는 테스트가 성공하든 실패하든, 그 테스트가 종료하면 진짜 타이머가 사용됩니다.\n따라서 그 외에 테스트는 원래 타이머를 사용하도록 보장할 수 있습니다.</p>\n<div class=\"gatsby-code-title\">datetime.test.js</div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> jest <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@jest/globals\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> formatCurrentDate <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"./datetime\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"gatsby-highlight-code-line\"><span class=\"token function\">beforeEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> jest<span class=\"token punctuation\">.</span><span class=\"token function\">useRealTimers</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>\n<span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"formats current date for English\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  jest<span class=\"token punctuation\">.</span><span class=\"token function\">useFakeTimers</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">setSystemTime</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token number\">2023</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">21</span><span class=\"token punctuation\">,</span> <span class=\"token number\">16</span><span class=\"token punctuation\">,</span> <span class=\"token number\">57</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span><span class=\"token function\">formatCurrentDate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toEqual</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"October 21, 2023 at 4:57 PM\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"formats current date for Korean\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  jest<span class=\"token punctuation\">.</span><span class=\"token function\">useFakeTimers</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">setSystemTime</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token number\">2023</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">21</span><span class=\"token punctuation\">,</span> <span class=\"token number\">16</span><span class=\"token punctuation\">,</span> <span class=\"token number\">57</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span><span class=\"token function\">formatCurrentDate</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ko\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toEqual</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"2023년 10월 21일 오후 4:57\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"date always changes\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> realDate <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token number\">2023</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">21</span><span class=\"token punctuation\">,</span> <span class=\"token number\">16</span><span class=\"token punctuation\">,</span> <span class=\"token number\">57</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>not<span class=\"token punctuation\">.</span><span class=\"token function\">toEqual</span><span class=\"token punctuation\">(</span>realDate<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 다름</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>이제 3개의 테스트 간의 서로 간섭이 없이 잘 통과하는 것을 볼 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ jest datetime.test.js\n PASS  ./datetime.test.js\n  ✓ formats current <span class=\"token function\">date</span> <span class=\"token keyword\">for</span> English <span class=\"token punctuation\">(</span><span class=\"token number\">31</span> ms<span class=\"token punctuation\">)</span>\n  ✓ formats current <span class=\"token function\">date</span> <span class=\"token keyword\">for</span> Korean <span class=\"token punctuation\">(</span><span class=\"token number\">1</span> ms<span class=\"token punctuation\">)</span>\n  ✓ <span class=\"token function\">date</span> always changes <span class=\"token punctuation\">(</span><span class=\"token number\">1</span> ms<span class=\"token punctuation\">)</span>\n\nTest Suites: <span class=\"token number\">1</span> passed, <span class=\"token number\">1</span> total\nTests:       <span class=\"token number\">3</span> passed, <span class=\"token number\">3</span> total\nSnapshots:   <span class=\"token number\">0</span> total\nTime:        <span class=\"token number\">0.217</span> s, estimated <span class=\"token number\">1</span> s\nRan all <span class=\"token builtin class-name\">test</span> suites matching /.datetime.test.js/i.</code></pre></div>\n<blockquote>\n<p>Jest로 테스트 전/후 처리 방법에 대해서 <a href=\"/jest-before-after/\">별도 포스팅</a>을 참고 바랍니다.</p>\n</blockquote>\n<h2 id=\"직접-날짜-모킹\" style=\"position:relative;\"><a href=\"#%EC%A7%81%EC%A0%91-%EB%82%A0%EC%A7%9C-%EB%AA%A8%ED%82%B9\" aria-label=\"직접 날짜 모킹 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>직접 날짜 모킹</h2>\n<p>Jest에 가짜 타이머 기능이 추가되기 전에 출시된 오래된 버전의 Jest를 사용하고 있는 프로젝트에서는 어떻게 해야할까요?\n이런 경우에는 대안으로 <code>spyOn()</code> 함수를 사용해서 <code>Date()</code> 생성자가 항상 고정된 날짜 객체를 만들어 내도록 직접 모킹을 해주실 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"formats current date for English\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  jest\n    <span class=\"token punctuation\">.</span><span class=\"token function\">spyOn</span><span class=\"token punctuation\">(</span>global<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Date\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">mockImplementationOnce</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token number\">2023</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">21</span><span class=\"token punctuation\">,</span> <span class=\"token number\">16</span><span class=\"token punctuation\">,</span> <span class=\"token number\">57</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  jest<span class=\"token punctuation\">.</span><span class=\"token function\">useFakeTimers</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">setSystemTime</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token number\">2023</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">21</span><span class=\"token punctuation\">,</span> <span class=\"token number\">16</span><span class=\"token punctuation\">,</span> <span class=\"token number\">57</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<blockquote>\n<p>Jest에서 fn()이나 spyOn()을 사용하여 함수를 모킹하는 방법에 대해서 <a href=\"https://www.daleseo.com/jest-fn-spy-on/\">별도 포스팅</a>에서 자세히 다루고 있으니 참고 바랍니다.</p>\n</blockquote>\n<h2 id=\"전체-코드\" style=\"position:relative;\"><a href=\"#%EC%A0%84%EC%B2%B4-%EC%BD%94%EB%93%9C\" aria-label=\"전체 코드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>전체 코드</h2>\n<p>본 포스팅에서 작성한 코드는 아래에서 확인하시고 바로 실행해보실 수 있습니다.</p>\n<iframe height=\"400px\" width=\"100%\" src=\"https://repl.it/@DaleSeo/jest-date-mocking?lite=true\" scrolling=\"no\" frameborder=\"no\" allowtransparency=\"true\" allowfullscreen=\"true\" sandbox=\"allow-forms allow-pointer-lock allow-popups allow-same-origin allow-scripts allow-modals\"></iframe>\n<h2 id=\"마치면서\" style=\"position:relative;\"><a href=\"#%EB%A7%88%EC%B9%98%EB%A9%B4%EC%84%9C\" aria-label=\"마치면서 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>마치면서</h2>\n<p>지금까지 언제나 변하는 날짜와 시간 때문에 테스트를 작성하다가 겪을 수 있는 문제에 대해서 살펴보았습니다.\n그리고 이러한 문제를 Jest에서 제공하는 가짜 타이머를 활용해서 해결해보았습니다.</p>","timeToRead":7,"fields":{"slug":"/jest-date-mocking/","tags":["JavaScript","library","Jest","testing","mocking"]},"frontmatter":{"title":"Jest의 가짜 타이머로 테스트의 시간을 멈추기","date":"Oct 23, 2023"}},"next":{"fields":{"slug":"/css-scroll-smooth/"},"frontmatter":{"title":"CSS로 부드럽게 스크롤되는 목차 만들기"}}}},
    "staticQueryHashes": ["2168229929","2362167539","3056348342"]}