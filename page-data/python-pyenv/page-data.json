{"componentChunkName":"component---src-templates-detail-template-jsx","path":"/python-pyenv/","result":{"pageContext":{"previous":{"fields":{"slug":"/python-venv/"},"frontmatter":{"title":"파이썬에서 venv로 가상 환경 사용하기"}},"node":{"html":"<h2 id=\"2020년-파이썬-2-지원-종료\" style=\"position:relative;\"><a href=\"#2020%EB%85%84-%ED%8C%8C%EC%9D%B4%EC%8D%AC-2-%EC%A7%80%EC%9B%90-%EC%A2%85%EB%A3%8C\" aria-label=\"2020년 파이썬 2 지원 종료 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2020년 파이썬 2 지원 종료</h2>\n<p>파이썬 2는 2020년 1월 1일부로 공식적으로 지원이 중료되었으며, 버전 2.7 이후로는 더 이상 업데이트가 되지 않습니다. (참고: <a href=\"https://pythonclock.org\">https://pythonclock.org</a>)\n하지만 Mac의 경우, 아직도 파이썬 2가 기본 실행 환경(runtime/interpreter)로 사용되고 있어서, 파이썬 3를 사용하려면 추가 설치가 필요한 실정입니다.</p>\n<p>macOS에 내장된 파이썬의 정확한 버전과 바이너리 파일의 위치는 다음과 같이 확인하실 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ python -V\nPython <span class=\"token number\">2.7</span>.15\n$ <span class=\"token function\">which</span> python\n/usr/bin/python</code></pre></div>\n<h2 id=\"mac에서-파이썬-3-설치\" style=\"position:relative;\"><a href=\"#mac%EC%97%90%EC%84%9C-%ED%8C%8C%EC%9D%B4%EC%8D%AC-3-%EC%84%A4%EC%B9%98\" aria-label=\"mac에서 파이썬 3 설치 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Mac에서 파이썬 3 설치</h2>\n<p>Mac의 패키지 매니저인 Homebrew를 이용하면 터미널에서 간편하게 파이썬 3를 설치할 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ brew <span class=\"token function\">install</span> python</code></pre></div>\n<p>설치한 파이썬 3의 정확한 버전과 바이너리 파일의 위치는 다음과 같이 확인하실 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ python3 -V\nPython <span class=\"token number\">3.7</span>.6\n$ <span class=\"token function\">which</span> python3\n/usr/bin/python3</code></pre></div>\n<p>이제부터 Mac에 내장된 파이썬 2가 사용해야 할 때는 <code>python</code>, 직접 설치한 파이썬 3를 사용해야 할 때는 <code>python3</code> 커맨드를 사용하면 됩니다.\n마찬가지 방식으로 파이썬 2 패키지를 설치할 때는 <code>pip</code>, 파이썬 3 패키지를 설치할 때는 <code>pip3</code> 커맨드를 사용합니다.</p>\n<h2 id=\"오직-파이썬-3만-쓰기\" style=\"position:relative;\"><a href=\"#%EC%98%A4%EC%A7%81-%ED%8C%8C%EC%9D%B4%EC%8D%AC-3%EB%A7%8C-%EC%93%B0%EA%B8%B0\" aria-label=\"오직 파이썬 3만 쓰기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>오직 파이썬 3만 쓰기</h2>\n<p>파이썬 2의 지원이 공식 중단 됨에 따라 앞으로 파이썬 2를 사용하는 프로젝트는 줄어들 것이고 그에 따라 점점 파이썬 2를 사용할 일이 적어질 것입니다.\n저처럼 파이썬 2를 사용할 일이 거의 없는 분이라면, 위와 같이 굳이 2개의 커맨드를 사용할 이유가 없을 것입니다.</p>\n<p>이럴 경우, 다음과 같이 <code>python</code>과 <code>pip</code> 커맨드가 파이썬 3 바이너리를 바라보도록 별칭(alias)를 설정해주면 됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"alias python=/usr/local/bin/python3\"</span> <span class=\"token operator\">>></span> ~/.bash_profile\n$ <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"alias pip=/usr/local/bin/pip3\"</span> <span class=\"token operator\">>></span> ~/.bash_profile</code></pre></div>\n<p>Zsh를 사용하시는 분들은 <code>.bash_profile</code> 파일 대신에 <code>.zshrc</code>를 사용하면 됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"alias python=/usr/local/bin/python3\"</span> <span class=\"token operator\">>></span> ~/.zshrc\n$ <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"alias pip=/usr/local/bin/pip3\"</span> <span class=\"token operator\">>></span> ~/.zshrc</code></pre></div>\n<p><code>.bash_profile</code>(또는 <code>.zshrc</code>) 파일의 변경 사항을 적용하고 <code>python</code> 커맨드를 날리면 파이썬 3 런타임이 실행되는 것을 볼 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token builtin class-name\">exec</span> <span class=\"token string\">\"<span class=\"token environment constant\">$SHELL</span>\"</span>\n$ python -V\nPython <span class=\"token number\">3.7</span>.6\n$ <span class=\"token function\">which</span> python\npip: aliased to /usr/local/bin/python3</code></pre></div>\n<h2 id=\"pyenv로-여러-파이썬-버전-변경하기\" style=\"position:relative;\"><a href=\"#pyenv%EB%A1%9C-%EC%97%AC%EB%9F%AC-%ED%8C%8C%EC%9D%B4%EC%8D%AC-%EB%B2%84%EC%A0%84-%EB%B3%80%EA%B2%BD%ED%95%98%EA%B8%B0\" aria-label=\"pyenv로 여러 파이썬 버전 변경하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>pyenv로 여러 파이썬 버전 변경하기</h2>\n<p>파이썬 3만을 쓰더라도, 하나의 Mac에서 3.5, 3.6, 3.7, 3.8 등 여러 마이너 버전의 파이썬을 사용하고 싶을 때가 있습니다.\n이럴 경우, <code>pyenv</code> 패키지를 사용하면, 좀 더 쉽게 여러 버전의 파이썬을 설치하고 변경할 수 있습니다.</p>\n<p>먼저 Homebrew를 이용해서 <code>pyenv</code> 패키지를 설치합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ brew <span class=\"token function\">install</span> pyenv</code></pre></div>\n<p>그 다음, <code>.bash_profile</code>(또는 <code>.zshrc</code>) 파일에 <code>pyenv</code>가 활성화 되도록 관련 스크립트를 추가해줍니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token builtin class-name\">echo</span> -e <span class=\"token string\">'if command -v pyenv 1>/dev/null 2>&amp;1; then\\n  eval \"$(pyenv init -)\"\\nfi'</span> <span class=\"token operator\">>></span> ~/.bash_profile</code></pre></div>\n<p>그리고 <code>.bash_profile</code>(또는 <code>.zshrc</code>) 파일의 변경 사항을 적용해줍니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token builtin class-name\">exec</span> <span class=\"token string\">\"<span class=\"token environment constant\">$SHELL</span>\"</span></code></pre></div>\n<p>자 이제, <code>pyenv</code>를 사용할 준비가 끝이 났습니다! 👍\n<code>pyenv install</code> 커맨드로 여러 버전의 파이썬 3를 설치해봅니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ pyenv <span class=\"token function\">install</span> <span class=\"token number\">3.7</span>.6\n$ pyenv <span class=\"token function\">install</span> <span class=\"token number\">3.8</span>.1</code></pre></div>\n<p>드디어, <code>pyenv global</code> 커맨드를 이용해서 두 개 버전의 파이썬 사이를 자유롭게 넘나들 수 있게 되었습니다. 🎉</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ pyenv global <span class=\"token number\">3.8</span>.1\n$ python -V\nPython <span class=\"token number\">3.8</span>.1\n➜  new-blog git:<span class=\"token punctuation\">(</span>new-contents<span class=\"token punctuation\">)</span> ✗ pyenv global <span class=\"token number\">3.7</span>.6\n➜  new-blog git:<span class=\"token punctuation\">(</span>new-contents<span class=\"token punctuation\">)</span> ✗ python -V\nPython <span class=\"token number\">3.7</span>.6</code></pre></div>\n<p><code>pyenv versions</code> 커맨드를 통해서 Mac에 어떤 버전의 파이썬이 설치되어 있고, 이 중 현재 어떤 버전이 활성화되어 있는지 확인할 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ pyenv versions\n  system\n* <span class=\"token number\">3.7</span>.6 <span class=\"token punctuation\">(</span>set by /Users/dale/.pyenv/version<span class=\"token punctuation\">)</span>\n  <span class=\"token number\">3.8</span>.1</code></pre></div>\n<h2 id=\"마치면서\" style=\"position:relative;\"><a href=\"#%EB%A7%88%EC%B9%98%EB%A9%B4%EC%84%9C\" aria-label=\"마치면서 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>마치면서</h2>\n<p>지금까지 하나의 Mac에서 여러 버전의 파이썬을 관리하는 몇 가지 방법에 대해서 살펴보았습니다.\n개인적으로 <code>pyenv</code>를 사용한 이후로는 파이썬 개발을 할 때 버전 때문에 문제를 겪은 적은 없었던 것 같습니다.</p>\n<p>여러 버전의 파이썬을 이렇게 운영 체제 레벨에서 관리하는 것도 방법이지만, 궁긍적으로 각 프로젝트 레벨에서 독립적으로 관리하는 것을 추천드리고 싶습니다.\n프로젝트 레벨에서 파이썬 실행 환경을 제어하는 방법에 대해서는 추후 포스트에서 다뤄보도록 하겠습니다.</p>","timeToRead":4,"fields":{"slug":"/python-pyenv/","tags":["Python","파이썬","pyenv","Mac","Homebrew"]},"frontmatter":{"title":"여러 버전의 파이썬 관리하기 (pyenv)","date":"Jan 11, 2020"}},"next":{"fields":{"slug":"/storybook/"},"frontmatter":{"title":"Storybook 소개 / 기본 사용법"}}}},"staticQueryHashes":["2362167539","3000541721","3056348342"]}