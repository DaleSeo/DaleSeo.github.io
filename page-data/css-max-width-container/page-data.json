{"componentChunkName":"component---src-templates-detail-template-jsx","path":"/css-max-width-container/","result":{"pageContext":{"previous":{"fields":{"slug":"/css-html-radio/"},"frontmatter":{"title":"CSS 라디오 버튼 스타일링 가이드"}},"node":{"html":"<p>모바일 우선(mobile-first) 웹디자일 할 때 컨텐츠를 위에서 아래로 배치하는 화면 레이아웃을 제일 먼저 고려하게 되는데요.\n이 때 대부분의 경우 컨텐츠 (특히, 텍스트 컨텐츠)를 수평 중간에 위치시켜야 하죠?</p>\n<p>이번 포스팅에서는 CSS로 레이아웃 잡을 때 컨텐츠를 수평 중간에 정렬하는 요령에 대해서 알아보려고 합니다.</p>\n<h2 id=\"수평-중간-정렬\" style=\"position:relative;\"><a href=\"#%EC%88%98%ED%8F%89-%EC%A4%91%EA%B0%84-%EC%A0%95%EB%A0%AC\" aria-label=\"수평 중간 정렬 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>수평 중간 정렬</h2>\n<p>컨텐츠를 수평에 정렬하는 작업은 웹페이지의 여러 부분에 걸쳐서 일어나게 되므로 보통 클래스로 스타일하는 경우가 많습니다.\n관례적으로 <code>container</code>나 <code>max-width-wrapper</code>와 같은 클래스명을 주로 사용하는데요.</p>\n<p>컨텐츠를 수평 중간 정렬하려면 우선 컨텐츠를 담고 있는 HTML 요소의 폭을 <code>width</code> 속성을 이용하여 좁혀줘야 합니다.\n<code>div</code>, <code>p</code>, <code>h1</code> 등 대부분 block 요소는 기본적으로 너비(width)가 <code>100%</code>이기 때문인데요.\n그러므로 폭을 줄여주지 않으면 항상 브라우저 화면 폭만큼 늘어나서 수평 정렬가 무의미해지겠죠?</p>\n<p>컨텐츠를 담고 있는 요소의 폭을 줄이면 요소가 기본적으로는 왼쪽으로 수평 정렬되는데요.\n좌우 <code>margin</code>을 <code>auto</code>로 설정해주면 자연스럽게 요소가 중간에 오게 됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.container</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 70%<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">margin</span><span class=\"token punctuation\">:</span> 0 auto<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"최대-너비-제한\" style=\"position:relative;\"><a href=\"#%EC%B5%9C%EB%8C%80-%EB%84%88%EB%B9%84-%EC%A0%9C%ED%95%9C\" aria-label=\"최대 너비 제한 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>최대 너비 제한</h2>\n<p>최근에는 TV 처럼 매우 엄청나게 큰 화면에서도 브라우징이 가능하기 때문에 컨텐츠의 최대 너비를 제한해주는 것이 좋습니다.\n안 그러면 너무 많은 양의 컨텐츠가 좌우로 나오게 되어 가독이 어려워질테니까요.</p>\n<p>이렇게 컨텐츠의 최대 너비를 제한할 때는 <code>max-width</code> 속성을 추가해주면 되는데요.\n일반적으로 <code>width</code> 속성에는 상대 단위로 일반 너비를 명시하고, <code>max-width</code> 속성에 절대 단위로 최대 너비를 명시해줍니다.\n그러면 <code>max-width</code> 속성값이 뷰포트(viewport)의 폭이 좁은 경우에는 <code>width</code> 속성값이 적용되다가 뷰포트의 폭이 <code>max-width</code> 속성값을 넘어가게 되면 컨텐츠의 폭이 더 이상 놀어나지 않게 됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.container</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 70%<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">max-width</span><span class=\"token punctuation\">:</span> 1000px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">margin</span><span class=\"token punctuation\">:</span> 0 auto<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"고정-패딩-넣기\" style=\"position:relative;\"><a href=\"#%EA%B3%A0%EC%A0%95-%ED%8C%A8%EB%94%A9-%EB%84%A3%EA%B8%B0\" aria-label=\"고정 패딩 넣기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>고정 패딩 넣기</h2>\n<p>모바일 화면과 같이 좁은 뷰포트에서는 <code>width</code> 속성을 상대 단위로 지정해줄 경우 좌우에 여백이 너무 많아서 상대적으로 컨텐츠를 보여주는 너비가 너무 좁게 느껴질 수 있습니다.\n이럴 때는 <code>width</code> 속성값을 <code>100%</code>로 주고, 좌우에 <code>padding</code>을 넣어주는 것이 더 유리한 경우가 많습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.container</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 100%<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">max-width</span><span class=\"token punctuation\">:</span> 1000px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">margin</span><span class=\"token punctuation\">:</span> 0 auto<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> 0 16px<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"반응형-패딩\" style=\"position:relative;\"><a href=\"#%EB%B0%98%EC%9D%91%ED%98%95-%ED%8C%A8%EB%94%A9\" aria-label=\"반응형 패딩 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>반응형 패딩</h2>\n<p>요즘같이 웹브라우징을 하는 디바이스가 워낙 다양한 환경에서는 <code>padding</code>의 크기를 화면 너비에 따라서 자동으로 늘어나고 줄어들 게 해주는게 좋겠죠?\n미디어 쿼리를 적절히 이용하여 폭이 넓은 뷰포트에서는 좌우 패딩을 서서히 늘려주면 됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.container</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 100%<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">max-width</span><span class=\"token punctuation\">:</span> 1000px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">margin</span><span class=\"token punctuation\">:</span> 0 auto<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> 0 16px<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token atrule\"><span class=\"token rule\">@media</span> <span class=\"token punctuation\">(</span><span class=\"token property\">min-width</span><span class=\"token punctuation\">:</span> 480px<span class=\"token punctuation\">)</span></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token selector\">.container</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> 0 32px<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token atrule\"><span class=\"token rule\">@media</span> <span class=\"token punctuation\">(</span><span class=\"token property\">min-width</span><span class=\"token punctuation\">:</span> 768px<span class=\"token punctuation\">)</span></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token selector\">.container</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> 0 48px<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"최신-문법-활용\" style=\"position:relative;\"><a href=\"#%EC%B5%9C%EC%8B%A0-%EB%AC%B8%EB%B2%95-%ED%99%9C%EC%9A%A9\" aria-label=\"최신 문법 활용 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>최신 문법 활용</h2>\n<p>트랜드에 맞춰 최신 문법을 사용하면 좀 더 깔끔하게 CSS 코딩을 할 수 있어서 더욱 좋겠죠?</p>\n<p>예를 들어, <code>min()</code> 함수를 사용하면 <code>width</code> 속성만 있어도 되서, <code>max-width</code> 속성을 생략할 수 있고요.\n<code>margin-inline</code>이나 <code>padding-inline</code> 속성을 활용하면 굳이 상하 여백을 지정해줄 필요가 없을 것입니다.</p>\n<p>이러한 CSS 문법은 예전에는 브라우저 호환성 문제 때문에 사용이 꺼려졌었지만, 요즘에는 대부분의 브라우저에서 지원이 되기 때문에 큰 걱정없이 쓸 수 있습니다. 😃</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.container</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> <span class=\"token function\">min</span><span class=\"token punctuation\">(</span>100%<span class=\"token punctuation\">,</span> 1000px<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token property\">margin-inline</span><span class=\"token punctuation\">:</span> auto<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">padding-inline</span><span class=\"token punctuation\">:</span> 16px<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token atrule\"><span class=\"token rule\">@media</span> <span class=\"token punctuation\">(</span><span class=\"token property\">min-width</span><span class=\"token punctuation\">:</span> 480px<span class=\"token punctuation\">)</span></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token selector\">.container</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">padding-inline</span><span class=\"token punctuation\">:</span> 32px<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token atrule\"><span class=\"token rule\">@media</span> <span class=\"token punctuation\">(</span><span class=\"token property\">min-width</span><span class=\"token punctuation\">:</span> 768px<span class=\"token punctuation\">)</span></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token selector\">.container</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">padding-inline</span><span class=\"token punctuation\">:</span> 48px<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"전체-코드\" style=\"position:relative;\"><a href=\"#%EC%A0%84%EC%B2%B4-%EC%BD%94%EB%93%9C\" aria-label=\"전체 코드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>전체 코드</h2>\n<p>본 포스팅에서 작성한 코드는 아래에서 직접 확인하고 실행해보실 수 있습니다.</p>\n<iframe height=\"400\" style=\"width: 100%;\" scrolling=\"no\" title=\"Untitled\" src=\"https://codepen.io/daleseo/embed/bGvQVOz?default-tab=css%2Cresult\" frameborder=\"no\" loading=\"lazy\" allowtransparency=\"true\" allowfullscreen=\"true\">\n  See the Pen <a href=\"https://codepen.io/daleseo/pen/bGvQVOz\">\n  Untitled</a> by Dale Seo (<a href=\"https://codepen.io/daleseo\">@daleseo</a>)\n  on <a href=\"https://codepen.io\">CodePen</a>.\n</iframe>\n<h2 id=\"마치면서\" style=\"position:relative;\"><a href=\"#%EB%A7%88%EC%B9%98%EB%A9%B4%EC%84%9C\" aria-label=\"마치면서 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>마치면서</h2>\n<p>이상으로 웹사이트 레이아웃을 잡을 때 컨텐츠의 최대 너비를 제한하면서 수평 중간에 정렬하기 위해서 활용할 수 있는 CSS 코드를 함께 작성해보았습니다.</p>\n<p>동일한 결과를 Flexbox나 CSS Grid와 같이 CSS에 비교적 최근에 추가된 레이아웃 기술을 이용해서도 구현할 수 있는데요.\n하지만 이렇게 간단한 레아아웃을 위해서 복잡한 기술을 쓰는 것은 오버엔지어링(over engineering)이 되어 오히려 득보다 해가 될 수가 있답니다 😆</p>","timeToRead":3,"fields":{"slug":"/css-max-width-container/","tags":["CSS","layout","max-width","min"]},"frontmatter":{"title":"CSS 레이아웃: 컨텐츠 수평 중간 정렬하기","date":"Aug 16, 2022"}},"next":{"fields":{"slug":"/css-responsive-typography/"},"frontmatter":{"title":"CSS로 반응형 글꼴 스타일하기"}}}},"staticQueryHashes":["2168229929","2362167539","3056348342"]}