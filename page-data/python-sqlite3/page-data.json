{"componentChunkName":"component---src-templates-detail-template-jsx","path":"/python-sqlite3/","result":{"pageContext":{"previous":{"fields":{"slug":"/python-for-index/"},"frontmatter":{"title":"[파이썬] for 루프에서 인덱스 얻기"}},"node":{"html":"<p>파이썬에 기본적으로 내장되어 있는 데이터베이스인 sqlite3 모듈를 사용하는 방법에 대해서 알아보겠습니다.</p>\n<h2 id=\"데이터베이스-접속\" style=\"position:relative;\"><a href=\"#%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B2%A0%EC%9D%B4%EC%8A%A4-%EC%A0%91%EC%86%8D\" aria-label=\"데이터베이스 접속 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>데이터베이스 접속</h2>\n<p>sqlite3 내장 모듈을 임포트 후에 connect 메서드를 통해 커넥션 객체를 생성합니다.</p>\n<ul>\n<li>메모리 DB 접속 (일회성)</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token keyword\">import</span> sqlite3\ncon <span class=\"token operator\">=</span> sqlite3<span class=\"token punctuation\">.</span>connect<span class=\"token punctuation\">(</span><span class=\"token string\">':memory:'</span><span class=\"token punctuation\">)</span></code></pre></div>\n<ul>\n<li>파일 DB 접속</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token keyword\">import</span> sqlite3\ncon <span class=\"token operator\">=</span> sqlite3<span class=\"token punctuation\">.</span>connect<span class=\"token punctuation\">(</span><span class=\"token string\">'./test.db'</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h2 id=\"테이블-생성\" style=\"position:relative;\"><a href=\"#%ED%85%8C%EC%9D%B4%EB%B8%94-%EC%83%9D%EC%84%B1\" aria-label=\"테이블 생성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>테이블 생성</h2>\n<p>커서 객체를 받아와서 execute 메서드로 CREATE TABLE 쿼리를 전송합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\">cur <span class=\"token operator\">=</span> con<span class=\"token punctuation\">.</span>cursor<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\ncur<span class=\"token punctuation\">.</span>execute<span class=\"token punctuation\">(</span><span class=\"token string\">\"CREATE TABLE PhoneBook(Name text, PhoneNum text);\"</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h2 id=\"데이터-삽입\" style=\"position:relative;\"><a href=\"#%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%82%BD%EC%9E%85\" aria-label=\"데이터 삽입 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>데이터 삽입</h2>\n<p>마찬가지로 커서 객체로 작업합니다.</p>\n<ul>\n<li>기본 String Query 사용</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\">cur <span class=\"token operator\">=</span> con<span class=\"token punctuation\">.</span>cursor<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\ncur<span class=\"token punctuation\">.</span>execute<span class=\"token punctuation\">(</span><span class=\"token string\">\"INSERT INTO PhoneBook Values('Derick', '010-1234-5678');\"</span><span class=\"token punctuation\">)</span></code></pre></div>\n<ul>\n<li>Parameter: Tuple 사용</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\">name <span class=\"token operator\">=</span> <span class=\"token string\">'SangJung'</span>\nphoneNumber <span class=\"token operator\">=</span> <span class=\"token string\">'010-5670-2343'</span>\ncur <span class=\"token operator\">=</span> con<span class=\"token punctuation\">.</span>cursor<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\ncur<span class=\"token punctuation\">.</span>execute<span class=\"token punctuation\">(</span><span class=\"token string\">'INSERT INTO PhoneBook VALUES(?, ?);'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">,</span> phoneNumber<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<ul>\n<li>Named Parameter: Dictionary 사용</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\">name <span class=\"token operator\">=</span> <span class=\"token string\">'SangJung'</span>\nphoneNumber <span class=\"token operator\">=</span> <span class=\"token string\">'010-5670-2343'</span>\ncur <span class=\"token operator\">=</span> con<span class=\"token punctuation\">.</span>cursor<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\ncur<span class=\"token punctuation\">.</span>execute<span class=\"token punctuation\">(</span><span class=\"token string\">'INSERT INTO PhoneBook VALUES(:name, :phoneNumber);'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">:</span>name<span class=\"token punctuation\">,</span> <span class=\"token string\">\"phoneNumber\"</span><span class=\"token punctuation\">:</span>phoneNumber<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<ul>\n<li>List 사용</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\">dataList <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Tom'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'010-543-5432'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'DSP'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'010-123-1234'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\ncur <span class=\"token operator\">=</span> con<span class=\"token punctuation\">.</span>cursor<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\ncur<span class=\"token punctuation\">.</span>executemany<span class=\"token punctuation\">(</span><span class=\"token string\">\"INSERT INTO PhoneBook VALUES(?, ?);\"</span><span class=\"token punctuation\">,</span> dataList<span class=\"token punctuation\">)</span></code></pre></div>\n<h2 id=\"데이터-조회\" style=\"position:relative;\"><a href=\"#%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%A1%B0%ED%9A%8C\" aria-label=\"데이터 조회 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>데이터 조회</h2>\n<p>커서 객체는 파일 포인터처럼 한 번 읽은 데이터는 다시 읽을 수 없으므로 다시 SELECT 쿼리를 전송해야 함을 주의합니다.</p>\n<ul>\n<li>순회 조회</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\">cur<span class=\"token punctuation\">.</span>execute<span class=\"token punctuation\">(</span><span class=\"token string\">'SELECT * FROM PhoneBook'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">for</span> row <span class=\"token keyword\">in</span> cur<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>row<span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">('Derick', '010-1234-5678')\n('SangJung', '010-5670-2343')\n('Tom', '010-543-5432')\n('DSP', '010-123-1234')</code></pre></div>\n<ul>\n<li>단건 조회</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\">cur<span class=\"token punctuation\">.</span>execute<span class=\"token punctuation\">(</span><span class=\"token string\">'SELECT * FROM PhoneBook'</span><span class=\"token punctuation\">)</span>\ncur<span class=\"token punctuation\">.</span>fetchone<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">('Derick', '010-1234-5678')</code></pre></div>\n<ul>\n<li>다건 조회</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\">cur<span class=\"token punctuation\">.</span>fetchmany<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">[('SangJung', '010-5670-2343'), ('SangJung', '010-5670-2343')]</code></pre></div>\n<ul>\n<li>모두 조회</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\">cur<span class=\"token punctuation\">.</span>fetchall<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">[('Tom', '010-543-5432'), ('DSP', '010-123-1234')]</code></pre></div>","timeToRead":2,"fields":{"slug":"/python-sqlite3/","tags":["Python","파이썬","sqlite3"]},"frontmatter":{"title":"[파이썬] sqlite3 모듈 사용법","date":"Jun 23, 2018"}},"next":{"fields":{"slug":"/python-random/"},"frontmatter":{"title":"[파이썬] random 모듈 사용법"}}}},"staticQueryHashes":["2362167539","3000541721","3056348342"]}