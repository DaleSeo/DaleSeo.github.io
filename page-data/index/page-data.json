{"componentChunkName":"component---src-templates-list-template-jsx","path":"/","result":{"data":{"allMarkdownRemark":{"nodes":[{"excerpt":"정렬된 데이터를 검색할 때 가장 널리 사용되는 이진 검색(binary search)에 대해서 알아보겠습니다. 기본 개념 책으로된 영어 사전(요즘은 거의 안 쓰죠? 😓)에서 단어를 찾거나 지역 업소록에서 상호명을 어떻게 찾으시나요?\n수백, 수천 페이지…","timeToRead":6,"fields":{"slug":"/search-binary/","tags":["algorithm","search","Python","Java"]},"frontmatter":{"title":"[알고리즘] 이진 검색 - Binary Search (Python, Java)","date":"Oct 28, 2020"}},{"excerpt":"자바스크립트로 웹 개발을 하다보면 아무리 간단한 애플리케이션이라도 데이터를 어딘가에 저장해야 할 일이 생깁니다.\n보통 이럴 때 데이터베이스(DB) 서버나 클라우드(Cloud) 플랫폼에 데이터를 저장하거나 경우가 많을 것입니다. 하지만 저장해야할 데이…","timeToRead":4,"fields":{"slug":"/js-web-storage/","tags":["JavaScript"]},"frontmatter":{"title":"[자바스크립트] 웹 스토리지 (localStorage, sessionStorage) 사용법","date":"Oct 24, 2020"}},{"excerpt":"리액트(React)는 보통 HTML과 매우 흡사한 JSX 코드로 작성하는 경우가 대부분인데요.\n이 JSX 때문에 리액트를 좋아하는 사람도 많지만 반면에 이 JSX 때문에 리액트를 싫어한다는 분들도 많이 보게 됩니다. 이번 포스트에서는 이렇게 말도 많…","timeToRead":6,"fields":{"slug":"/react-jsx/","tags":["JavaScript","React","Babel"]},"frontmatter":{"title":"[React] JSX와 Babel","date":"Oct 21, 2020"}},{"excerpt":"JSX 문법으로 코드를 작성하다보면 리액트(React)가 어디까지나 자바스크립트 라이브러리는 사실을 잊어버리기 쉬운 것 같습니다.\n이번 포스트에서는 리액트 API를 JSX 없이 날 것 그대로 자바스크립트로 사용하면서 리액트가 어떻게 작동하는지 알아보…","timeToRead":4,"fields":{"slug":"/react-api/","tags":["JavaScript","React"]},"frontmatter":{"title":"React API를 날 것으로 사용해보기","date":"Oct 19, 2020"}},{"excerpt":"사전(dictionary)은 파이썬에서 리스트(list)와 더불어 가장 많이 사용되는 내장 데이터 타입 중 하나 입니다. 사전의 특징 해시 테이블(hash table) 자료 구조 기반으로 하는 사전은 키(key)와 값(value)으로 이루어진 여러 …","timeToRead":5,"fields":{"slug":"/python-ditonary/","tags":["Python","dictionary"]},"frontmatter":{"title":"[파이썬] 사전(dictionary) 사용법","date":"Oct 17, 2020"}},{"excerpt":"CSS 트랜지션(transition)은 어떤 엘리먼트에 스타일의 변화가 일정 시간에 걸쳐서 부드럽게 나타나도록 할 때 사용합니다. 기본 사용법 CSS에서 트랜지션과 관련된 속성은 다음과 같은데 처음에는 좀 복잡하게 느껴질 수도 있습니다. transi…","timeToRead":3,"fields":{"slug":"/css-transitions/","tags":["CSS"]},"frontmatter":{"title":"CSS 트랜지션(transition)","date":"Oct 10, 2020"}},{"excerpt":"git add는 작업 디렉토리(working directory) 상의 변경 내용을 스테이징 영역(staging area)에 추가하기 위해서 사용하는 Git 명령어입니다. git commit vs. git add git add 명령어는 다음 변경(co…","timeToRead":3,"fields":{"slug":"/git-add/","tags":["Git"]},"frontmatter":{"title":"git add 기본 개념/사용법","date":"Oct 4, 2020"}},{"excerpt":"많은 프로그래밍 언어에서 주어진 여러 값 중에서 최소값 또는 최대값을 반환하는 기능을 제공합니다.\n예를 들어 파이썬(Python)은 min(), max() 내장 함수를 제공하고, 자바(Java)는 Math 클래스에서 min(), max() 정적 메서…","timeToRead":3,"fields":{"slug":"/css-min-max/","tags":["CSS","Responsive"]},"frontmatter":{"title":"CSS 함수 - min(), max()","date":"Oct 3, 2020"}},{"excerpt":"git init는 새로운 Git 저장소(repository)를 생성할 때 사용하는 Git 명령어 입니다. Git 사용할 때 보통 다른 사람이 이미 생성해 놓은 Git 원격 저장소를 git clone 명령어를 통해 내려받는 경우가 많고, 직접 Git …","timeToRead":4,"fields":{"slug":"/git-init/","tags":["Git"]},"frontmatter":{"title":"git init 명령어로 Git 저장소 생성하기","date":"Sep 26, 2020"}},{"excerpt":"웹 접근성(accessibility)을 준수하는 콤보박스(Combobox)를 구현하는 것은 생각보다 쉽지 않은 일입니다. 사실 가장 쉬운 방법은 지난 포스트에서 소개했던 것처럼 HTML의 <select> 엘리먼트를 사용하는 것인데요.\n<select>…","timeToRead":4,"fields":{"slug":"/react-downshift/","tags":["JavaScript","React"]},"frontmatter":{"title":"[React] Downshift로 콤보박스 구현","date":"Sep 20, 2020"}},{"excerpt":"자바스크립트를 이용하여 웹페이지 상에서 사용자의 키보드 입력을 감지하여 처리하는 방법에 대해서 알아보겠습니다. 키보드 이벤트 타입 키보드 이벤트(Keyboard Event)는 사용자가 키를 누르거나 키를 놓을 때 발생합니다.\n키를 누를 때는 keyd…","timeToRead":3,"fields":{"slug":"/js-key-events/","tags":["JavaScript","event"]},"frontmatter":{"title":"[자바스크립트] 키보드 이벤트 (keydown/keyup)","date":"Sep 12, 2020"}},{"excerpt":"이번 포스트에서는 파이썬의 정적(static) 메서드와 클래스(class) 메서드에 대해서 알아보겠습니다. 인스턴스(instance) 메서드 정적(static) 메서드와 클래스(class) 메서드에 대해서 살펴보기 전에 가장 기본이 되는 인스턴스(i…","timeToRead":4,"fields":{"slug":"/python-class-methods-vs-static-methods/","tags":["Python"]},"frontmatter":{"title":"[파이썬] 정적(static) 메서드와 클래스(class) 메서드","date":"Sep 6, 2020"}},{"excerpt":"CSS로 웹사이트의 레이아웃을 잡을 때, 브라우저 화면 맨 중앙에 어떤 엘리먼트를 배치해야할 경우가 자주 있는데요.\n이게 의외로 생각보다 쉽지가 않아서 온갖 편법이 난무하던 시절이 있었습니다.\n하지만 Flexbox와 Grid가 도입된 이후로는 엘리먼…","timeToRead":1,"fields":{"slug":"/css-centering/","tags":["HTML","CSS","Flexbox","Grid"]},"frontmatter":{"title":"[CSS] 화면 중앙 배치 (Flexbox/Grid)","date":"Sep 4, 2020"}},{"excerpt":"CSS를 사용하다 보면 정말 간단한 정렬이 생각처럼 되지 않아서 애를 먹는 경우가 있습니다.\n특히 초보자들이 많이 겪는 문제가 HTML 엘리먼트를 우측으로 정렬하는 것입니다. HTML 웹페이지의 레이아웃에서 엘리먼트를 우측으로 정렬해야 하는 대표적인…","timeToRead":4,"fields":{"slug":"/css-align-right/","tags":["HTML","CSS","Flexbox","Grid","position"]},"frontmatter":{"title":"[CSS] 엘리먼트 우측 정렬 (Flexbox/Grid)","date":"Aug 29, 2020"}},{"excerpt":"콤보박스(combobox), 드랍다운(dropdown) 등 여러가지 이름으로 불리우는 HTML의 <select> 엘리먼트와 CSS를 이용하여 아래와 같이 만들어보겠습니다. HTML 작성 사실 웹에서 콤보박스를 구현하는 방법은 여러가지가 있지만, 본 …","timeToRead":3,"fields":{"slug":"/css-selects/","tags":["HTML","CSS","select"]},"frontmatter":{"title":"CSS 콤보박스 스타일링 - <select>","date":"Aug 23, 2020"}},{"excerpt":"HTML과 CSS를 이용하여 다음과 같은 웹에서 흔히 볼 수 있는 버튼을 만들어보도록 하겠습니다. HTML 작성 먼저 4가지 종류(기본, 성공, 오류, 경고)의 버튼에 대한 HTML을 작성합니다. 디폴트 스타일 제거 대부분의 브라우저는 User Ag…","timeToRead":3,"fields":{"slug":"/css-buttons/","tags":["HTML","CSS","button","CSS variables"]},"frontmatter":{"title":"CSS 버튼 스타일링 - <button>","date":"Aug 15, 2020"}},{"excerpt":"이번 포스트에서는 플렉스박스(Flexbox)와 미디어쿼리(media query)를 사용하여 반응형 네비게이션을 만들어보도록 하겠습니다. 네비게이션 1 아래 HTML 코드는 여느 웹사이트에서나 흔히 볼 수 있는 젼형적인 네비게이션입니다.\n화면의 너비가…","timeToRead":5,"fields":{"slug":"/css-flexbox-navigation/","tags":["CSS","Flexbox","Responsive","MediaQuery"]},"frontmatter":{"title":"CSS 플렉스박스 반응형 네비게이션","date":"Aug 8, 2020"}},{"excerpt":"양식(form)은 사용자로 부터 데이터를 입력 받기 위해 웹애플리케이션에서 필수적인 요소임에도 불구하고, 리액트(React)로 직접 구현을 해보면 생각보다 고려해야 부분이 많다는 것을 느끼게 됩니다.\n이번 포스트에서는 React Hook를 이용해서 …","timeToRead":6,"fields":{"slug":"/react-forms-with-hooks/","tags":["JavaScript","React","Form","Hooks","useState","useEffect"]},"frontmatter":{"title":"[React Hook] 양식(form)에 적용하기","date":"Aug 3, 2020"}},{"excerpt":"양식(form)은 웹애플리케이션에서 사용자로 부터 데이터를 입력 받기 위해서 필수적인 기능입니다.\n이번 포스트에서는 비빌번호를 변경을 위한 간단한 리액트(React) 컴포넌트를 구현해보겠습니다. JSX 기본 마크업 먼저 하나의 입력란과 제출 버튼으로…","timeToRead":4,"fields":{"slug":"/react-forms/","tags":["JavaScript","React","Form","Hooks","useState"]},"frontmatter":{"title":"React로 양식(form) UI 구현하기","date":"Aug 1, 2020"}},{"excerpt":"optional chaining을 지원하기 위해서 ES2020에서 추가된 문법인 ?. 연산자에 대해서 알아보도록 하겠습니다. . 연산자를 통한 속성값 접근의 문제점 그동안 자바스크립트에서는 주로 . 연산자(chaining)를 사용해서 객체의 속성값에…","timeToRead":2,"fields":{"slug":"/js-optional-chaining/","tags":["JavaScript","ES6","ES2020"]},"frontmatter":{"title":"[ES2020] ?. 연산자 - Optional Chaining","date":"Jul 26, 2020"}},{"excerpt":"nullish coalescing을 지원하기 위해서 ES2020에서 추가된 문법인 ?? 연산자에 대해서 알아보도록 하겠습니다. || 연산자를 통한 기본값 처리의 문제점 그동안 자바스크립트에서는 주로 || 연산자(logical OR)를 사용해서 기본값…","timeToRead":3,"fields":{"slug":"/js-nullish-coalescing/","tags":["JavaScript","ES6","ES2020"]},"frontmatter":{"title":"[ES2020] ?? 연산자 - Nullish Coalescing","date":"Jul 25, 2020"}},{"excerpt":"어떤 언어를 사용하든지 프로그래밍을 하면서 날짜와 시간 처리는 피하기 어려운 부분입니다.\n파이썬은 내장 모듈인 datetime을 통해서 어떻게 날짜와 시간 데이터를 처리를 지원하고 있는지 알아보겠습니다. timedelta datetime 내장 모듈의…","timeToRead":6,"fields":{"slug":"/python-datetime/","tags":["Python","datetime","timedelta","timezone","date","time"]},"frontmatter":{"title":"[파이썬] datetime 모듈로 날짜/시간 처리하기","date":"Jul 18, 2020"}},{"excerpt":"파이썬은 버전 3.4부터 다른 언어들 처럼 enum(enumeration, 이넘) 타입을 지원하고 있습니다.\nenum은 일반적으로 서로 관련이 있는 여러 개의 상수의 집합을 정의할 때 사용되는데요.\nenum 클래스를 사용하면 인스턴스의 종류를 제한할…","timeToRead":4,"fields":{"slug":"/python-enum/","tags":["Python","enum"]},"frontmatter":{"title":"파이썬 enum 타입 사용법","date":"Jul 11, 2020"}},{"excerpt":"자바스크립트 프로젝트의 규모가 커지면 디렉토리 구조도 복잡해지기 마련입니다.\n혹시 다음과 같은 코드 때문에 해당 모듈을 찾으려고 상위 디렉토리를 하나씩 짚어가며 올라가다가 스트레스 받으신 적이 있으신가요? 😝 상대 경로 Node.js에서 내무 모듈을…","timeToRead":3,"fields":{"slug":"/js-babel-resolver/","tags":["JavaScript","ES6","NodeJS","Babel","CLI"]},"frontmatter":{"title":"Babel로 별칭 경로 설정하기 (Module Resolver)","date":"Jul 5, 2020"}},{"excerpt":"ES6(ES2105) 이상의 최신 자바스크립트 문법으로 작성된 코드가 노드JS(NodeJS)에서 실행이 안 되는 경우가 종종있습니다. 이럴 경우 어쩔 수 없이 예전 자바스크립트 문법으로 코드를 재작성하기도 하는데요. 이번 포스트에서는 자바스크립트 T…","timeToRead":6,"fields":{"slug":"/js-babel-node/","tags":["JavaScript","ES6","NodeJS","Babel","CLI"]},"frontmatter":{"title":"Node.js로 ES6 코드 실행하기 (Babel)","date":"Jul 1, 2020"}},{"excerpt":"Flexbox(플렉스박스)를 이용한 반응형 웹디자인이 대중화되면서 CSS에서 Flexbox의 존재감이 점점 커지고 있습니다.\n이번 포스트에서는 Flexbox를 이해하기 위해서 꼭 필요한 핵심 개념과 자주 사용되는 속성에 대해서 살펴보겠습니다. Fle…","timeToRead":4,"fields":{"slug":"/css-flexbox/","tags":["CSS","Flexbox"]},"frontmatter":{"title":"CSS 플렉스박스(Flexbox) 이해하기","date":"Jun 28, 2020"}},{"excerpt":"큐(queue)는 선입선출, FIFO(First In First Out) 기반의 매우 유명한 자료 구조입니다. 큐를 사용하면 데이터를 추가한 순서대로 제거할 수 있기 때문에 스트리밍(streaming), 너비 우선 탐색(breath first sea…","timeToRead":4,"fields":{"slug":"/python-queue/","tags":["Python","list","queue"]},"frontmatter":{"title":"파이썬에서 큐(queue) 자료 구조 사용하기","date":"Jun 27, 2020"}},{"excerpt":"타입 힌트(type hint)를 언어 차원에서 지원하기 위해서 파이썬 버전 3.5에서 typing 모듈이 스탠더드 라이브러리에 추가되었습니다.\n이번 포스트에서는 typing 모듈을 사용해서 파이썬 코드에 타입 어노테이션을 추가하는 방법에 대해서 알아…","timeToRead":3,"fields":{"slug":"/python-typing/","tags":["Python","파이썬","Mypy","typing","TypeAnnotation","TypeHint"]},"frontmatter":{"title":"[파이썬] typing 모듈로 타입 표시하기","date":"Jun 13, 2020"}},{"excerpt":"Material UI에서 기본적으로 제공하는 컴포넌트를 그대로 사용해도 훌륭하지만 약간씩 스타일을 변경하고 싶을 때가 있습니다.\n이번 포스트에서는 Material UI에 사용자가 정의한 스타일을 적용하는 방법에 대해서 알아보겠습니다. Material…","timeToRead":3,"fields":{"slug":"/material-ui-styles/","tags":["MaterialUI","JavaScript","자바스크립트","React","리액트"]},"frontmatter":{"title":"Material UI 스타일링","date":"Jun 7, 2020"}},{"excerpt":"파이썬 버전 3.5에 추가된 타입 어노테이션(type annotation) 덕분에 파이썬에서도 Mypy와 같은 도구를 통해서 타입 체크가 가능해졌습니다. 파이썬의 타입 어노테이션에 대한 자세한 설명은 관련 포스트를 참고바라겠습니다. 타입 어노테이션 …","timeToRead":3,"fields":{"slug":"/python-mypy/","tags":["Python","파이썬","Mypy","typing","TypeCheck"]},"frontmatter":{"title":"파이썬 타입 체크 - Mypy","date":"Jun 6, 2020"}},{"excerpt":"Docker Compose는 여러 개의 컨테이너(container)로 구성된 애플리케이션을 관리하기 위한 간단한 오케스트레이션(Orchestration) 도구입니다.\n여러 개의 컨테이너로 구성된 Docker Compose 애플리케이션 내에서 컨테이너…","timeToRead":7,"fields":{"slug":"/docker-compose-networks/","tags":["Docker","도커","Compose","container","컨테이너","network","네트워크","docker-compose.yml"]},"frontmatter":{"title":"Docker Compose 네트워크","date":"Jun 4, 2020"}},{"excerpt":"웹페이지의 레이아웃을 잡을 때 컨텐츠를 화면 중앙에 위치시키기나 격자로 배치해야 할 때가 많이 있습니다.\nMaterial UI의 <Container/>와 <Grid/> 컴포넌트를 사용하면 이러한 웹페이지 레이아웃을 매우 쉽고 간단하게 잡을 수 있습니…","timeToRead":2,"fields":{"slug":"/material-ui-containers-grids/","tags":["MaterialUI","JavaScript","자바스크립트","React","리액트"]},"frontmatter":{"title":"Material UI의 Container, Grid 컴포넌트","date":"Jun 1, 2020"}},{"excerpt":"Docker Compose는 여러 개의 컨테이너(container)로 구성된 애플리케이션을 관리하기 위한 간단한 오케스트레이션(Orchestration) 도구입니다.\n이번 포스트에서는 Compose 애플리케이션을 터미널에서 제어하기 위해 사용되는 D…","timeToRead":4,"fields":{"slug":"/docker-compose/","tags":["Docker","도커","Compose","container","컨테이너","image","이미지","Dockerfile","docker-compose.yml","CLI"]},"frontmatter":{"title":"Docker Compose 커맨드 사용법","date":"May 30, 2020"}},{"excerpt":"파이썬 버전 3.5에 추가된 타입 어노테이션(type annotation) 또는 타입 힌트(type hint)가 점점 많은 파이썬 프로젝트에서 사용되고 있는 추세입니다.\n정적(static) 프로그래밍 언어에서 흔히 볼 수 있는 타입 체킹(type c…","timeToRead":5,"fields":{"slug":"/python-type-annotations/","tags":["Python","파이썬","typing","TypeAnnotation","TypeHint"]},"frontmatter":{"title":"파이썬 타입 어노테이션/힌트","date":"May 29, 2020"}},{"excerpt":"Docker Compose를 이용하면 여러 개의 컨테이너(container)로 구성된 애플리케이션을 하나의 파일에 정의해놓고 한 번에 올리거나 내릴 수 있습니다.\n이러한 편리함 때문에 Docker Compose는 특히 로컬 개발 환경이나 테스트 자동…","timeToRead":3,"fields":{"slug":"/docker-compose-file/","tags":["Docker","도커","Compose","container","컨테이너","image","이미지","Dockerfile","docker-compose.yml"]},"frontmatter":{"title":"Docker Compose 설정 방법","date":"May 28, 2020"}},{"excerpt":"CommonJS를 모듈 시스템을 채택했던 Node.js에서는 import, export와 같은 ES 모듈을 사용하려면 Babel과 같은 트랜스파일러(transpiler)를 사용했어야 했는데요.\nNode.js 버전 13.2부터 ES 모듈 시스템에 대한…","timeToRead":4,"fields":{"slug":"/js-node-es-modules/","tags":["JavaScript","자바스크립트","ES6","import","export"]},"frontmatter":{"title":"Node.js에서 ES 모듈(import/export) 사용하기","date":"May 23, 2020"}},{"excerpt":"데코레이터(decorator)를 사용하면 함수를 수정하지 않고도 유연하게 함수에 특정 동작을 추가하거나 작동 방식을 바꿀 수 있습니다. 간단한 데코레이터 작성해보기 \"Hi!\"를 콘솔에 출력하는 say_hi()라는 함수를 작성하고 호출해보겠습니다. 다…","timeToRead":4,"fields":{"slug":"/python-decorators/","tags":["Python","파이썬","decorator","데코레이터"]},"frontmatter":{"title":"[파이썬] 데코레이터 기본 사용법","date":"May 18, 2020"}},{"excerpt":"파이썬에 내장되어 있는 property() 함수와 @property 데코레이터에 대해서 알아보겠습니다. 필드명 사람의 이름, 성, 나이 데이터를 담기 위한 간단한 클래스를 하나 작성해보겠습니다.\n아래 Person 클래스는 이름 first_name, …","timeToRead":4,"fields":{"slug":"/python-property/","tags":["Python","파이썬","property"]},"frontmatter":{"title":"[파이썬] property 사용법 (함수/데코레이터)","date":"May 17, 2020"}},{"excerpt":"웹페이지의 UI를 구현하다 보면 서로 관련이 있는 여러 개의 컴포넌트를 시각적으로 하나의 그룹처럼 묶어주는 컴포넌트가 필요합니다.\n이렇게 관련된 여러 컴포넌트를 보기 쉽게 도와주는 Material UI의 <Paper/>와 <Card/> 컴포넌트에 대…","timeToRead":2,"fields":{"slug":"/material-ui-papers-cards/","tags":["MaterialUI","JavaScript","자바스크립트","React","리액트"]},"frontmatter":{"title":"Material UI의 Paper, Card 컴포넌트","date":"May 16, 2020"}},{"excerpt":"이번 포스트에서는 collections 모듈의 OrderedDict 클래스에 대해서 알아보겠습니다. OrderedDict 파이썬 3.6 이전에서는 사전에 데이터를 삽입된 순서대로 데이터를 획득할 수가 없었습니다.\n따라서 다음과 같이 무작위 순서로 데…","timeToRead":2,"fields":{"slug":"/python-collections-ordered-dict/","tags":["Python","파이썬","dict","사전","dictionary","collections","OrderedDict"]},"frontmatter":{"title":"[파이썬] collections 모듈의 OrderedDict 클래스 사용법","date":"May 14, 2020"}},{"excerpt":"최근에 많은 Django 프로젝트가 Docker를 이용해서 컨테이너(container) 기반으로 개발되고 테스트, 배포되고 있습니다.\n이번 포스트에서는 Docker Compose이용해서 PostgreSQL를 데이터베이스로 사용하는 Django 애플리…","timeToRead":9,"fields":{"slug":"/docker-compose-django/","tags":["Docker","도커","Compose","container","컨테이너","image","이미지","mount","마운트","Dockerfile","Python","파이썬","Django","장고","PostgreSQL"]},"frontmatter":{"title":"Docker Compose로 Django 프로젝트 셋업","date":"May 9, 2020"}},{"excerpt":"Docker 컨테이너(container)에 쓰여진 데이터는 기본적으로 컨테이너가 삭제될 때 함께 사라지게 됩니다.\nDocker에서 돌아가는 많은 애플리케이션이 컨테이너의 생명 주기와 관계없이 데이터를 영속적으로 저장을 해야하는데요.\n뿐만 아니라 많은…","timeToRead":6,"fields":{"slug":"/docker-volumes-bind-mounts/","tags":["Docker","도커","volume","볼륨","mount","마운트","container","컨테이너","CLI"]},"frontmatter":{"title":"Docker 컨테이너에 데이터 저장 (볼륨/바인드 마운트)","date":"May 8, 2020"}},{"excerpt":"마크다운(Markdown)은 경량화된 마크업 언어로 구조적인 텍스트의 편집 용도로 여러가지 도구에서 사용되고 있습니다.\n대표적인 사례인 Github의 경우, 확장된 형태의 마크다운을 지원하고 있기 때문에 이슈(issue)나 PR(pull reqeus…","timeToRead":3,"fields":{"slug":"/unified-remark-rehype/","tags":["JavaScript","자바스크립트","Markdown","HTML","unified","remark","rehype"]},"frontmatter":{"title":"Markdown을 HTML로 변환 (unified, remark, rehype)","date":"May 2, 2020"}},{"excerpt":"Docker 컨테이너(container)는 격리된 환경에서 돌아가기 때문에 기본적으로 다른 컨테이너와의 통신이 불가능합니다.\n하지만 여러 개의 컨테이너를 하나의 Docker 네트워크(network)에 연결시키면 서로 통신이 가능해집니다.\n이번 포스트…","timeToRead":9,"fields":{"slug":"/docker-networks/","tags":["Docker","도커","network","네트워크","container","컨테이너","CLI"]},"frontmatter":{"title":"Docker 네트워크 사용법","date":"Apr 26, 2020"}},{"excerpt":"사용자로 부터 정보를 입력 받는 양식(form) UI의 경우 <input/> 또는 <select/>, <textarea/>와 같은 HTML 엘리먼트가 많이 사용됩니다.\n이러한 입력 엘리먼트는 브라우저마다 다른 스타일로 표현되고, 기본 스타일은 그대로…","timeToRead":4,"fields":{"slug":"/material-ui-text-fields/","tags":["MaterialUI","JavaScript","자바스크립트","React","리액트"]},"frontmatter":{"title":"Material UI의 TextField 컴포넌트","date":"Apr 25, 2020"}},{"excerpt":"Docker CLI 도구는 Docker 컨테이너(container)의 효과적인 관리를 위해서 다양한 커맨드(command)를 제공합니다.\n이번 포스트에서는 자주 쓰이는 커맨드 위주로 어떻게 Docker 컨테이너를 효과적으로 제어할 수 있는지 알아보도…","timeToRead":6,"fields":{"slug":"/docker-containers/","tags":["Docker","도커","container","컨테이너","Dockerfile","CLI"]},"frontmatter":{"title":"Docker 컨테이너 관련 커맨드 사용법","date":"Apr 24, 2020"}},{"excerpt":"우리는 파이썬으로 코딩을 하면서 데이터를 담아두기 위해서 여러가지 방법을 사용합니다. 리스트(list), 튜플(tuple), 사전(dictoinary), 네임드 튜플(namedtuple), 세트(set), 프로즌 세트(frozen set)와 같은 내…","timeToRead":8,"fields":{"slug":"/python-dataclasses/","tags":["Python","파이썬","dataclasses","데이터 클래스"]},"frontmatter":{"title":"[파이썬] 데이터 클래스 사용법 (dataclasses 모듈)","date":"Apr 21, 2020"}},{"excerpt":"Docker를 사용하면서 가장 자주 접하는 커맨드는 단연 컨테이너를 실행하기 위해서 쓰이는 docker run일 것입니다.\ndocker run 커맨드는 상당히 여러가지 옵션을 통해 다양한 방식으로 컨테이너를 실행할 수 있도록 해줍니다.\n이번 포스트에…","timeToRead":5,"fields":{"slug":"/docker-run/","tags":["Docker","도커","container","컨테이너","Dockerfile","CLI"]},"frontmatter":{"title":"docker run 커맨드 사용법","date":"Apr 19, 2020"}},{"excerpt":"React 앱을 개발할 때 Material UI와 같은 컴포넌트 라이브러리를 사용하는 이유 중 하나는 버튼과 같이 너무 기본적인 컴포넌트를 직접 구현하는데 들어가는 시간과 노력을 절약하기 위함일 것입니다. 일반적으로 버튼은 UI에서 사용자의 명령을 …","timeToRead":3,"fields":{"slug":"/material-ui-buttons/","tags":["MaterialUI","JavaScript","자바스크립트","React","리액트"]},"frontmatter":{"title":"Material UI의 버튼 컴포넌트","date":"Apr 18, 2020"}},{"excerpt":"지난 포스트에서는 Material UI의 <Typography/> 컴포넌트를 사용하여 텍스트를 표현하는 방법에 대해서 알아보았습니다.\n이번 포스트에서는 텍스트와 더불어 UI에서 감초같은 역할을 하는 아이콘을 Material UI에서 어떻게 사용할 수…","timeToRead":3,"fields":{"slug":"/material-ui-icons/","tags":["MaterialUI","icon","아이콘","JavaScript","자바스크립트","React","리액트"]},"frontmatter":{"title":"Material UI 아이콘 사용하기","date":"Apr 17, 2020"}},{"excerpt":"Material UI는 현재 가장 많이 쓰이고 있는 React UI 컴포넌트 라이브러리 중에 하나입니다.\n많은 React UI 컴포넌트 라이브러리는 기존에 있는 CSS 라이브러리를 기반으로 만들어지는 경우가 많습니다.\nReact Bootstrap이 …","timeToRead":3,"fields":{"slug":"/material-ui-typography/","tags":["MaterialUI","Typography","JavaScript","자바스크립트","React","리액트"]},"frontmatter":{"title":"Material UI 소개 및 Typography 컴포넌트 사용법","date":"Apr 16, 2020"}},{"excerpt":"Docker CLI 도구는 Docker 이미지(image)의 효과적인 관리를 위해서 다양한 커맨드(command)를 제공합니다.\n이번 포스트에서는 자주 쓰이는 커맨드 위주로 어떻게 Docker 이미지를 제어할 수 있는지 알아보도록 하겠습니다. 이미지…","timeToRead":4,"fields":{"slug":"/docker-images/","tags":["Docker","도커","image","이미지","Dockerfile","CLI"]},"frontmatter":{"title":"Docker 이미지 관련 커맨드 사용법","date":"Apr 12, 2020"}},{"excerpt":"Docker가 대중화되면서 많은 프로젝트들이 개발 환경을 컨테이너화(containerization)시키고 있습니다.\n이러한 프로젝트의 최상위 디렉터리에서는 항상 Dockerfile이 위치하게 되며, 따라서 Dockerfile 이해하는 것은 그 프로젝…","timeToRead":7,"fields":{"slug":"/dockerfile/","tags":["Docker","도커","container","컨테이너","image","이미지","Dockerfile"]},"frontmatter":{"title":"Dockerfile에서 자주 쓰이는 명령어","date":"Apr 7, 2020"}},{"excerpt":"최근에 많은 NodeJS 프로젝트들이 Docker를 이용해서 개발되고 있습니다.\n이번 포스트에서는 NodeJS로 간단한 Express 서버 애플리케이션을 작성해보고, Docker를 이용해서 이 애플리케이션을 어떻게 컨테이너화(containerized…","timeToRead":8,"fields":{"slug":"/docker-nodejs/","tags":["Docker","도커","container","컨테이너","image","이미지","mount","마운트","Dockerfile","NodeJS","Express"]},"frontmatter":{"title":"Docker를 이용한 NodeJS 개발","date":"Apr 5, 2020"}},{"excerpt":"개발자에게 Docker란? Docker는 쉽게 말해서 컨테이너(container)를 돌려주는 엔진(engine)이라고 생각할 수 있는데요.\n2013년 출시 후 꾸준히 인기를 얻어온 Docker는 이제는 개발자들도 모르면 불편할 정도로 대중화가 되어 …","timeToRead":4,"fields":{"slug":"/docker/","tags":["Docker","도커","container","컨테이너","image","이미지"]},"frontmatter":{"title":"Docker 시작하기 (개념/설치)","date":"Apr 4, 2020"}},{"excerpt":"reduce 함수 파이썬의 functools 내장 모듈의 reduce() 함수는 여러 개의 데이터를 대상으로 주로 누적 집계를 내기 위해서 사용합니다. 기본 문법은 다음과 같은데요. 기본적으로 초기값을 기준으로 데이터를 루프 돌면서 집계 함수를 계속…","timeToRead":5,"fields":{"slug":"/python-functools-reduce/","tags":["Python","파이썬","functools","reduce","FP","FunctionalPrograming"]},"frontmatter":{"title":"파이썬 reduce 함수 사용법","date":"Mar 22, 2020"}},{"excerpt":"filter 내장 함수 파이썬의 내장 함수인 filter()는 여러 개의 데이터로 부터 일부의 데이터만 추려낼 때 사용합니다.\n따라서, 여러 개의 데이터를 담고 있는 list나 tuple을 대상으로 주로 사용하는 함수입니다. 사용 방법은 매우 간단한…","timeToRead":4,"fields":{"slug":"/python-filter/","tags":["Python","파이썬","BIF","내장함수","filter","ListComprehension","FP","FunctionalPrograming"]},"frontmatter":{"title":"파이썬 filter 내장 함수 사용법 (feat. List Comprehension)","date":"Mar 21, 2020"}},{"excerpt":"map 내장 함수 파이썬의 내장 함수인 map()는 여러 개의 데이터를 한 번에 다른 형태로 변환하기 위해서 사용됩니다.\n따라서, 여러 개의 데이터를 담고 있는 list나 tuple을 대상으로 주로 사용하는 함수입니다. 사용 방법은 매우 간단한데요……","timeToRead":4,"fields":{"slug":"/python-map/","tags":["Python","파이썬","BIF","내장함수","map","ListComprehension","FP","FunctionalPrograming"]},"frontmatter":{"title":"파이썬 map 내장 함수 사용법 (feat. List Comprehension)","date":"Mar 21, 2020"}},{"excerpt":"Immutability (불변성) 최근 소프트웨어 개발 트랜드를 보면 프로그래밍 언어에 관계없이 불변(imuutable) 데이터 타입의 사용을 권장하는 추세입니다.\n여러가지 이유가 있겠지만 메모리의 가격이 계속해서 싸지면서 데이터를 복제하는 대신에 …","timeToRead":5,"fields":{"slug":"/python-immutable-datatypes/","tags":["Python","immutability","불변성","tuple","터플","frozenset","namedtuple"]},"frontmatter":{"title":"파이썬의 불변(immutable) 자료구조 - tuple, frozenset, namedtuple","date":"Mar 15, 2020"}},{"excerpt":"가짜 데이터 소프트웨어를 개발하다 보면, 특히 시제품(prototype)을 개발하거나, 단위 테스트를 작성할 때 가짜 데이터가 필요할 때가 있습니다.\n이럴 때, 직접 가짜 데이터를 하드코딩(hard-coding)할 수도 있겠지만, 좀 더 쉽고 빠르게…","timeToRead":4,"fields":{"slug":"/python-faker/","tags":["Python","파이썬","faker"]},"frontmatter":{"title":"파이썬으로 가짜 데이터 생성하기 - Faker","date":"Mar 14, 2020"}},{"excerpt":"지난 포스트에서 파이썬의 logging 내장 모듈을 이용해서 정말 기본적인 로깅 방법에 대해서 살펴보았습니다.\n이번 포스트에서는 애플리케이션 규모가 커짐에 따라 어떻게 효과적으로 로깅을 설정해야 하는지에 대해서 다뤄보도록 하겠습니다. 핵심 컴포넌트 …","timeToRead":6,"fields":{"slug":"/python-logging-config/","tags":["Python","파이썬","logging","로깅","Logger","Hander","Formatter"]},"frontmatter":{"title":"파이썬 로깅 설정 - logger, handler, formatter","date":"Mar 7, 2020"}},{"excerpt":"환경 변수(environment variable) 소프트웨어 개발에서 환경 변수(environment variable)는 일반적으로 운영 체제(oerating system) 차원에서 설정해주는 변수를 의미하는데요.\n주로 애플레케이션 레벨에서 설정하기…","timeToRead":3,"fields":{"slug":"/python-os-environ/","tags":["Python","파이썬","os","environ","EnvironmentVariable","환경변수"]},"frontmatter":{"title":"파이썬에서 환경 변수 읽어오기 (os.environ)","date":"Feb 29, 2020"}},{"excerpt":"Subscription GraphQL에는 query와 mutation 그리고 subscription 이렇게 총 3가지 operation type이 있습니다.\n이 중에 query는 데이터 조회를 위해서 필수적으로 사용되고, mutation은 데이터 변…","timeToRead":4,"fields":{"slug":"/graphql-react-apollo-subscriptions/","tags":["자바스크립트","JavaScript","GraphQL","Subscription","Apollo","ApolloHooks","React"]},"frontmatter":{"title":"[GraphQL] React Apollo로 Subscription 호출","date":"Feb 23, 2020"}},{"excerpt":"Subscription GraphQL에는 query와 mutation 그리고 subscription 이렇게 총 3가지 operation type이 있습니다.\n이 중에 query는 데이터 조회를 위해서 필수적으로 사용되고, mutation은 데이터 변…","timeToRead":5,"fields":{"slug":"/graphql-apollo-server-subscriptions/","tags":["자바스크립트","JavaScript","GraphQL","Subscription","Apollo","ApolloServer","PubSub"]},"frontmatter":{"title":"[GraphQL] Apollo Server로 Subscription 구현","date":"Feb 22, 2020"}},{"excerpt":"지난 포스트에서 unittest.mock 모듈의 Mock 또는 MagicMock 클래스를 사용하여 기본적인 mocking을 하는 방법에 대해서 알아보았습니다.\n이번 포스트에서는 실전에서 더 많이 쓰이는 unittest.mock 모듈의 patch() …","timeToRead":4,"fields":{"slug":"/python-unittest-mock-patch/","tags":["Python","파이썬","Testing","mocking","unittest","patch","requests"]},"frontmatter":{"title":"[파이썬] 테스트 모킹 - patch","date":"Feb 15, 2020"}},{"excerpt":"float 타입 파이썬의 float 기본 타입은 대부분의 다른 프로그래밍 언어들처럼 소수를 내부적으로 이진수의 형태로 저장합니다. (컴퓨터라는 기계는 결국에 0 또는 1로 모든 데이터를 저장히기 때문이죠…)\n예를 들어, 십진 소수 0.875을 flo…","timeToRead":2,"fields":{"slug":"/python-float-decimal/","tags":["Python","파이썬","float","decimal"]},"frontmatter":{"title":"파이썬 소수 연산 - float 타입과 decimal 모듈","date":"Feb 14, 2020"}},{"excerpt":"본 포스트의 내용을 문제없이 이해하려면 파이썬의 기본 테스팅에 대한 선수 지식이 필요합니다. 해당 지식이 부족하신 분들은 관련 포스트를 먼저 읽고 돌아오시는 것을 추천드립니다. Mocking이란? 단위 테스트를 작성하다보면 데이터베이스 또는 외부 A…","timeToRead":6,"fields":{"slug":"/python-unittest-mock/","tags":["Python","파이썬","Testing","mocking","unittest","Mock","MagicMock"]},"frontmatter":{"title":"[파이썬] 테스트 모킹 - unittest.mock","date":"Feb 7, 2020"}},{"excerpt":"logging 내장 모듈 외부 라이브러리가 없더라도 대부분의 애플리케이션에서는 파이썬에 내장되어 있는 logging 모듈만으로도 충분히 로깅이 가능합니다.\nlogging 내장 모듈은 파이썬만 설치되어 있다면 다음과 같이 인터프리터에서도 간단히 임포트…","timeToRead":3,"fields":{"slug":"/python-logging/","tags":["Python","파이썬","logging","로깅"]},"frontmatter":{"title":"파이썬 기본 로깅 - logging 내장 모듈","date":"Feb 2, 2020"}},{"excerpt":"파이썬의 패키지 매니저 대부분의 프로그래밍 언어들은 자체적으로 패키지 관리 도구(package manager)를 제공하고 있습니다.\n자바의 Maven, 자바스크립트의 npm처럼 파이썬에서는 pip라는 매우 간단한 패키지 관리 도구가 있는데요.\n다른 …","timeToRead":7,"fields":{"slug":"/python-pipenv/","tags":["Python","파이썬","pipenv","venv"]},"frontmatter":{"title":"pipenv로 패키지 관리하기","date":"Jan 22, 2020"}},{"excerpt":"코드 스타일 파이썬과 같이 사용차층이 넓은 범용 프로그래밍 언어의 경우, 개발자들이 선호하는 코드 스타일이 다양해지게 됩니다.\n개인 프로젝트에서는 자신이 선호에 따라 어떤 방식으로 코드를 포멧팅하든지 코드가 돌아가기면 하면 큰 상관이 없지만,\n협업 …","timeToRead":5,"fields":{"slug":"/python-black/","tags":["Python","파이썬","Black","CodeStyle","VSCode","Git"]},"frontmatter":{"title":"Black으로 파이썬 코드 스타일 통일하기","date":"Jan 18, 2020"}},{"excerpt":"파이썬 가상 환경이란? 파이썬에서 가상 환경(virtual environment)은 하나의 PC에서 프로젝트 별로 독룁된 파이썬 실행 환경(runtime/interpreter)을 사용할 수 있도록 해줍니다.\n가상 환경을 사용하지 않으면 PC 내의 모…","timeToRead":3,"fields":{"slug":"/python-venv/","tags":["Python","파이썬","venv"]},"frontmatter":{"title":"파이썬에서 venv로 가상 환경 사용하기","date":"Jan 12, 2020"}},{"excerpt":"2020년 파이썬 2 지원 종료 파이썬 2는 2020년 1월 1일부로 공식적으로 지원이 중료되었으며, 버전 2.7 이후로는 더 이상 업데이트가 되지 않습니다. (참고: https://pythonclock.org)\n하지만 Mac의 경우, 아직도 파이썬…","timeToRead":4,"fields":{"slug":"/python-pyenv/","tags":["Python","파이썬","pyenv","Mac","Homebrew"]},"frontmatter":{"title":"여러 버전의 파이썬 관리하기 (pyenv)","date":"Jan 11, 2020"}},{"excerpt":"Storybook이란? 스토리북(Storybook)은 한 문장으로 정의가 어려울 정도로 다양한 방식으로 사용되고 있는 UI 컴포넌트 개발 도구입니다.\n단순히 회사의 UI 라이브러리를 내부 개발자들을 위해 문서화(documentation)하기 위해서 …","timeToRead":4,"fields":{"slug":"/storybook/","tags":["JavaScript","자바스크립트","React","Storybook","Vue","Angular"]},"frontmatter":{"title":"Storybook 소개 / 기본 사용법","date":"Jan 5, 2020"}},{"excerpt":"파이썬에서도 자바스크립트처럼 비동기로 작동하는 코드를 짤 수 있을까요? 네, asyncio를 사용하면 가능합니다! 동시 프로그래밍의 패러다임의 변화 전통적으로 동시 프로그래밍(concurrent programming)은 여러 개의 쓰레드(thread…","timeToRead":6,"fields":{"slug":"/python-asyncio/","tags":["Python","파이썬","async","await","asyncio","cuncurrent","동시성"]},"frontmatter":{"title":"[파이썬] asyncio로 비동기 처리하기","date":"Jan 2, 2020"}},{"excerpt":"최근에는 아이디와 비밀번호 입력없이도 구글이나 페이스북과 같은 대형 플랫폼을 통해서 로그인 할 수 있는 서비스들을 많이 볼 수 있습니다.\n이번 포스트에서는 이렇게 사용자 인증을 다른 서비스에 위임하기 위해서 사용되는 프로토콜인 OpenID Conne…","timeToRead":4,"fields":{"slug":"/google-oidc/","tags":["JavaScript","OIDC","OpenID Connect","OAuth","OAuth2.0","구글 API","Google API","React","리액트"]},"frontmatter":{"title":"구글 OpenID Connect 사용법","date":"Dec 29, 2019"}},{"excerpt":"검색과 지메일, 연락처, 캘린더, 드라이브, 포토 등 우리는 거의 매일 구글의 서비스를 이용하면서 살고 있습니다.\n구글은 이렇게 다양한 구글의 서비스에서 관리되고 있는 사용자의 데이터를 다른 서비스가 접근할 수 있도록 구글 API를 제공하고 있는데요…","timeToRead":6,"fields":{"slug":"/google-oauth/","tags":["JavaScript","OAuth","OAuth2.0","구글 API","Google API","React","리액트"]},"frontmatter":{"title":"OAuth 2.0으로 구글 API 호출하기","date":"Dec 15, 2019"}},{"excerpt":"git push는 원격 저장소(remote repository)에 코드 변경분을 업로드하기 위해서 사용하는 Git 명령어 입니다. git commit vs. git push git commit 명령어는 로컬 저장소(local repository)에 …","timeToRead":3,"fields":{"slug":"/git-push/","tags":["Git"]},"frontmatter":{"title":"git push 사용법/팁","date":"Dec 7, 2019"}},{"excerpt":"간단한 시간 데이터를 처리하기 위해서 사용되는 파이썬의 내장 모듈인 time에 대해서 알아보도록 하겠습니다. Epoch Time 파이썬의 time 내장 모듈은 주로 epoch time(Unix time, POSIX time)을 다룰 때 사용합니다.\n…","timeToRead":6,"fields":{"slug":"/python-time/","tags":["Python","time","epoch","timestamp"]},"frontmatter":{"title":"[파이썬] time 모듈로 시간 데이터 다루기","date":"Nov 30, 2019"}},{"excerpt":"JSON 데이터를 처리하기 위해서 사용되는 파이썬의 내장 모듈인 json에 대해서 알아보도록 하겠습니다. loads() 함수: JSON 문자열을 Paython 겍체로 변환 JSON 문자열을 Python의 객체로 변환하기 위해서는 loads() 함수를…","timeToRead":3,"fields":{"slug":"/python-json/","tags":["Python","파이썬","JSON"]},"frontmatter":{"title":"[파이썬] json 모듈로 JSON 데이터 다루기","date":"Nov 23, 2019"}},{"excerpt":"파이썬에서는 내장 함수인 open()을 이용해서 다른 언어에 비해서 매우 간단하게 파일 입출력 처리를 할 수 있습니다. 파일에 데이터 쓰기 먼저 파일에 데이터를 쓰는 방법에 대해서 알아보겠습니다.\n아래 colors 배열에 들어있는 문자열 3개를 co…","timeToRead":2,"fields":{"slug":"/python-open/","tags":["Python","파이썬","파일","입출력","open","read","right"]},"frontmatter":{"title":"[파이썬] open() 함수를 이용한 파일 입출력","date":"Nov 16, 2019"}},{"excerpt":"자바스크립트 프로젝트에서 개발을 하따보면 package-lock.json 또는 yarn.lock 파일을 자주 접하게 됩니다.\n일부 개발자들이 이 파일을 대수롭지 않게 생각하고 그냥 무시하거나, 심지어 무심코 지웠다가 낭패를 보는 경우가 종종 발생하는…","timeToRead":6,"fields":{"slug":"/js-package-locks/","tags":["JavaScript","자바스크립트","NodeJS","노드JS","npm","npm login","npm whoami","npm info","npm publish","npm unpublish"]},"frontmatter":{"title":"패키지 잠금 파일 (package-lock.json, yarn.lock)","date":"Nov 9, 2019"}},{"excerpt":"어느 언어로 코딩을 하든 단위 테스트는 신뢰할 수 있는 애플리케이션을 개발하기 위해서 필수적으로 습득해야하는 기술입니다.\n파이썬에서는 내장 모듈인 unittest을 통해서 다른 라이브러리 없이 비교적 간단하게 단위 테스트를 작성할 수 있습니다. un…","timeToRead":4,"fields":{"slug":"/python-unittest-testcase/","tags":["Python","파이썬","Testing","unittest","TestCase","단위 테스트"]},"frontmatter":{"title":"[파이썬] 단위 테스트의 기본 (unittest)","date":"Nov 2, 2019"}},{"excerpt":"대부분의 자바스크립트 개발자들은 자신의 프로젝트에 주로 다른 패키지를 설치 후 사용하기 위해서 npm(Node Package Manager)을 사용합니다.\n이것이 가능한 이유는 고맙게도 다른 개발자들이 어딘가에서 우리가 사용하는 패키지를 열심히 np…","timeToRead":8,"fields":{"slug":"/js-npm-publish/","tags":["JavaScript","자바스크립트","NodeJS","노드JS","npm","npm login","npm whoami","npm info","npm publish","npm unpublish"]},"frontmatter":{"title":"패키지 배포하기 (npm publish)","date":"Oct 27, 2019"}},{"excerpt":"개발자들이 실행 환경에 구애받지 않고 항상 최신 문법의 자바스크립트로 코딩할 수 있도록 도와주는 유용한 도구인 바벨(Babel)에 대해서 알아보겠습니다. 자바스크립트 개발자의 딜레마 자바스크립트 언어의 문법은 빠르게 진화하고 있지만 정작 자바스크립트…","timeToRead":6,"fields":{"slug":"/js-babel/","tags":["JavaScript","ES6","NodeJS","Babel","자바스크립트","바벨"]},"frontmatter":{"title":"바벨(Babel 7) 기본 사용법","date":"Oct 26, 2019"}},{"excerpt":"지난 포스트에서 jest.fn()과 jest.spyOn() 함수를 어떻게 사용하는지 배웠습니다.\n이번 포스트에서는 Jest에서 제공하는 또 다른 모킹 함수인 jest.mock()를 활용해서 좀더 다양한 상황에서 모킹을 해보도록 하겠습니다. 자바스크립…","timeToRead":7,"fields":{"slug":"/jest-mock-modules/","tags":["JavaScript","자바스크립트","Jest","Test","TDD","Mock","뫀","mocking","모킹"]},"frontmatter":{"title":"[Jest] jest.mock() 모듈 모킹","date":"Oct 19, 2019"}},{"excerpt":"서버 애플리케이션을 개발할 때 사용자 사용자 인증(authentication)과 인가(Authorization)는 데이터 보안을 위해서 매우 핵심적인 기능입니다.\n따라서 GraphQL API를 설계하거나, GraphQL 서버를 개발할 때도 사용자 인…","timeToRead":8,"fields":{"slug":"/graphql-apollo-server-auth/","tags":["자바스크립트","JavaScript","GraphQL","Apollo","ApolloServer","authentication","인증","authorization","인가"]},"frontmatter":{"title":"GraphQL 서버의 사용자 인증/인가 (Apollo Server Authentication/Authorization)","date":"Oct 14, 2019"}},{"excerpt":"GraphQL 서버에서 클라이언트로 부터 요청받은 쿼리(Query)나 뮤테이션(Mutation)을 실행하다가 오류가 발생할 수 있습니다.\n이런 경우, GraphQL 서버에서 해당 오류에 대한 정보를 응답해줘야 클라이언트에서도 그에 상응하는 화면 처리…","timeToRead":8,"fields":{"slug":"/graphql-apollo-server-errors/","tags":["자바스크립트","JavaScript","GraphQL","Apollo","ApolloServer","ErrorHandling","오류 처리"]},"frontmatter":{"title":"GraphQL 서버의 오류 처리 (Apollo Server Error handling)","date":"Oct 12, 2019"}},{"excerpt":"React Hooks 중 하나인 useMemo 함수를 왜/언제/어떻게 써야하는지 알아보겠습니다. Memoization useMemo 함수에 대해서 알아보기 전에 알고리즘 시간에 자주 나오는 메모이제이션(memoization) 개념에 대해서 잠깐 짚고…","timeToRead":7,"fields":{"slug":"/react-hooks-use-memo/","tags":["JavaScript","자바스크립트","React","리액트","Hooks","useMemo"]},"frontmatter":{"title":"React Hooks: useMemo 사용법","date":"Oct 5, 2019"}},{"excerpt":"\b자바스크립트에서 최근 가장 인기를 얻고 있는 코드 포멧터인 Prettier에서 대해서 알아보겠습니다. 코딩 스타일 자바스크립트와 같이 사용자층이 넓은 범용 프로그래밍 언어의 경우, 개발자들이 선호하는 코딩 스타일이 다양해지게 됩니다.\n예를 들어, …","timeToRead":5,"fields":{"slug":"/js-prettier/","tags":["JavaScript","자바스크립트","Prettier","Format","ESLint"]},"frontmatter":{"title":"[자바스크립트] Prettier로 코딩 스타일 통일하기","date":"Sep 29, 2019"}},{"excerpt":"웹팩에서 자주 사용되는 플러그인인 DefinePlugin과 EnvironmentPlugin에 대해서 알아보도록 하겠습니다. 관련 포스트 웹팩에 대한 지식이나 경험이 전혀 없으신 분들을 아래 포스트를 먼저 읽어보시면 따라오시기가 좀 더 수월하실 겁니다…","timeToRead":6,"fields":{"slug":"/webpack-plugins-define-environment/","tags":["JavaScript","자바스크립트","Webpack","웹팩","webpack-dev-server"]},"frontmatter":{"title":"웹팩(Webpack) DefinePlugin, EnvironmentPlugin 사용법","date":"Sep 28, 2019"}},{"excerpt":"최근에 가장 많이 쓰이는 자바스크립트 린터(linter)인 ESLint에서 대해서 알아보겠습니다. Lint? ESLint? 프로그래밍에서 린트(lint)라는 개념이 생소한 분들을 위해서 lint가 무엇인지에 대해서 먼저 짚고 넘어가겠습니다.\n린트(l…","timeToRead":6,"fields":{"slug":"/js-eslint/","tags":["JavaScript","자바스크립트","ESLint","Lint","Linter","lint-staged","husky"]},"frontmatter":{"title":"[자바스크립트] ESLint로 소스 코드의 문제 찾기","date":"Sep 22, 2019"}},{"excerpt":"지난 두 개의 포스트에 걸쳐서 React Router를 이용해서 React 앱에서 라우팅을 하는 방법을 알아보았습니다. React Router로 라우팅 하기 React Router로 중첩 라우팅 하기 이번 포스트에서는 그 동안 배운 라우팅 방법을 기…","timeToRead":8,"fields":{"slug":"/react-router-authentication/","tags":["JavaScript","자바스크립트","React","리액트","ReactRouter","authentication","인증","login","로그인","logout","로그아웃"]},"frontmatter":{"title":"React Router로 사용자 인증하기 (로그인/로그아웃)","date":"Sep 21, 2019"}},{"excerpt":"지난 포스트에서는 Apollo Hooks라는 새로운 방법을 통해 React 앱에서 어떻게 GraphQL API를 호출할 수 있는지 간단히 살펴보았습니다.\n이번 포스트에서는 지난 포스트에서 다뤘던 useQuery() 함수 뿐만 아니라 useMuatio…","timeToRead":6,"fields":{"slug":"/graphql-react-apollo-hooks-example/","tags":["JavaScript","자바스크립트","GraphQL","Apollo","ApolloClient","ApolloHooks","React","리액트","useQuery","useMutatino"]},"frontmatter":{"title":"[GraphQL/React] Apollo Hooks로 React 앱 개발하기","date":"Sep 14, 2019"}},{"excerpt":"지난 달, Apollo Client에서 공개되어 현재 뜨거운 반응을 얻고 있는 Apollo Hooks에 대해서 알아보겠습니다. Apollo Client가 생소하신 분들은 아래 포스트를 먼저 보시고 이 포스트로 돌아오시는 것을 추천드립니다. [Grap…","timeToRead":4,"fields":{"slug":"/graphql-react-apollo-hooks/","tags":["JavaScript","자바스크립트","GraphQL","Apollo","ApolloClient","ApolloHooks","React","리액트","useQuery"]},"frontmatter":{"title":"[GraphQL/React] Apollo Hooks 소개/사용법","date":"Sep 7, 2019"}},{"excerpt":"지난 포스트에서 SchemaLink를 이용하여 서버 없이 클라이언트에서 GraphQL API를 호출하는 방법에 대해서 알아보았습니다.\n이번 포스트에서는 로컬에서 직접 스키마를 작성하지 않고 원격 서버로 부터 스키마를 가져오는 몇 가지 방법에 대해서 …","timeToRead":6,"fields":{"slug":"/graphql-apollo-remote-schemas/","tags":["자바스크립트","JavaScript","GraphQL","Apollo","ApolloClient","graphql-tools"]},"frontmatter":{"title":"[GraphQL] 원격 서버로 부터 스키마 가져오기","date":"Aug 31, 2019"}},{"excerpt":"GraphQL 서버 없이도 클라이언트에서 GraphQL API를 호출할 수 있도록 도와주는 Aollo Client의 SchemaLink에 대해서 알아보겠습니다. 일반적인 Apollo Client 생성 일반적으로 Apollo Client를 사용할 때는…","timeToRead":4,"fields":{"slug":"/graphql-apollo-link-schema/","tags":["JavaScript","자바스크립트","GraphQL","Apollo","ApolloClient","apollo-link-schema"]},"frontmatter":{"title":"[GraphQL] SchemaLink 사용법 - 서버없는 클라이언트","date":"Aug 24, 2019"}},{"excerpt":"GraphQL API를 호출할 때 사용하는 클라이언트 라이브러리인 Apollo Client에 대해서 알아보겠습니다. 기본적으로 HTTP 기반으로 동작하는 GraphQL API를 호출할 때 반드시 Apollo Client와 같은 전용 클라이언트 라이브…","timeToRead":4,"fields":{"slug":"/graphql-apollo-client/","tags":["자바스크립트","JavaScript","GraphQL","Apollo","ApolloClient","apollo-link-http"]},"frontmatter":{"title":"[GraphQL] Apollo Client 사용법","date":"Aug 17, 2019"}},{"excerpt":"지난 포스트에서 React Router로 기본적인 라우팅 방법을 다루었습니다.\n이번 포스트에서는 React Router로 중첩 라우팅을 구현하는 방법에 대해서 알아보겠습니다. 중첩 라우팅이란? 중첩 라우팅(Nested Routing)이란 라우팅 맵핑…","timeToRead":7,"fields":{"slug":"/react-router-nested/","tags":["JavaScript","자바스크립트","React","리액트","ReactRouter","match","location","history"]},"frontmatter":{"title":"React Router로 중첩 라우팅 하기","date":"Aug 10, 2019"}},{"excerpt":"Apollo Client를 사용하여 GraphQL API를 호출하는 React 컴포넌트를 테스트하는 방법에 대해서 알아보겠습니다. 예제 컴포넌트 작성 Apollo Client를 사용하여 GraphQL API를 호출하는 매우 간단한 React 컴포넌트…","timeToRead":4,"fields":{"slug":"/graphql-react-apollo-testing/","tags":["JavaScript","자바스크립트","GraphQL","Apollo","ApolloClient","MockedProvider"]},"frontmatter":{"title":"[GraphQL] Apollo Client를 사용하는 React 컴포넌트 테스트하기 (MockedProvider)","date":"Aug 3, 2019"}},{"excerpt":"HTML5가 등장한지 몇년이 흘렀음에도 불구하고, 아직까지도 <div> 태그로만 마크업된 웹사이트를 많이 접하곤 합니다.\n하지만 이렇게 오로지 <div> 태그로만 마크업된 웹페이지는 시각적으로는 아름다울지 몰라도 여러가지 측면에서 문제가 있을 수 있…","timeToRead":7,"fields":{"slug":"/html-semantic-markup/","tags":["웹","HTML","Semantic","시멘틱","header","footer","section","article","asdie","nav","div"]},"frontmatter":{"title":"[HTML] 시멘틱 마크업","date":"Jul 27, 2019"}},{"excerpt":"PropTypes는 React에서 타입 체크를 위해서 사용되는 라이브러리입니다.\n이 번 포스트에서는 PropTypes를 이용해서 React 컴포넌트의 prop에 대한 타입 정의와 기본값 설정을 하는 방법에 대해서 알아보겠습니다. 패키지 설치 Prop…","timeToRead":5,"fields":{"slug":"/react-prop-types/","tags":["JavaScript","자바스크립트","React","리액트","PropTypes"]},"frontmatter":{"title":"PropTypes로 React 입력 타입 체크하기","date":"Jul 20, 2019"}},{"excerpt":"지난 포스트에서 외부 라이브러리 없이 CSS 만으로 React 컴포넌트를 스타일링하는 방법을 알아보았습니다.\n이번 포스트에서는 대표적인 CSS-in-JS 라이브러리인 Styled Components를 사용해서 React 컴포넌트를 스타일링하는 방법을…","timeToRead":6,"fields":{"slug":"/react-styled-components/","tags":["JavaScript","자바스크립트","React","리액트","CSS","style","스타일","CSS in JS","StyledComponents"]},"frontmatter":{"title":"[React] Styled Components 사용법","date":"Jul 14, 2019"}},{"excerpt":"Apollo Client는 GrpahQL API를 호출하기 위해 사용되는 라이브러리입니다.\n이번 포스트에서는 React 앱에서 Apollo Client를 사용하여 GraphQL API를 호출하는 방법에 대해서 알아보겠습니다. 사실, GraphQL A…","timeToRead":3,"fields":{"slug":"/graphql-react-apollo-client/","tags":["JavaScript","자바스크립트","React","리액트","GraphQL","Apollo","ApolloClient"]},"frontmatter":{"title":"[GraphQL] Apollo Client로 React 앱 개발하기","date":"Jul 13, 2019"}},{"excerpt":"React 공식 레퍼런스에 따르면 React에서는 명확한 스타일 가이드를 제공하지 않습니다. React does not have an opinion about how styles are defined. 그도 그럴 것이 현재 CSS 기술 자체가 사용되…","timeToRead":3,"fields":{"slug":"/react-styling/","tags":["JavaScript","자바스크립트","React","리액트","CSS","style","스타일","CSS Modules"]},"frontmatter":{"title":"React 컴포넌트 CSS 스타일링 기본","date":"Jul 7, 2019"}},{"excerpt":"GraphQL 서버를 개발할 때도 여느 Rest API 서버와 마찬가지로 테스트의 중요성의 아무리 강조해도 지나치지 않습니다.\n이번 포스트에서는 Apollo Server로 개발된 GraphQL 서버에 대한 테스트를 작성하는 방법에 대해서 알아보도록 …","timeToRead":5,"fields":{"slug":"/graphql-apollo-server-testing/","tags":["자바스크립트","JavaScript","GraphQL","Apollo","ApolloServer","apollo-server-testing"]},"frontmatter":{"title":"GraphQL 서버 테스트 방법 (Apollo Server Testing)","date":"Jul 6, 2019"}},{"excerpt":"React Testing Library(RTL)라는 테스팅 라이브러리가 React 개발자들의 입소문을 타고 점점 인기가 올라가고 있습니다.\n이번 포스트에서는 최근 React에서 테스팅 트랜드와 패러다임을 바꾸고 있는 React Testing Libr…","timeToRead":8,"fields":{"slug":"/react-testing-library/","tags":["JavaScript","자바스크립트","React","리액트","ReactTestingLibrary","RTL"]},"frontmatter":{"title":"React Testing Library 사용법","date":"Jun 29, 2019"}},{"excerpt":"React를 이용해서 SPA(Single Page Application)을 개발할 때 흔히 겪는 어려움 중에 하나가 웹페이지 라우팅입니다.\n이번 포스트에서는 React Router라는 라이브러리를 사용해서 SPA에서 라우팅을 하는 방법에 대해서 알아…","timeToRead":7,"fields":{"slug":"/react-router-basic/","tags":["JavaScript","자바스크립트","React","리액트","ReactRouter"]},"frontmatter":{"title":"React Router로 라우팅 하기","date":"Jun 23, 2019"}},{"excerpt":"가장 널리 알려진 알고리즘 중의 하나인 피보나치(Fibonacci) 알고리즘에 대해서 알아보겠습니다. 피보나치 수열 피보나치 수열에서는 첫 번째 항은 0, 두 번째 항은 1, 그 다음부터는 바로 전 두 항의 숫자의 합이 현재 항의 값이 됩니다.\n따라…","timeToRead":3,"fields":{"slug":"/algorithm-fibonacci/","tags":["algorithm","알고리즘","Python","파이썬"]},"frontmatter":{"title":"피보나치 알고리즘","date":"Jun 19, 2019"}},{"excerpt":"Font Awesome은 웹에서 아이콘이 필요할 때 가장 많이 사용되는 라이브러리 중에 하나입니다.\n이번 포스트에서는 React 앱에서 Font Awesome을 사용하는 방법에 대해서 알아보도록 하겠습니다. React와 무관한 Font Awesome…","timeToRead":3,"fields":{"slug":"/react-font-awesome/","tags":["JavaScript","React","FontAwesome","icon"]},"frontmatter":{"title":"React에서 Font Awesome 사용하기","date":"Jun 15, 2019"}},{"excerpt":"Side Effect 처리를 위해 React Hooks에서 제공되는 setEffect() 함수에 대해서 알아보도록 하겠습니다. Side Effect란? React 컴포넌트가 화면에 렌더링된 이후에 비동기로 처리되어야 하는 부수적인 효과들을 흔히 Si…","timeToRead":3,"fields":{"slug":"/react-hooks-use-effect/","tags":["JavaScript","자바스크립트","React","리액트","Hooks","useEffect"]},"frontmatter":{"title":"React Hooks: useEffect 사용법","date":"May 18, 2019"}},{"excerpt":"컴포넌트의 상태 관리를 위해 React Hooks에서 제공되는 setState() 함수에 대해서 알아보도록 하겠습니다. this.state - 클래스 기반 상태 관리 React Hooks가 나오기 전에는 컴포넌트의 상태 관리를 하려면 클래스 기반 R…","timeToRead":2,"fields":{"slug":"/react-hooks-use-state/","tags":["JavaScript","자바스크립트","React","리액트","Hooks","useState"]},"frontmatter":{"title":"React Hooks: useState 사용법","date":"Apr 20, 2019"}},{"excerpt":"Font Awesome은 웹에서 아이콘이 필요할 때 가장 많이 사용되는 라이브러리 중에 하나입니다.\nFont Awesome 5가 출시된지 시간이 꽤 흘렀음에도 불구하고, 아직까지도 Font Awesome 4가 많이 사옹되고 있습니다.\n여러가지 이유가…","timeToRead":4,"fields":{"slug":"/font-awesome/","tags":["CSS","JavaScript","FontAwesome","icon"]},"frontmatter":{"title":"Font Awesome 5 사용법 (ver 4 포함)","date":"Mar 16, 2019"}},{"excerpt":"데이터의 개수를 셀 때 유용한 파이썬의 collections 모듈의 Counter 클래스 사용법을 알아보겠습니다. dictionary를 이용한 카운팅 아래 코드는 어떤 단어가 주어졌을 때 단어에 포함된 각 알파멧의 글자 수를 세어주는 간단한 함수입니…","timeToRead":2,"fields":{"slug":"/python-collections-counter/","tags":["Python","파이썬","dict","사전","dictionary","collections","Counter"]},"frontmatter":{"title":"[파이썬] collections 모듈의 Counter 클래스 사용법","date":"Mar 10, 2019"}},{"excerpt":"자바스크립트 테스팅 프레임워트로 Jest를 사용할 때 장점 중에 하나는 다른 라이브러리 설치 없이 바로 mock 기능을 지원한다는 점입니다.\n여기서 mock을 한국어로 뭐라고 번역해야 모르겠는데, 주변에서 보면 “모킹하다”, “뫀객체” 등으로 영어를…","timeToRead":6,"fields":{"slug":"/jest-fn-spy-on/","tags":["JavaScript","자바스크립트","Jest","Test","TDD","Mock","뫀","mocking","모킹"]},"frontmatter":{"title":"[Jest] jest.fn(), jest.spyOn() 함수 모킹","date":"Mar 9, 2019"}},{"excerpt":"리액트 앱을 개발하다보면 모든 컴포넌트에 어떤 값을 props으로 넘기고 싶은 데이터가 필요할 때가 있습니다.\n다시 말해, 어떤 컴포넌트 트리 내에서 최상위 컴포넌트 부터 최말단 컴포넌트에 걸쳐 전역(global)으로 관리해야 할 데이터가 필요한 상…","timeToRead":6,"fields":{"slug":"/react-context/","tags":["자바스크립트","JavaScript","React","리액트","Context","켄텍스트"]},"frontmatter":{"title":"React Context 사용법","date":"Feb 23, 2019"}},{"excerpt":"파이썬의 내장 자료구조인 사전(dictionary)를 사용하다 보면 어떤 키(key)에 대한 값(value)이 없는 경우에 대한 처리를 해야하는 경우가 자주 발생합니다.\n이번 포스트에서는 이러한 경우 일반적으로 어떻게 처리를 하는지 살펴보고, 관련해…","timeToRead":4,"fields":{"slug":"/python-collections-defaultdict/","tags":["Python","파이썬","dict","사전","dictionary","setdefault","collections","defaultdict"]},"frontmatter":{"title":"[파이썬] 사전의 기본값 처리 (dict.setdefault / collections.defaultdict)","date":"Feb 10, 2019"}},{"excerpt":"이번 포스트에서는 Apollo Server를 이용하여 매우 간단하게 GraphQL 서버를 개발해보도록 하겠습니다.\n기존에 GraphQL 서버를 한 번도 개발해보신 적인 없으신 분들께 도움이 되었으면 합니다. 프로젝트 생성 원하는 디렉터리(ex. my…","timeToRead":3,"fields":{"slug":"/graphql-apollo-server/","tags":["JavaScript","자바스크립트","GraphQL","Apollo","ApolloServer"]},"frontmatter":{"title":"Apollo Server를 이용한 초간단 GraphQL 서버 개발","date":"Feb 9, 2019"}},{"excerpt":"테스트를 작성하다보면 모든 테스트 함수에서 공통적으로 필요한 공통 로직이 필요할 때가 있습니다.\n이번 포스트에서는 Jest를 이용해서 이렇게 테스트 전이나 후에 실행되야 하는 코드를 작성하는 방법에 대해서 알아보겠습니다. 테스트 대상 코드 데이터베이…","timeToRead":6,"fields":{"slug":"/jest-before-after/","tags":["JavaScript","JS","Jest","Test","TDD"]},"frontmatter":{"title":"Jest로 테스트 전/후 처리하기","date":"Feb 2, 2019"}},{"excerpt":"지난 포스트에서 Jest로 기본적인 테스트 코드 작성하는 방법에 대해서 알아보았습니다.\n자바스크립트 언어 특상 상 실제 프로젝트에서는 비동기(Asynchronus)로 돌아가는 코드를 테스트해야 할 일이 많은데요.\nJest Runner가 비동기 코드에…","timeToRead":7,"fields":{"slug":"/jest-async/","tags":["JavaScript","자바스크립트","Jest","Test","TDD"]},"frontmatter":{"title":"Jest로 비동기 코드 테스트 작성하기","date":"Jan 26, 2019"}},{"excerpt":"Jest는 페이스북에서 만들어서 React와 더불어 많은 자바스크립트 개발자들로 부터 좋은 반응을 얻고 있는 테스팅 라이브러리입니다.\n출시 초기에는 프론트앤드에서 주로 쓰였지만 최근에는 백앤드에서도 기존의 자바스크립트 테스팅 라이브러리를 대체하고 있…","timeToRead":7,"fields":{"slug":"/jest-basic/","tags":["JavaScript","자바스크립트","Jest","Test","TDD"]},"frontmatter":{"title":"Jest로 기본적인 테스트 작성하기","date":"Jan 12, 2019"}},{"excerpt":"파이썬에서 힙(heap)이나 우선순위 큐(PriorityQueue)를 사용하다 보면 다음과 같은 에러를 만날 수 있습니다. 이번 포스트에서는 위 에러를 해결하는 방법에 대해서 알아보록 하겠습니다. 객체 정렬 기준 힙과 우선순위 내부적으로 이진 트리를…","timeToRead":3,"fields":{"slug":"/python-lt-not-supported/","tags":["Python","파이썬","heapq","heap","힙","queue","큐","PriorityQueue","우선순위 큐"]},"frontmatter":{"title":"[파이썬] TypeError: < not supported","date":"Jan 6, 2019"}},{"excerpt":"반응형 웹디자인이 대두되면서 점점 많은 웹사이트들이 em과 rem라고 불리는 CSS 단위를 이용해서 스타일링이 되고 있습니다.\n이번 포스트에서는 em과 rem 단위가 실제로 브라우저에서 어떻게 동작하는지 정확히 알고 좀 더 적재적소에 사용하는 방법에…","timeToRead":5,"fields":{"slug":"/css-em-rem/","tags":["CSS","스타일","em","rem"]},"frontmatter":{"title":"CSS 상대 단위 - em과 rem","date":"Dec 29, 2018"}},{"excerpt":"데이터를 정렬된 상태로 저장하기 위해서 사용하는 파이썬의 PriorityQueue(우선순위 큐)에 대해서 알아보겠습니다. 우선순위 큐 자료구조 우선순위 큐는 데이터를 추가한 순서대로 제거하는 선입선출(FIFO) 특성을 가진 일반적인 큐의 자료구조와 …","timeToRead":2,"fields":{"slug":"/python-priority-queue/","tags":["Python","queue","PriorityQueue"]},"frontmatter":{"title":"파이썬의 우선순위 큐(PriorityQueue) 사용법","date":"Dec 23, 2018"}},{"excerpt":"데이터를 정렬된 상태로 저장하기 위해서 사용하는 파이썬의 heapq(힙큐) 내장 모듈에 대해서 알아보겠습니다. 힙 자료구조 heapq 모듈은 이진 트리(binary tree) 기반의 최소 힙(min heap) 자료구조를 제공합니다.\n자바에 익숙하신 …","timeToRead":5,"fields":{"slug":"/python-heapq/","tags":["Python","파이썬","heapq","heap","힙"]},"frontmatter":{"title":"[파이썬] heapq 모듈 사용법","date":"Dec 15, 2018"}},{"excerpt":"이전 두 개의 포스트를 통해서 기존에 자바스크립트로 어떻게 비동기 처리 코드를 작성해왔는지에 대해서 살펴보았습니다.\n이번 포스트에서는 좀 더 개선된 방식으로 비동기 처리를 할 수있도록 도와주는 async/await에 대해서 알아보도록 하겠습니다.\na…","timeToRead":5,"fields":{"slug":"/js-async-async-await/","tags":["JavaScript","자바스크립트","async","비동기","Promise","프라미스","ES7","ES2017","async/await"]},"frontmatter":{"title":"[자바스크립트] 비동기 처리 3부 - async/await","date":"Dec 1, 2018"}},{"excerpt":"많은 분들이 자바스크립트 공부를 하시다가 프라미스(Promise)에 때문에 그만 두시곤 합니다.\n이번 포스트에서는 자바스크립트에서 비동기 처리를 위해 굉범위하게 사용되는 Promise에 대해서 알아보겠습니다. 콜백 함수를 통한 비동기 처리의 문제점 …","timeToRead":8,"fields":{"slug":"/js-async-promise/","tags":["JavaScript","자바스크립트","async","비동기","Promise","프라미스","ES6"]},"frontmatter":{"title":"[자바스크립트] 비동기 처리 2부 - Promise","date":"Nov 24, 2018"}},{"excerpt":"자바스크립트의 콜백 함수와 비동기 함수애 대해서 혼란스러워 하시는 분들이 주변에 많은 것 같아서 개념 정리를 해보고자 합니다.\n이번 포스트에서는 실제 프로젝트에서 자주 접할 수 있는 유저 데이터 조회 시나리오를 통해 콜백 함수를 이용한 비동기 처리에…","timeToRead":5,"fields":{"slug":"/js-async-callback/","tags":["JavaScript","자바스크립트","async","비동기","Callback","콜백"]},"frontmatter":{"title":"[자바스크립트] 비동기 처리 1부 - Callback","date":"Nov 17, 2018"}},{"excerpt":"자바와 같이 객체 지향 언어를 사용하여 프로그래밍을 하다보면 객체들을 정렬해야하는 경우가 생깁니다.\n예를 들면, 온라인 게임 서비스에서 게이머들을 높은 점수 순으로 보여주는 게이머 랭킹 페이지를 생각해볼 수 있겠습니다. 정렬 대상 클래스 먼저, 각 …","timeToRead":5,"fields":{"slug":"/java-comparable-comparator/","tags":["Java","Java8","Comparator","Comparable"]},"frontmatter":{"title":"[Java] 객체 정렬하기 1부 - Comparable vs Comparator","date":"Oct 13, 2018"}},{"excerpt":"자바에서 최소나 최대 원소를 찾을 흔히 사용되는 3가지 코딩 스타일에 대해서 알아보겠습니다. Loop 제일 먼저 반복문을 통해 각 원소에 하나씩 접근해서 최대값을 구하는 다음과 같은 고전적인 코드를 생각해볼 수 있습니다. 반복문(for)을 이용해서 …","timeToRead":3,"fields":{"slug":"/java-min-max/","tags":["Java","Java8","Collections","스트림","Stream","Functional Programmking","함수형 프로그래밍","min","max"]},"frontmatter":{"title":"[Java] 최소/최대 원소 구하기 (Loop/Collections/Stream)","date":"Oct 6, 2018"}},{"excerpt":"웹페이지 상의 모든 엘리먼트는 하나의 박스의 개념으로 모델링 할 수 있습니다.\n이 박스 모델이라고 불리는 컨셉은 CSS의 근간이 되기 때문에 반드시 이해하고 있어야 합니다. Box Model 이란? 우리가 웹페이지에 배치하는 모든 HTML 엘리먼트는…","timeToRead":5,"fields":{"slug":"/css-box-model/","tags":["CSS","BoxModel","padding","border","margin"]},"frontmatter":{"title":"CSS 박스 모델과 box-sizing 속성","date":"Sep 29, 2018"}},{"excerpt":"CSS에서 display 속성은 웹페이지 상에서 엘리먼트들이 어떻게 보여지고 다른 엘리먼트와 어떻게 상호 배치되는지를 결정합니다.\n여러가지 display 속성값 중에서 가장 기본이지만 은근히 햇갈릴 수 있는 inline과 block, inline-b…","timeToRead":3,"fields":{"slug":"/css-display-inline-block/","tags":["CSS","display","inline","block","inline-block"]},"frontmatter":{"title":"[CSS] display 속성: inline, block, inline-block","date":"Sep 22, 2018"}},{"excerpt":"Java9에서는 기존 Java8 때 부터 있었던 Stream 클래스의 iterate() 메서드를 오버로드(overload)한 신규 메서드가 추가되었습니다. 이번 포스트에서는 Stream 클래스의 정적 메서드인 iterate()에 대해서 얘기해보고자 …","timeToRead":2,"fields":{"slug":"/java9-stream-iterate/","tags":["Java","Java9","JDK9","Stream","FP","스트림","iterate"]},"frontmatter":{"title":"Java9에서 강화된 Stream 클래스의 iterate 정적 메서드","date":"Sep 1, 2018"}},{"excerpt":"Java9에서 Optoinal 클래스에 몇가지 유용한 메서드들이 추가되었습니다. 이번 포스트에서는 이 새로운 메서드들을 어떻게 활용할 수 있는지 살펴보겠습니다. Java8에서 추가되었던 Optional의 좀 더 기본적인 사용법은 아래 포스트를 참고바…","timeToRead":6,"fields":{"slug":"/java9-optional/","tags":["Java","자바","자바9","Java9","JDK9","Java8","Optional"]},"frontmatter":{"title":"Java9에서 추가된 Optional 기능 소개","date":"Aug 26, 2018"}},{"excerpt":"좀 더 간결한게 불변 컬렉션을 생성할 수 있도록 Java9에서 List, Set, Map 인터페이스에 새로운 팩토리 메서드들이 추가되었습니다. 불변 컬렉션이란? 불변(Immutable) 컬렉션(Collection)은 아이템 추가, 수정, 제거가 불가…","timeToRead":3,"fields":{"slug":"/java9-immutable-collections/","tags":["Java","Java9","JDK9","Immutable","Collection","List","Set","Map"]},"frontmatter":{"title":"Java9의 불변 컬렉션 생성","date":"Aug 18, 2018"}},{"excerpt":"2018년 8월 10일 Vue CLI 3가 정식 릴리즈되었습니다. Github 릴리즈 페이지: https://github.com/vuejs/vue-cli/releases Evan You의 포스트: https://medium.com/the-vue-po…","timeToRead":7,"fields":{"slug":"/vue-cli3/","tags":["JavaScript","자바스크립트","VueJS","Vue CLI","Vue CLI 3"]},"frontmatter":{"title":"Vue CLI 3 사용법","date":"Aug 12, 2018"}},{"excerpt":"GraphQL API를 별다른 라이브러리 없이 최대한 간단하게 호출하는 방법에 대해서 알아보겠습니다. 아래에 소개된 방법들로 GraphQL API 호출하는 방법에 대한 감을 잡는데 도움이 되셨으면 좋겠습니다. 내장 Web UI 많은 GraphQL 서…","timeToRead":2,"fields":{"slug":"/graphql-quick-call/","tags":["JavaScript","자바스크립트","GraphQL","graphql-request"]},"frontmatter":{"title":"GraphQL API 간단하게 호출하기","date":"Aug 5, 2018"}},{"excerpt":"웹팩은 자바스크립트 개발자들이 좀 더 쾌적한 개발 경험을 할 수 있도록 여러가지 개발 편의 기능을 제공합니다. 이번 포스트에서는 웹팩을 사용하면서 개발 편의성을 개선시킬 수 방법에 대해서 알아보겠습니다. 관련 포스트 웹팩에 대한 지식이나 경험이 전혀…","timeToRead":7,"fields":{"slug":"/webpack-development/","tags":["JavaScript","자바스크립트","Webpack","웹팩","webpack-dev-server"]},"frontmatter":{"title":"웹팩(Webpack) 개발 편의 기능","date":"Jul 21, 2018"}},{"excerpt":"React나 Vue, Angular와 같은 자바스크립트 프레임워크를 기반으로 프로젝트를 하다보면 webpack.config.js라는 파일과 자주 마주치게 됩니다. 바로 웹팩 설정 파일인데요. 이번 포스트에서는 이 설정 파일을 기본으로 한 웹팩 기본 …","timeToRead":8,"fields":{"slug":"/webpack-config/","tags":["JavaScript","자바스크립트","Webpack","웹팩","Entry","Output","Loader","Plugins","webpack.config.js","style-loader","css-loader","clean-webpack-plugin"]},"frontmatter":{"title":"웹팩(Webpack) 기본 설정법 (Entry/Output/Loader/Plugins)","date":"Jul 15, 2018"}},{"excerpt":"자바스크립트 프레임워크로 React를 사용하든 Vue를 사용하든 Angular를 사용하든 항상 웹팩(Webpack)이라는 녀셕을 만나게 됩니다.\n보통 구글링해서 겨우 필요한 설정만 바꾸면서 사용하고 했었는데 이 번에 시간을 내서 웹팩에서 대해 한 번…","timeToRead":8,"fields":{"slug":"/webpack-basics/","tags":["JavaScript","자바스크립트","Webpack","웹팩","webpack-cli"]},"frontmatter":{"title":"웹팩(Webpack) 기본 사용법 (CLI)","date":"Jul 7, 2018"}},{"excerpt":"enumerate() 내장 함수에 리스트를 넘기면 next() 메서드가 index와 value로 이뤄진 튜플을 반환합니다. 따라서 다음과 같이 for 루프를 돌릴 때 enumerate()를 조합해서 사용하면 인덱스와 값을 동시에 접근할 수 있습니다.…","timeToRead":1,"fields":{"slug":"/python-enumerate/","tags":["Python","for","index"]},"frontmatter":{"title":"[파이썬] for 루프에서 인덱스 얻기","date":"Jun 30, 2018"}},{"excerpt":"파이썬에 기본적으로 내장되어 있는 데이터베이스인 sqlite3 모듈를 사용하는 방법에 대해서 알아보겠습니다. 데이터베이스 접속 sqlite3 내장 모듈을 임포트 후에 connect 메서드를 통해 커넥션 객체를 생성합니다. 메모리 DB 접속 (일회성)…","timeToRead":2,"fields":{"slug":"/python-sqlite3/","tags":["Python","파이썬","sqlite3"]},"frontmatter":{"title":"[파이썬] sqlite3 모듈 사용법","date":"Jun 23, 2018"}},{"excerpt":"파이썬의 random 모듈은 랜덤 숫자를 생성 뿐만 아니라 다양한 랜덤 관련 함수를 제공합니다. 모듈 임포트 우선 random 모듈을 사용하려면 임포트해야 합니다. random() 함수 0부터 1사이의 랜덤 실수를 리턴합니다. uniform() 함수…","timeToRead":1,"fields":{"slug":"/python-random/","tags":["Python","파이썬","random"]},"frontmatter":{"title":"[파이썬] random 모듈 사용법","date":"Jun 16, 2018"}},{"excerpt":"이전 포스트에서 AWS CLI의 aws s3 커맨드를 사용하는 방법에 대해서 살펴보았습니다. 이번 포스트에서는 aws s3api 커맨드를 통해서 Amazon S3를 좀 더 세밀하게 제어하는 방법에대해서 알아보도록 하겠습니다. S3 버킷의 Region…","timeToRead":5,"fields":{"slug":"/aws-cli-s3api/","tags":["AWS","Amazon Web Services","AWS CLI","S3","Simple Storage Service","아마존 웹 서비스","Amazon S3"]},"frontmatter":{"title":"AWS CLI로 Amazon S3 다루기 - 2","date":"Jun 10, 2018"}},{"excerpt":"이 번 포스트에서는 파이썬에서 진수를 다루는 여러가지 방법에 대해서 알아보겠습니다. 다른 진수의 형태로 숫자를 표현하기 파이썬에서는 기본적으로 10진수 형태로 숫자를 표현하기 때문에 다른 진수의 형태로 숫자를 표현하려면 다음과 같이 숫자 앞에 접두어…","timeToRead":3,"fields":{"slug":"/python-int-bases/","tags":["Python","파이썬","진수","진법","Binary"]},"frontmatter":{"title":"[파이썬] 2진수, 8진수, 16진수 다루기","date":"Jun 2, 2018"}},{"excerpt":"Amazon S3는 AWS에서 제공하는 클라우드 스토리지 서비스입니다. AWS CLI를 이용하면 간편하게 S3 버킷을 제어하고 S3 오브젝트에 접근할 수 있으며, Unix의 파일 시스템 커맨드와 매우 유사해서 배우기도 쉽습니다. 이 번 포스트에서는 …","timeToRead":6,"fields":{"slug":"/aws-cli-s3/","tags":["AWS","Amazon Web Services","AWS CLI","S3","Simple Storage Service","아마존 웹 서비스","Amazon S3"]},"frontmatter":{"title":"AWS CLI로 Amazon S3 다루기 - 1","date":"May 27, 2018"}},{"excerpt":"DynamoDB는 AWS에서 제공하는 관리형 NoSQL 데이터베이스 서비스입니다. AWS CLI를 이용하면 간편하게 DynamoDB 테이블을 제어하고 테이터에 접근할 수 있습니다. 이 번 포스트에서는 자주 사용되는 AWS CLI의 DynamoDB 관…","timeToRead":7,"fields":{"slug":"/aws-cli-dynamodb/","tags":["AWS","Amazon Web Services","AWS CLI","DynamoDB","DDB","아마존 웹 서비스","다이나모DB"]},"frontmatter":{"title":"AWS CLI로 DynamoDB 다루기","date":"May 19, 2018"}},{"excerpt":"Amazon Web Services(AWS)에 접근을 하기위해서는 필수적으로 인증 절차를 필요로 합니다. 사람이 직접 터미널 상에서 AWS CLI를 통해서 접근하든, 어플리케이션이 AWS SDK를 통해서 접근하든지, 적절한 방법을 통해 인증을 받지 …","timeToRead":5,"fields":{"slug":"/aws-cli-configure/","tags":["AWS","Amazon Web Services","AWS CLI","Authentication","아마존 웹 서비스","인증"]},"frontmatter":{"title":"AWS CLI로 인증 정보 (Access Key ID, Secret Access Key) 관리하기","date":"May 13, 2018"}},{"excerpt":"fixed position을 이용해서 스크롤에 해도 따라가지 않고 항상 화면 상단에 고정되어 있는 메뉴바를 만들어보겠습니다. fixed position의 특징 CSS의 position 속성은 엘리먼트가 브라우저 화면에 어떻게 배치되는가를 결정합니다.…","timeToRead":4,"fields":{"slug":"/css-position-fixed-navigation/","tags":["CSS","position","fixed","navagaion","메뉴바"]},"frontmatter":{"title":"[CSS] 메뉴바 상단에 고정 시키기","date":"May 6, 2018"}},{"excerpt":"자바스크립트에서 의외로 객체의 복제가 쉽지 않을 수 있습니다. 예를 들어 다음과 같은 객체가 있다고 해보겠습니다. 자바스크립트에서 객체(object)란 속성(property)의 집합으로 생각할 수 있습니다. 속성은 키(key)와 값(value)를 가…","timeToRead":4,"fields":{"slug":"/js-objects-clone/","tags":["JavaScript","자바스크립트","clone","shallow clone","deep clone"]},"frontmatter":{"title":"자바스크립트 객체 복제 방법","date":"Apr 29, 2018"}},{"excerpt":"지난 포스트에서 absolute position의 기본적인 특징과 작동 매커니즘에 대해서 살펴보았습니다.\n이번 포스트에서는 absolute position를 응용해서 이미지의 일부로 캡션을 넣는 방법에 대해서 알아보겠습니다. 기본 이미지 캡션 배치 …","timeToRead":3,"fields":{"slug":"/css-position-absolute-image-caption/","tags":["CSS","position","absolute","image","caption"]},"frontmatter":{"title":"[CSS] 이미지의 일부로 캡션 넣기","date":"Apr 21, 2018"}},{"excerpt":"부모 엘리먼트애 구애받지 않고 엘리먼트를 자유롭게 배치시킬 수 있는 absolute position에 대해서 알아보겠습니다. 엘리먼트 배치 관련 CSS 속성 CSS의 position 속성은 엘리먼트가 브라우저 화면에 어떻게 배치되는가를 결정합니다.\n…","timeToRead":4,"fields":{"slug":"/css-position-absolute/","tags":["CSS","position","absolute"]},"frontmatter":{"title":"[CSS] Absolute Position - 자유로운 엘리먼트 배치","date":"Apr 14, 2018"}},{"excerpt":"ES6(ES2105) 이상의 최신 자바스크립트 문법으로 작성된 코드가 노드JS(NodeJS)에서 실행이 안 되는 경우가 종종있습니다. 이럴 경우 어쩔 수 없이 예전 자바스크립트 문법으로 코드를 재작성하기도 하는데요. 이번 포스트에서는 자바스크립트 T…","timeToRead":5,"fields":{"slug":"/js-babel6-node/","tags":["JavaScript","ES6","NodeJS","Babel","CLI"]},"frontmatter":{"title":"Node.js로 ES6 코드 실행하기 (Babel6)","date":"Apr 14, 2018"}},{"excerpt":"자바스크립트 개발을 하다보면 require나 import 키워드를 통해 외부 라이브러리를 불러오는 코드를 자주 보게 됩니다. require는 NodeJS에서 사용되고 있는 CommonJS 키워드이고, import는 ES6(ES2015)에서 새롭게 도…","timeToRead":4,"fields":{"slug":"/js-module-import/","tags":["JavaScript","자바스크립트","ES6","import","export","export default"]},"frontmatter":{"title":"자바스크립트 ES6 모듈 내보내기/불러오기 (import)","date":"Apr 7, 2018"}},{"excerpt":"자바스크립트 개발을 하다보면 require나 import 키워드를 통해 외부 라이브러리를 불러오는 코드를 자주 보게 됩니다. require는 NodeJS에서 사용되고 있는 CommonJS 키워드이고, import는 ES6(ES2015)에서 새롭게 도…","timeToRead":4,"fields":{"slug":"/js-module-require/","tags":["JavaScript","자바스크립트","CommonJS","import","exports","module.exports","require","NodeJS"]},"frontmatter":{"title":"자바스크립트 CommonJS 모듈 내보내기/불러오기 (require)","date":"Apr 1, 2018"}},{"excerpt":"백앤드 개발을 하든 프런트앤드 개발을 하든 자바스크립트 프로젝트에서 NPM(Node Package Manager)을 사용하는 것은 거의 필수가 되었습니다. 이번 포스트에서는 실무에서 자주 사용되는 NPM 커맨드들에 대해서 살펴보겠습니다. 프로젝트 생…","timeToRead":7,"fields":{"slug":"/js-npm-cli/","tags":["JavaScript","자바스크립트","NodeJS","노드JS","npm","npx","CLI","command","커맨드","명령어","npm init","npm install","npm i","npm ls","npm uninstall","npm r","npm run","npm start","npm test"]},"frontmatter":{"title":"자주 사용되는 npm 커맨드 (+npx)","date":"Mar 3, 2018"}},{"excerpt":"자바8 Time API의 Instant 클래스는 시간을 타임스탬프로 다루기 위해서 사용합니다. 타임스탬프는 UTC 기준으로 1970년 1월 1일 0시 0분 0초를 숫자 0으로 정하고 그로 부터 경과된 시간을 양수 또는 음수로 표현합니다. 타임스탬프는…","timeToRead":4,"fields":{"slug":"/java8-instant/","tags":["Java","Java8","Date","Time","Instant","Timestamp"]},"frontmatter":{"title":"[Java8 Time API] Instant 사용법","date":"Dec 23, 2017"}},{"excerpt":"자바8에 추가된 Time 패키지에는 Duration과 Period라는 상당히 비슷해 보이는 2개의 클래스가 있습니다. 이 두개의 클래스는 둘 다 시간의 길이을 나타내기 위해서 사용되는데요. Duration은 두 “시간” 사이의 간격을 나타내는 반면에…","timeToRead":4,"fields":{"slug":"/java8-duration-period/","tags":["Java","Java8","Date","Time","Duration","Peroid","ChronoUnit"]},"frontmatter":{"title":"[Java8 Time API] Duration과 Period 사용법 (+ChronoUnit)","date":"Dec 17, 2017"}},{"excerpt":"Java8에서 추가된 ZonedDateTime 사용법에 대해서 알아보겠습니다. ZonedDateTime는 LocalDateTime과 달리 타임존 또는 시차 개념을 가지고 있는 클래스입니다. ZonedDateTime ZonedDateTime 클래스는 …","timeToRead":6,"fields":{"slug":"/java8-zoned-date-time/","tags":["Java","Java8","Date","Time","ZonedDateTime"]},"frontmatter":{"title":"[Java8 Time API] ZonedDateTime 사용법","date":"Dec 10, 2017"}},{"excerpt":"이번 포스트에서는 Java8 Date/Time API의 LocalDate과 LocalTime 그리고 LocalDateTime 사용법에 대해서 알아보겠습니다. 이 3개의 클래스는 모두 타임존 개념을 가지고 있지 않기 때문에 타임존에 따른 시간 변환이 …","timeToRead":4,"fields":{"slug":"/java8-local-date-time/","tags":["Java","Java8","자바8","Date","Time","LocalDate","LocalTime","LocalDateTime"]},"frontmatter":{"title":"[Java8 Time API] LocalDate, LocalTime, LocalDateTime 사용법","date":"Dec 3, 2017"}},{"excerpt":"시장에 출시되는 디바이스들의 화면들이 점점 다양해지면서 다양한 크기의 화면에 똑똑하게 반응하는 웹디자인이 중요해지고 있습니다.\n이번 포스트에서는 CSS의 미디어 쿼리(Media Query)와 float 속성을 이용해서 반응형 레이아웃을 잡는 방법에 …","timeToRead":5,"fields":{"slug":"/css-responsive-layouts/","tags":["CSS","Responsive","ResponsiveLayout","MediaQuery","float","clearfix"]},"frontmatter":{"title":"CSS 반응형 레이아웃","date":"Nov 25, 2017"}},{"excerpt":"이번 포스트에서는 가장 유명한 정렬 알고리즘 중 하나인 퀵 정렬(Quick Sort)에 대해서 알아보겠습니다. 기본 컨셉 병합 정렬과 마찬가지로 퀵 정렬도 분할 정복 (Devide and Conquer) 기법과 재귀 알고리즘을 이용한 정렬 알고리즘입…","timeToRead":6,"fields":{"slug":"/sort-quick/","tags":["algorithm","sort","Quick Sort","퀵 정렬","Python","Java"]},"frontmatter":{"title":"[알고리즘] 퀵 정렬 - Quick Sort (Python, Java)","date":"Nov 18, 2017"}},{"excerpt":"대표적인 O(logN) 알고리즘인 병합 정렬(Merge Sort)에 대해서 알아보겠습니다. 기본 컨셉 병합 정렬은 분할 정복 (Devide and Conquer) 기법과 재귀 알고리즘을 이용해서 정렬 알고리즘입니다.\n즉, 주어진 배열을 원소가 하나 …","timeToRead":4,"fields":{"slug":"/sort-merge/","tags":["algorithm","sort","Merge Sort","병합 정렬","Python","Java"]},"frontmatter":{"title":"[알고리즘] 병합 정렬 - Merge Sort (Python, Java)","date":"Nov 11, 2017"}},{"excerpt":"선택 정렬, 거품 정렬과 더불어 대표적인 O(N^2) 정렬 알고리즘인 삽입 정렬(Insertion Sort)에 대해서 알아보겠습니다. 기본 컨셉 삽입 정렬은 한마디로 표현하면 정렬 범위를 1칸씩 확장해나가면서 새롭게 정렬 범위에 들어온 값을 기존 값…","timeToRead":5,"fields":{"slug":"/sort-insertion/","tags":["algorithm","sort","Insertion Sort","삽입 정렬","Python","Java"]},"frontmatter":{"title":"[알고리즘] 삽입 정렬 - Insertion Sort (Python, Java)","date":"Nov 4, 2017"}},{"excerpt":"선택 정렬(Slection Sort)과 더불어 대표적인 O(N^2) 정렬 알고리즘인 거품 정렬(Bubble Sort)에 대해서 알아보겠습니다. 기본 컨셉 거품 정렬은 큰 그림에서 보았을 때 뒤에서 부터 앞으로 정렬을 해나가는 구조를 가지고 있습니다.…","timeToRead":6,"fields":{"slug":"/sort-bubble/","tags":["algorithm","sort","Bubble Sort","거품 정렬","Python","Java"]},"frontmatter":{"title":"[알고리즘] 거품 정렬 - Bubble Sort (Python, Java)","date":"Oct 28, 2017"}},{"excerpt":"정렬 알고리즘 중에서 가장 직관적이고 쉽게 구현이 가능한 선택 정렬(Slection Sort)에 대해서 알아보겠습니다. 기본 아이디어 선택 정렬은 알고리즘에 대해 배워본 적이 없는 사람도 쉽게 생각해낼 수 있는 정렬 알고리즘입니다. 왜냐하면 우리가 …","timeToRead":5,"fields":{"slug":"/sort-selection/","tags":["algorithm","sort","Slection Sort","선택 정렬","Python","Java"]},"frontmatter":{"title":"[알고리즘] 선택 정렬 - Slection Sort (Python, Java)","date":"Oct 21, 2017"}},{"excerpt":"맥이나 리눅스 터미널에서 현재 실행 중인 프로세스를 확인하기 위해서 사용되는 ps 커맨드에 대해서 알아보록 하겠습니다. 무옵션 옵션없이 ps 커맨드를 실행하면 현재 사용자의 세션에서 실행 중인 프로세스를 출력해줍니다.\n첫번째 칼럼에서 프로세스의 식별…","timeToRead":3,"fields":{"slug":"/shell-command-ps/","tags":["Mac","Linux","terminal","Shell","command","sh","ps","맥","리눅스","터미널","쉘","커맨드"]},"frontmatter":{"title":"ps 쉘 커맨드 사용법","date":"Oct 14, 2017"}},{"excerpt":"맥이나 리눅스 터미널에서 가장 자주 사용하는 커맨드 중에 하나인 ls에 대해서 알아보도록 하겠습니다. ls는 파일이나 디펙토리 목록을 나열하기 위해서 사용하는 리눅스 커맨드입니다. 파일과 디렉터리 나열하기 단순히 현재 디렉터리 내의 어떤 파일과 디렉…","timeToRead":6,"fields":{"slug":"/shell-command-ls/","tags":["Mac","Linux","terminal","Shell","command","sh","ls","맥","리눅스","터미널","쉘","커맨드"]},"frontmatter":{"title":"ls 쉘 커맨드 사용법","date":"Oct 7, 2017"}},{"excerpt":"스프링 부트 애플리케이션 구동 시점에 특정 코드 실행 시키기기 위해서 2가지 인터페이스를 제공하고 있습니다. CommandLineRunner CommandLineRunner 인터페이스는 구동 시점에 실행되는 코드가 자바 문자열 아규먼트 배열에 접근해…","timeToRead":2,"fields":{"slug":"/spring-boot-runners/","tags":["Java","Spring","스프링","SpringBoot","스프링부트","ApplicationRunner","CommandLineRunner"]},"frontmatter":{"title":"스프링 부트 구동 시점에 특정 코드 실행 시키기 (CommandLineRunner & ApplicationRunner)","date":"Aug 27, 2017"}},{"excerpt":"본 포스트에서는 스프링 부트의 내장 서버를 설정하는 방법에 대해서 알아보겠습니다. 애플리케이션 설정 파일 스프링 부트 프로젝트의 src/main/resources 디렉터리를 보시면 application.properties나 applicaiton.ym…","timeToRead":2,"fields":{"slug":"/spring-boot-embedded-server-config/","tags":["Java","Spring","스프링","SpringBoot","스프링부트"]},"frontmatter":{"title":"스프링 부트 내장 서버 설정 (포트, 컨텍스트 패스)","date":"Aug 20, 2017"}},{"excerpt":"본 포스트에서는 스프링 부트의 내장 서버를 바꾸는 방법에 대해서 알아보도록 하겠습니다. 메이븐 설정 파일(pom.xml)만 조금씩 수정해주면 다양한 내장 서버를 사용해볼 수 있습니다. Tomcat 스프링 부트는 디플트 내장 서버로 Tomcat을 사용…","timeToRead":2,"fields":{"slug":"/spring-boot-embedded-server-change/","tags":["Java","Spring","스프링","SpringBoot","스프링부트","Tomcat","톰켓","Jetty","제티","Undertow","언더토우"]},"frontmatter":{"title":"스프링 부트 내장 서버 바꾸기","date":"Aug 13, 2017"}},{"excerpt":"스프링 부트 프로젝트를 만드는데는 여러가지 자동화된 방법이 있습니다. Eclipse나 IntelliJ와 같은 코드 에디터에서 제공하는 프로젝트 생성 마법사를 이용할 수 있고,\nSPRING INITIALIZR 웹사이트에서 생성해준 프로젝트의 압축 파일…","timeToRead":3,"fields":{"slug":"/spring-boot-quick-start-without-tools/","tags":["Java","Spring","스프링","SpringBoot","스프링부트"]},"frontmatter":{"title":"도구 없이 스프링 부트 프로젝트 만들기","date":"Aug 6, 2017"}},{"excerpt":"이번 포스트에서는 많이 알려지지는 않았지만 알아두면 유용한 Lombok 어노테이션에 대해서 알아보겠습니다. 빌더 자동 생성 다수의 필드를 가지는 복잡한 클래스의 경우, 생성자 대신에 빌더를 사용하는 경우가 많은데요.\n빌더 패턴을 직접 작성해보면 코딩…","timeToRead":3,"fields":{"slug":"/lombok-useful-annotations/","tags":["Java","Lombok"]},"frontmatter":{"title":"[자바] 알아두면 유용한 Lombok 어노테이션","date":"Jun 24, 2017"}},{"excerpt":"Lombok 라이브러리에서 제공하는 어노테이션 중에서 자주 사용되는 어노테이션 위주로 살펴보도록 하겠습니다. 접근자/설정자 자동 생성 제일 먼저 살펴볼 어노테이션은 @Getter와 @Setter 입니다.\n아마 Lombok에서 가장 많이 사용되는 어노…","timeToRead":4,"fields":{"slug":"/lombok-popular-annotations/","tags":["Java","Lombok"]},"frontmatter":{"title":"[자바] 자주 사용되는 Lombok 어노테이션","date":"Jun 18, 2017"}},{"excerpt":"자바에서 리스트를 순회하는 4가지 방법에 대해서 알아봅시다. 다음와 같이 5가지 과일 문자열을 담고 있는 리스트를 순회하면서 원소를 하나씩 출력해보겠습니다. 전통적인 For 루프 그냥 평범한 For 루프문을 사용하여 마치 배열을 순회하는 것과 동일한…","timeToRead":1,"fields":{"slug":"/how-to-traverse-list-in-java/","tags":["Java","Java8","Collections"]},"frontmatter":{"title":"[자바] 리스트를 순회하는 방법","date":"Jun 11, 2017"}},{"excerpt":"리스트를 순회하면서 특정 원소를 삭제하고 싶을 때가 있습니다. 예를 들어, 다음과 같이 알파벳과 숫자가 섞여있는 리스트가 있다고 가정해봅시다. 저는 이 리스트에서 숫자인 원소들은 모두 삭제하고 싶습니다. ConcurrentModificationExc…","timeToRead":3,"fields":{"slug":"/how-to-remove-from-list-in-java/","tags":["Java","Java8","Collections"]},"frontmatter":{"title":"[자바] 컬렉션에서 원소 삭제하기 (ConcurrentModificationException 피하면서)","date":"Jun 4, 2017"}},{"excerpt":"자바6에서 추가된 NavigableSet에 대해서 알아보도록 하겠습니다. NavigableSet은 SortedSet을 확장한 인터페이스입니다. 따라서 기존 SortedSet 대비 추가된 기능 위주로 살펴보는 게 좋을 것 같습니다. 객체 생성 자바에서…","timeToRead":3,"fields":{"slug":"/java-navigable-set/","tags":["Java","Java6","Collections"]},"frontmatter":{"title":"[자바] NavigableSet 사용법","date":"May 28, 2017"}},{"excerpt":"SortedSet 사용법에 대해서 알아보록 하겠습니다. SortedSet은 원소들이 정렬되어 있는 Set입니다.\n따라서 SortedSet 하여금 객체 간 대소 비교가 가능한 상황을 만들어줘야 합니다.\n여기서 “객체 간 대소 비교가 가능한 상황”이란 …","timeToRead":2,"fields":{"slug":"/java-sorted-set/","tags":["Java","Java6","Collections"]},"frontmatter":{"title":"[자바] SortedSet 사용법","date":"May 21, 2017"}},{"excerpt":"ES2015는 자바스크립트의 근간이 되는 함수에도 여러가지 변화를 가져왔습니다.\n이번 포스트에서는 그 중 기본 매개변수(Default Parameters)에 대해서 알아보도록 하겠습니다. 매개변수를 무시한 함수 호출 다음과 같이 사용자의 아이디의 배…","timeToRead":3,"fields":{"slug":"/js-es2015-default-parameters/","tags":["JavaScript","자바스크립트","ES6"]},"frontmatter":{"title":"[ES2015] 기본 매개변수 (Default Parameters)","date":"Mar 5, 2017"}},{"excerpt":"이번 포스트에서는 ES2015에서 let과 함께 자바스크립트에 추가된 const 사용법에 대해서 알아보도록 하겠습니다. let 사용법에 대해서는 아래 포스트들을 참고바라겠습니다. let으로 변수 선언하기 1 let으로 변수 선언하기 2 매직 넘버 아…","timeToRead":3,"fields":{"slug":"/js-es2015-const/","tags":["JavaScript","자바스크립트","ES6"]},"frontmatter":{"title":"[ES2015] const로 상수 선언하기","date":"Feb 26, 2017"}},{"excerpt":"이전 포스트에서 ES2015의 let 키워드에서 대해서 알아보았습니다.\n이번 포스트에서는 for 문에서 let이 어떻게 사용될 수 있는지 살펴보겠습니다. 예제 코드 다음 코드는 사용자 아이디를 받아 가짜 사용자를 담든 후 콜백 함수를 호출하는 비동기…","timeToRead":3,"fields":{"slug":"/js-es2015-let-in-for/","tags":["JavaScript","자바스크립트","ES6"]},"frontmatter":{"title":"[ES2015] let으로 변수 선언하기 2","date":"Feb 19, 2017"}},{"excerpt":"본 포스트에서는 ES2015를 통해 자바스크립트에 추가된 let 키워드에 대해서 알아보도록 하겠습니다. 문제의 코드 먼저 다음 예제 코드를 살펴보시죠. findUser 함수는 사용자 아이디가 0보다 크면 성공 메세지를 출력하고 아니면 실패 메세지를 …","timeToRead":3,"fields":{"slug":"/js-es2015-let/","tags":["JavaScript","자바스크립트","ES6"]},"frontmatter":{"title":"[ES2015] let으로 변수 선언하기 1","date":"Feb 12, 2017"}},{"excerpt":"많은 자바스크립트 강좌에서 가급적 var 대신에 let이나 const 키워드를 사용하여 변수를 선언하라고 가이드하고 있는데요. 본 포스트에서는 var의 어떤 문제점 때문에 그런건지 알아보도록 하겠습니다. 아리송한 코드 먼저 다음 코드를 살펴보도록 하…","timeToRead":4,"fields":{"slug":"/js-var-issues/","tags":["JavaScript","자바스크립트","Hoisting"]},"frontmatter":{"title":"[자바스크립트] var를 사용할 때 발생하는 문제들","date":"Feb 5, 2017"}},{"excerpt":"멋진 테스트 코드를 작성하도록 돕는 AssertJ 라이브러리에 대해서 알아봅시다. AssertJ의 장점 메소드 체이닝을 지원하기 때문에 좀 더 깔끔하고 읽기 쉬운 테스트 코드를 작성할 수 있습니다. 개발자가 테스트를 하면서 필요하다고 상상할 수 있는…","timeToRead":3,"fields":{"slug":"/assertj/","tags":["Java","Test","AssertJ"]},"frontmatter":{"title":"AssertJ 소개","date":"Jan 22, 2017"}},{"excerpt":"Optional을 좀 더 Java8 API 설계자의 의도에 맞게 쓰는 방법에 대해서 알아봅시다. 이전 포스트를 통해서 Optional에 대해서 소개드렸습니다.\n또한 Optional을 Optional답지 않게 사용할 경우, 어떤 부작용이 발생하는지도 …","timeToRead":6,"fields":{"slug":"/java8-optional-effective/","tags":["Java","Java8","FP","Optional","Stream"]},"frontmatter":{"title":"자바8 Optional 3부: Optional을 Optional답게","date":"Jan 15, 2017"}},{"excerpt":"Java8의 Optional API를 통해 어떻게 null 처리를 할 수 있는지 알아봅시다. 이전 포스트를 통해 Java8 이 전에는 얼마나 null 처리가 고통스러웠는지 살펴보았습니다.\n그리고 문제의 본질이 null 참조를 통해 “값의 부재”를 표…","timeToRead":6,"fields":{"slug":"/java8-optional-after/","tags":["Java","Java8","FP","Optional","Stream"]},"frontmatter":{"title":"자바8 Optional 2부: null을 대하는 새로운 방법","date":"Jan 8, 2017"}},{"excerpt":"Java8이 나오기 이 전에는 얼마나 힘들게 null 처리를 했었는지 살펴봅시다. null 창시자가 스스로 인정한 null 탄생의 실수 우선 null이라는 개념은 언제 누구에 의해 만들어졌을까요?\nnull 참조는 1965년에 Tony Hoare라는 …","timeToRead":4,"fields":{"slug":"/java8-optional-before/","tags":["Java","Java8","FP","Optional","Stream"]},"frontmatter":{"title":"자바8 Optional 1부: 빠져나올 수 없는 null 처리의 늪","date":"Jan 1, 2017"}},{"excerpt":"본 포스트는 오라클 자바 튜토리얼의 What Is a Socket?를 번역하였습니다. 소켓 통신 일반적으로 서버는 특정 포트가 바인딩된 소켓를 가지고 특정 컴퓨터 위에서 돌아갑니다.\n해당 서버는 클라이언트의 연결 요청을 소켓을 통해 리스닝하면서 그냥…","timeToRead":2,"fields":{"slug":"/what-is-a-socket/","tags":["Java","Socket","network"]},"frontmatter":{"title":"소켓이란 무엇인가?","date":"Dec 18, 2016"}},{"excerpt":"본 포스트는 Dead Code Rising의 Java 8: No more loops를 번역하였습니다. 이전 포스트통해 자바의 판도를 바꿀 자바8의 새로운 함수형 기능들에 대해서 살펴보았습니다.\n자바 개발자들에게는 새로운 세상이 열렸으며, 이제 우리가…","timeToRead":4,"fields":{"slug":"/java8-no-more-loops/","tags":["Java","Java8","Stream","FP","translation"]},"frontmatter":{"title":"자바8: 반복문에서 벗어나기","date":"Dec 4, 2016"}},{"excerpt":"본 포스트는 오라클 웹사이트에 Ted Neward가 기고한 Java 8: Lambdas, Part 1를 번역하였습니다. 메소드 참조 (Method Reference) 지금까지 다룬 모든 람다는 사용 시점에 람다를 정의하는 익명 리터럴이였습니다.\n이는…","timeToRead":6,"fields":{"slug":"/java8-lambdas-part1-3/","tags":["Java","Java8","Lambda","FP","translation"]},"frontmatter":{"title":"자바8: 람다 1부 - 메소드 참조, 가상 확장 메소드, 결론","date":"Nov 27, 2016"}},{"excerpt":"본 포스트는 오라클 웹사이트에 Ted Neward가 기고한 Java 8: Lambdas, Part 1를 번역하였습니다. 자바8은 그런한 코드 블록을 쉽게 작성하게 하기위해 설계된 몇몇 새로운 언어 기능들을 도입합니다.\n그 중에서 가장 중요한 기능은 …","timeToRead":8,"fields":{"slug":"/java8-lambdas-part1-2/","tags":["Java","Java8","Lambda","FP","translation"]},"frontmatter":{"title":"자바8: 람다 1부 - 람다식, 타입 추론, 어휘 범위","date":"Nov 20, 2016"}},{"excerpt":"본 포스트는 오라클 웹사이트에 Ted Neward가 기고한 Java 8: Lambdas, Part 1를 번역하였습니다. 자바8의 람다 표현식 알아보기 자신이 선택한 프로그래밍 언어나 플랫폼의 새로운 출시 소식보다 소프트웨어 개발자를 흥분시키는 일이 …","timeToRead":4,"fields":{"slug":"/java8-lambdas-part1-1/","tags":["Java","Java8","Lambda","FP","translation"]},"frontmatter":{"title":"자바8: 람다 1부 - 서문, 배경","date":"Nov 13, 2016"}},{"excerpt":"배열을 사용하는 이유? 3개의 과일 이름을 변수에 저장하려면 다음과 같이 3개의 변수를 사용할 것이다. 하지만 만약에 저장한 과일 이름이 300개라면? 위와 같이 일일이 하나 하나의 변수에 저장하기 힘들 것이다.\n배열을 이용하면 하나의 변수에 여러 …","timeToRead":3,"fields":{"slug":"/javascript-array-basic/","tags":["JavaScript","array","자바스크립트","배열"]},"frontmatter":{"title":"자바스크립트 배열 기본 사용법","date":"Nov 6, 2016"}},{"excerpt":"본 포스트는 오라클 자바 튜토리얼의 Synchronization와 Thread Interference, Memory Consistency Errors, Synchronized Methods, Intrinsic Locks and Synchronizat…","timeToRead":10,"fields":{"slug":"/synchronization/","tags":["Java","Concurrency","Synchronization","Thread Interference","Memory Consistency Errors","Intrinsic Locks and Synchronization","Atomic Access"]},"frontmatter":{"title":"동기화 (Synchronization)","date":"Oct 2, 2016"}},{"excerpt":"본 포스트는 오라클 자바 튜토리얼의 Pausing Execution with Sleep와 Interrupts,  Joins, The SimpleThreads Example를 번역하였습니다. Sleep으로 실행 중지하기 Thread.sleep() 메소…","timeToRead":5,"fields":{"slug":"/sleep-interrupt-join/","tags":["Java","Concurrency","Thread"]},"frontmatter":{"title":"자바 쓰레드 Sleep & Intterupt & Join","date":"Sep 25, 2016"}},{"excerpt":"본 포스트는 오라클 자바 튜토리얼의 Thread Objects와 Defining and Starting a Thread를 번역하였습니다. 쓰레드 객체 모든 쓰레드는 Thread 클래스의 인스턴스와 관계를 갖습니다.\n동시 어플리케이션(concurren…","timeToRead":2,"fields":{"slug":"/threads/","tags":["Java","Concurrency","Process","Thread"]},"frontmatter":{"title":"자바 쓰레드","date":"Sep 18, 2016"}},{"excerpt":"본 포스트는 오라클 자바 튜토리얼의 Processes and Threads를 번역하였습니다. 동시 프로그래밍(Concurrent Programming)에는 프로세스와 쓰레드, 이 두가지 기본 실행단위가 있습니다.\n자바 프로그래밍 언어에서는 동시 프로…","timeToRead":2,"fields":{"slug":"/procthread/","tags":["Java","Concurrency","Process","Thread"]},"frontmatter":{"title":"프로세스와 쓰레드","date":"Sep 11, 2016"}},{"excerpt":"자바에서 쓰레드를 작성하는 2가지 방법에 대해서 알아보겠습니다. Thread 클래스 확장하기 첫번째 방법으로 java.lang.Thread 클래스를 확장할 수 있습니다.\nThread 클래스에는 상당히 많은 메소드가 있는데요.\n그 중에서 run() 이…","timeToRead":3,"fields":{"slug":"/java-thread-runnable/","tags":["Java","Multithreading","멀티쓰레드","Thread","쓰레드"]},"frontmatter":{"title":"자바: Thread 클래스와 Runnable 인터페이스","date":"Sep 4, 2016"}}]}},"pageContext":{}}}