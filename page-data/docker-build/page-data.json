{"componentChunkName":"component---src-templates-detail-template-jsx","path":"/docker-build/","result":{"pageContext":{"previous":null,"node":{"html":"<p><code>docker build</code>는 Dockerfile로 부터 이미지(image)를 빌드(build)하기 위해서 사용되는 Docker CLI 도구의 커맨드(command)입니다.</p>\n<h2 id=\"기본-문법\" style=\"position:relative;\"><a href=\"#%EA%B8%B0%EB%B3%B8-%EB%AC%B8%EB%B2%95\" aria-label=\"기본 문법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>기본 문법</h2>\n<p><code>docker build</code> 커맨드를 사용할 때는 경로를 반드시 명시해야하며, 옵션은 선택적으로 사용할 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ docker build <span class=\"token punctuation\">(</span><span class=\"token operator\">&lt;</span>옵션<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span>경로<span class=\"token operator\">></span></code></pre></div>\n<h2 id=\"빌드-컨텍스트\" style=\"position:relative;\"><a href=\"#%EB%B9%8C%EB%93%9C-%EC%BB%A8%ED%85%8D%EC%8A%A4%ED%8A%B8\" aria-label=\"빌드 컨텍스트 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>빌드 컨텍스트</h2>\n<p>Docker 데몬이 이미지를 빌드하려면 소위 컨텍스트(context)라고도 불리는 Dockerfile을 담고 있는 디렉토리가 필요한데요.\nDockerfile은 같은 디렉토리 안에 있는 설정 파일이나 소스 코드를 이용해서 이미지의 빌드 절차를 정의하기 때문입니다.</p>\n<p>예를 들어, 현재 작업 디렉토리를 기준으로 이미지를 빌드하려면 다음과 같이 커맨드를 실행합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ docker build <span class=\"token builtin class-name\">.</span></code></pre></div>\n<p>여기서 컨텍스트의 경로는 반드시 로컬 디렉토리일 필요는 없으며, 네트워크 상의 Git repository 주소나 압축 파일이 될 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ docker build github.com/creack/docker-firefox</code></pre></div>\n<h2 id=\"이미지-태깅\" style=\"position:relative;\"><a href=\"#%EC%9D%B4%EB%AF%B8%EC%A7%80-%ED%83%9C%EA%B9%85\" aria-label=\"이미지 태깅 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>이미지 태깅</h2>\n<p><code>-t</code> 옵션을 사용하여 Docker 이미지에 태그(tag)를 설정해줄 수 있습니다.\n이미지에 태그를 설정하면 랜덤으로 결정되는 이미지 ID 대신에 태그를 이용해서 이미지를 제어할 수 있기 때문에 편리합니다.\n또한, 이미지를 Docker Hub와 같은 Docker repository에 올릴 때도 태그가 해당 이미지의 고유 식별자로 사용되기 때문에 중요합니다.</p>\n<p>태그는 <code>리파지토리(repository):태그(tag)</code> 형태로 지정이 가능하며, <code>태그</code> 부분을 생략하면 <code>latest</code>가 태그가 됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ docker build -t test:1.0 <span class=\"token builtin class-name\">.</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ docker build -t <span class=\"token builtin class-name\">test</span> <span class=\"token builtin class-name\">.</span></code></pre></div>\n<p>참고로 <code>docker images</code> 커맨드로 막 빌드한 Docker 이미지의 리파지토리와 태그 값을 확인해볼 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ docker images\nREPOSITORY          TAG                 IMAGE ID            CREATED              SIZE\n<span class=\"token builtin class-name\">test</span>                latest              8bae72379b48        About a minute ago   <span class=\"token number\">5</span>.6MB\nalpine              latest              a187dde48cd2        <span class=\"token number\">2</span> weeks ago          <span class=\"token number\">5</span>.6MB</code></pre></div>\n<h2 id=\"다른-파일명의-dockerfile-사용하기\" style=\"position:relative;\"><a href=\"#%EB%8B%A4%EB%A5%B8-%ED%8C%8C%EC%9D%BC%EB%AA%85%EC%9D%98-dockerfile-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0\" aria-label=\"다른 파일명의 dockerfile 사용하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>다른 파일명의 Dockerfile 사용하기</h2>\n<p><code>-f</code> 옵션을 사용하면 디폴트인 <code>Dockerfile</code> 대신에 다른 파일로 부터 Docker 이미지를 빌드할 수 있습니다.</p>\n<p>예를 들어, 개발 환경에서 Docker 이미지의 빌드 절차가 상용 환경과 상이한 경우, 개발 환경 전용으로 <code>Dockerfile.dev</code>을 생성하고 다음과 같이 해당 파일을 바라보도록 해줄 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ docker build -f Dockerfile.dev <span class=\"token builtin class-name\">.</span></code></pre></div>\n<h2 id=\"마치면서\" style=\"position:relative;\"><a href=\"#%EB%A7%88%EC%B9%98%EB%A9%B4%EC%84%9C\" aria-label=\"마치면서 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>마치면서</h2>\n<p>지금까지 <code>docker build</code> 커맨드 사용법에 대해서 알아보았습니다.\n다른 옵션에 대한 내용은 <a href=\"https://docs.docker.com/engine/reference/commandline/build/\">Docker CLI 레퍼런스</a>를 참고 바라겠습니다.</p>","timeToRead":2,"fields":{"slug":"/docker-build/","tags":["Docker","도커","container","컨테이너","image","이미지","Dockerfile","CLI"]},"frontmatter":{"title":"Docker 이미지 관련 커맨드 사용법","date":"Apr 12, 2020"}},"next":{"fields":{"slug":"/dockerfile/"},"frontmatter":{"title":"Dockerfile에서 자주 쓰이는 명령어"}}}}}