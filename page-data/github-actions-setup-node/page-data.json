{"componentChunkName":"component---src-templates-detail-template-jsx","path":"/github-actions-setup-node/","result":{"pageContext":{"previous":{"fields":{"slug":"/github-actions-jobs/"},"frontmatter":{"title":"GitHub Actions의 유용한 작업(job) 설정"}},"node":{"html":"<p>이번 포스팅에서는 GitHub의 CI 서비스인 GitHub Actions를 사용하여 자바스크립트 프로젝트에서 CI를 구성하는 방법에 대해서 알아보겠습니다.\n또한 자바스크립트 프로젝트에서 GitHub Actions 셋업이 용이하도록 GitHub에서 제공하는 Setup Node 액션에 대해서도 살펴보겠습니다.</p>\n<h2 id=\"실습-프로젝트와-코드-저장소-생성\" style=\"position:relative;\"><a href=\"#%EC%8B%A4%EC%8A%B5-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8%EC%99%80-%EC%BD%94%EB%93%9C-%EC%A0%80%EC%9E%A5%EC%86%8C-%EC%83%9D%EC%84%B1\" aria-label=\"실습 프로젝트와 코드 저장소 생성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>실습 프로젝트와 코드 저장소 생성</h2>\n<p>간단한 실습을 위해서 Create React App을 통해 간단한 자바스크립트 프로젝트를 하나 생성하겠습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ npx create-react-app github-actions-setup-node\n\nCreating a new React app <span class=\"token keyword\">in</span> /Users/daleseo/temp/github-actions-setup-node.\n\nInstalling packages. This might take a couple of minutes.\nInstalling react, react-dom, and react-scripts with cra-template<span class=\"token punctuation\">..</span>.\n\n\n<span class=\"token punctuation\">(</span><span class=\"token punctuation\">..</span>. 생략 <span class=\"token punctuation\">..</span>.<span class=\"token punctuation\">)</span>\n\nWe suggest that you begin by typing:\n\n  <span class=\"token builtin class-name\">cd</span> github-actions-setup-node\n  <span class=\"token function\">npm</span> start\n\nHappy hacking<span class=\"token operator\">!</span></code></pre></div>\n<p>그 다음 본인 GitHub에 계정에 새로운 코드 저장소(repository)를 하나를 만들고 위에서 생성한 프로젝트의 코드를 올립니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token builtin class-name\">cd</span> github-actions-setup-node\n$ <span class=\"token function\">git</span> remote <span class=\"token function\">add</span> origin https://github.com/DaleSchool/github-actions-setup-node.git\n$ <span class=\"token function\">git</span> branch -M main\n$ <span class=\"token function\">git</span> push -u origin main\nEnumerating objects: <span class=\"token number\">22</span>, done.\nCounting objects: <span class=\"token number\">100</span>% <span class=\"token punctuation\">(</span><span class=\"token number\">22</span>/22<span class=\"token punctuation\">)</span>, done.\nDelta compression using up to <span class=\"token number\">8</span> threads\nCompressing objects: <span class=\"token number\">100</span>% <span class=\"token punctuation\">(</span><span class=\"token number\">22</span>/22<span class=\"token punctuation\">)</span>, done.\nWriting objects: <span class=\"token number\">100</span>% <span class=\"token punctuation\">(</span><span class=\"token number\">22</span>/22<span class=\"token punctuation\">)</span>, <span class=\"token number\">285.94</span> KiB <span class=\"token operator\">|</span> <span class=\"token number\">8.41</span> MiB/s, done.\nTotal <span class=\"token number\">22</span> <span class=\"token punctuation\">(</span>delta <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>, reused <span class=\"token number\">0</span> <span class=\"token punctuation\">(</span>delta <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>, pack-reused <span class=\"token number\">0</span>\nTo https://github.com/DaleSchool/github-actions-cache.git\n * <span class=\"token punctuation\">[</span>new branch<span class=\"token punctuation\">]</span>      main -<span class=\"token operator\">></span> main\nBranch <span class=\"token string\">'main'</span> <span class=\"token builtin class-name\">set</span> up to track remote branch <span class=\"token string\">'main'</span> from <span class=\"token string\">'origin'</span><span class=\"token builtin class-name\">.</span></code></pre></div>\n<p>저장소의 이름은 원하는대로 지으시면 되며 저는 프로젝트 명과 동일한 <code>github-actions-setup-node</code>이라는 이름으로 실습 코드 저장소를 만들었습니다.</p>\n<h2 id=\"npm-패키지-설치\" style=\"position:relative;\"><a href=\"#npm-%ED%8C%A8%ED%82%A4%EC%A7%80-%EC%84%A4%EC%B9%98\" aria-label=\"npm 패키지 설치 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>npm 패키지 설치</h2>\n<p>자바스크립트 프로젝트에서 모든 CI 작업은 npm 패키지 설치에서 시작한다고 해도 과언이 아니겠죠?\n먼저 CI 서버에 npm 패키지를 설치해보도록 하겠습니다.</p>\n<p>프로젝트에 <code>.github/workflows/</code>라는 폴더를 만든 후, 그 안에 <code>ci.yml</code>이라는 이름의 YAML 파일을 하나 생성합니다.</p>\n<p>코드 저장소에서 <code>push</code> 이벤트가 발생되면 워크플로우가 실행되도록 설정하고 <code>build</code>라는 간단한 작업(job)을 추가합니다.\n<code>build</code> 작업은 총 2단계로 이뤄지는데 첫번째 단계에서는 체크아웃 액션을 이용하여 코드 저장소에 올려둔 프로젝트의 코드를 CI 서버로 내려받고,\n두번째 단계에서는 <code>npm</code>을 이용하여 <code>package.json</code> 파일에 명시되어 있는 패키지들을 CI 서버에 설치합니다.</p>\n<blockquote>\n<p>GitHub에서 제공하는 체크아웃(Checkout) 액션에 대해서는 <a href=\"/github-actions-checkout/\">별도의 포스팅</a>에서 자세히 다루었으니 참고 바랍니다.</p>\n</blockquote>\n<div class=\"gatsby-code-title\">.github/workflows/ci.yml</div>\n<div class=\"gatsby-highlight\" data-language=\"yml\"><pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Our CI\n<span class=\"token key atrule\">on</span><span class=\"token punctuation\">:</span> push\n<span class=\"token key atrule\">jobs</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">build</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">runs-on</span><span class=\"token punctuation\">:</span> ubuntu<span class=\"token punctuation\">-</span>latest\n    <span class=\"token key atrule\">steps</span><span class=\"token punctuation\">:</span>\n<span class=\"gatsby-highlight-code-line\">      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/checkout@v3</span><span class=\"gatsby-highlight-code-line\">      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> npm ci</span></code></pre></div>\n<p><code>ci.yml</code> 파일을 GitHub의 코드 저장소로 올린 후 <code>Actions</code> 탭에 들어가면 워크플로우가 실행될 것입니다.</p>\n<div class=\"gatsby-code-title\">Log</div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">☑️ Set up Job\n☑️ Run actions/checkout@v3\n☑️ Run <span class=\"token function\">npm</span> ci\n<span class=\"gatsby-highlight-code-line\">▶ Run <span class=\"token function\">npm</span> ci</span><span class=\"gatsby-highlight-code-line\"><span class=\"token function\">npm</span> WARN deprecated source-map-resolve@0.6.0: See https://github.com/lydell/source-map-resolve<span class=\"token comment\">#deprecated</span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token function\">npm</span> WARN deprecated svgo@1.3.2: This SVGO version is no longer supported. Upgrade to v2.x.x.</span><span class=\"gatsby-highlight-code-line\"></span><span class=\"gatsby-highlight-code-line\">added <span class=\"token number\">1415</span> packages, and audited <span class=\"token number\">1416</span> packages <span class=\"token keyword\">in</span> 27s</span><span class=\"gatsby-highlight-code-line\"></span><span class=\"gatsby-highlight-code-line\"><span class=\"token number\">179</span> packages are looking <span class=\"token keyword\">for</span> funding</span><span class=\"gatsby-highlight-code-line\">  run <span class=\"token variable\"><span class=\"token variable\">`</span><span class=\"token function\">npm</span> fund<span class=\"token variable\">`</span></span> <span class=\"token keyword\">for</span> details</span><span class=\"gatsby-highlight-code-line\"></span><span class=\"gatsby-highlight-code-line\"><span class=\"token number\">6</span> moderate severity vulnerabilities</span><span class=\"gatsby-highlight-code-line\"></span><span class=\"gatsby-highlight-code-line\">To address all issues <span class=\"token punctuation\">(</span>including breaking changes<span class=\"token punctuation\">)</span>, run:</span><span class=\"gatsby-highlight-code-line\">  <span class=\"token function\">npm</span> audit fix --force</span><span class=\"gatsby-highlight-code-line\"></span><span class=\"gatsby-highlight-code-line\">Run <span class=\"token variable\"><span class=\"token variable\">`</span><span class=\"token function\">npm</span> audit<span class=\"token variable\">`</span></span> <span class=\"token keyword\">for</span> details.</span>☑️ Post Run actions/checkout@v3\n☑️ Complete Job</code></pre></div>\n<p><code>Run npm ci</code> 단계를 보면 CI 서버에 총 1415개의 패키지가 설치된 것을 확인할 수 있습니다.</p>\n<h2 id=\"테스트-실행-및-프로젝트-빌드\" style=\"position:relative;\"><a href=\"#%ED%85%8C%EC%8A%A4%ED%8A%B8-%EC%8B%A4%ED%96%89-%EB%B0%8F-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EB%B9%8C%EB%93%9C\" aria-label=\"테스트 실행 및 프로젝트 빌드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>테스트 실행 및 프로젝트 빌드</h2>\n<p>CI에서 테스트를 실행과 프로젝트 빌드는 거의 필수적으로 진행되죠?\n테스트를 실행 후에 프로젝트가 빌드되도록 워크플로우 파일을 한번 수정해보겠습니다.</p>\n<div class=\"gatsby-code-title\">.github/workflows/ci.yml</div>\n<div class=\"gatsby-highlight\" data-language=\"yml\"><pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Our CI\n<span class=\"token key atrule\">on</span><span class=\"token punctuation\">:</span> push\n<span class=\"token key atrule\">jobs</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">build</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">runs-on</span><span class=\"token punctuation\">:</span> ubuntu<span class=\"token punctuation\">-</span>latest\n    <span class=\"token key atrule\">steps</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/checkout@v3\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> npm ci\n<span class=\"gatsby-highlight-code-line\">      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> npm test</span><span class=\"gatsby-highlight-code-line\">      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> npm run build</span></code></pre></div>\n<p>이제 <code>ci.yml</code> 파일의 변경 내용을 GitHub의 코드 저장소로 올리면 워크플로우가 실행될 것입니다.</p>\n<div class=\"gatsby-code-title\">Log</div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">☑️ Set up Job\n☑️ Run actions/checkout@v3\n☑️ Run <span class=\"token function\">npm</span> ci\n<span class=\"gatsby-highlight-code-line\">☑️ Run <span class=\"token function\">npm</span> <span class=\"token builtin class-name\">test</span></span><span class=\"gatsby-highlight-code-line\">▶ Run <span class=\"token function\">npm</span> <span class=\"token builtin class-name\">test</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token function\">npm</span> <span class=\"token builtin class-name\">test</span></span><span class=\"gatsby-highlight-code-line\">  shell: /usr/bin/bash -e <span class=\"token punctuation\">{</span><span class=\"token number\">0</span><span class=\"token punctuation\">}</span></span><span class=\"gatsby-highlight-code-line\"></span><span class=\"gatsby-highlight-code-line\"><span class=\"token operator\">></span> github-actions-setup-node@0.1.0 <span class=\"token builtin class-name\">test</span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token operator\">></span> react-scripts <span class=\"token builtin class-name\">test</span></span><span class=\"gatsby-highlight-code-line\"></span><span class=\"gatsby-highlight-code-line\">PASS src/App.test.js</span><span class=\"gatsby-highlight-code-line\">  ✓ renders learn react <span class=\"token function\">link</span> <span class=\"token punctuation\">(</span><span class=\"token number\">36</span> ms<span class=\"token punctuation\">)</span></span><span class=\"gatsby-highlight-code-line\"></span><span class=\"gatsby-highlight-code-line\">Test Suites: <span class=\"token number\">1</span> passed, <span class=\"token number\">1</span> total</span><span class=\"gatsby-highlight-code-line\">Tests:       <span class=\"token number\">1</span> passed, <span class=\"token number\">1</span> total</span><span class=\"gatsby-highlight-code-line\">Snapshots:   <span class=\"token number\">0</span> total</span><span class=\"gatsby-highlight-code-line\">Time:        <span class=\"token number\">1.468</span> s</span><span class=\"gatsby-highlight-code-line\">Ran all <span class=\"token builtin class-name\">test</span> suites.</span>☑️ Run <span class=\"token function\">npm</span> run build\n<span class=\"gatsby-highlight-code-line\">▶ Run <span class=\"token function\">npm</span> run build</span><span class=\"gatsby-highlight-code-line\">  <span class=\"token function\">npm</span> run build</span><span class=\"gatsby-highlight-code-line\">  shell: /usr/bin/bash -e <span class=\"token punctuation\">{</span><span class=\"token number\">0</span><span class=\"token punctuation\">}</span></span><span class=\"gatsby-highlight-code-line\"></span><span class=\"gatsby-highlight-code-line\"><span class=\"token operator\">></span> github-actions-setup-node@0.1.0 build</span><span class=\"gatsby-highlight-code-line\"><span class=\"token operator\">></span> react-scripts build</span><span class=\"gatsby-highlight-code-line\"></span><span class=\"gatsby-highlight-code-line\">Creating an optimized production build<span class=\"token punctuation\">..</span>.</span><span class=\"gatsby-highlight-code-line\">Compiled successfully.</span><span class=\"gatsby-highlight-code-line\"></span><span class=\"gatsby-highlight-code-line\">File sizes after gzip:</span><span class=\"gatsby-highlight-code-line\"></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token number\">46.39</span> kB  build/static/js/main.f5998c51.js</span><span class=\"gatsby-highlight-code-line\">  <span class=\"token number\">1.79</span> kB   build/static/js/787.2063ca84.chunk.js</span><span class=\"gatsby-highlight-code-line\">  <span class=\"token number\">541</span> B     build/static/css/main.073c9b0a.css</span><span class=\"gatsby-highlight-code-line\"></span><span class=\"gatsby-highlight-code-line\">The project was built assuming it is hosted at /.</span><span class=\"gatsby-highlight-code-line\">You can control this with the homepage field <span class=\"token keyword\">in</span> your package.json.</span><span class=\"gatsby-highlight-code-line\"></span><span class=\"gatsby-highlight-code-line\">The build folder is ready to be deployed.</span><span class=\"gatsby-highlight-code-line\">You may serve it with a static server:</span><span class=\"gatsby-highlight-code-line\"></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token function\">npm</span> <span class=\"token function\">install</span> -g serve</span><span class=\"gatsby-highlight-code-line\">  serve -s build</span><span class=\"gatsby-highlight-code-line\"></span><span class=\"gatsby-highlight-code-line\">Find out <span class=\"token function\">more</span> about deployment here:</span><span class=\"gatsby-highlight-code-line\"></span><span class=\"gatsby-highlight-code-line\">  https://cra.link/deployment</span>☑️ Post Run actions/checkout@v3\n☑️ Complete Job</code></pre></div>\n<p><code>Actions</code> 탭에 들어가 워크플로우 실행 로그를 확인해보면 CI 서버에서 테스트가 통과하고 프로젝트가 빌드되는 것을 볼 수 있습니다.</p>\n<p>참고로 여기서 의도적으로 프로젝트 빌드보다 테스트를 먼저 실행되도록 워크플로우를 설정하였는데요.\n테스트가 실패한 코드를 굳이 빌드하여 CI 서버의 리소스를 낭비할 필요가 없기 때문입니다.</p>\n<h2 id=\"특정-노드-버전-설치\" style=\"position:relative;\"><a href=\"#%ED%8A%B9%EC%A0%95-%EB%85%B8%EB%93%9C-%EB%B2%84%EC%A0%84-%EC%84%A4%EC%B9%98\" aria-label=\"특정 노드 버전 설치 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>특정 노드 버전 설치</h2>\n<p>GitHub Actions에서는 기본적으로 CI 서버에 Node.js가 이미 설치가 되어 있어서 굳이 별도로 설치를 해 줄 필요는 없는데요.\n그럼에도 불구하고 GitHub Actions의 CI 서버는 주기적으로 이러한 소프트웨어가 업데이트되기 때문에 프로젝트에서 사용하는 정확한 버전의 Node.js를 설치하는 편이 더 안전할 수도 있습니다.</p>\n<p>우분투 운영체제의 <code>apt-get</code> 명령어나 윈도우즈 운영체제의 <code>choco</code> 명령어를 사용해서 직접 설치 스크립트를 작성하여 실행할 수도 있지만,\nGitHub에서 제공하는 Setup Node 액션을 사용하면 CI 서버의 운영체제를 신경쓰지 않고 단순히 버전만 명시하여 Node.js를 설치할 수 있어서 매우 편리합니다.\n<code>actions/setup-node@v3</code> 액션의 <code>node-version</code> 입력 옵션을 <code>16.14.2</code>로 넘겨보겠습니다.</p>\n<div class=\"gatsby-code-title\">.github/workflows/ci.yml</div>\n<div class=\"gatsby-highlight\" data-language=\"yml\"><pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Our CI\n<span class=\"token key atrule\">on</span><span class=\"token punctuation\">:</span> push\n<span class=\"token key atrule\">jobs</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">build</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">runs-on</span><span class=\"token punctuation\">:</span> ubuntu<span class=\"token punctuation\">-</span>latest\n    <span class=\"token key atrule\">steps</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/checkout@v3\n<span class=\"gatsby-highlight-code-line\">      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/setup<span class=\"token punctuation\">-</span>node@v3</span><span class=\"gatsby-highlight-code-line\">        <span class=\"token key atrule\">with</span><span class=\"token punctuation\">:</span></span><span class=\"gatsby-highlight-code-line\">          <span class=\"token key atrule\">node-version</span><span class=\"token punctuation\">:</span> 16.14.2</span>      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> npm ci\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> npm test\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> npm run build</code></pre></div>\n<p>다시 <code>ci.yml</code> 파일의 변경 내용을 GitHub의 코드 저장소로 올리면 워크플로우가 실행될 것입니다.</p>\n<div class=\"gatsby-code-title\">Log</div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">☑️ Set up Job\n☑️ Run actions/checkout@v3\n<span class=\"gatsby-highlight-code-line\">☑️ Run actions/setup-node@v3</span><span class=\"gatsby-highlight-code-line\">▶ Run actions/setup-node@v3</span><span class=\"gatsby-highlight-code-line\">Attempting to download <span class=\"token number\">16.14</span>.2<span class=\"token punctuation\">..</span>.</span><span class=\"gatsby-highlight-code-line\">Acquiring <span class=\"token number\">16.14</span>.2 - x64 from https://github.com/actions/node-versions/releases/download/16.14.2-2007501289/node-16.14.2-linux-x64.tar.gz</span><span class=\"gatsby-highlight-code-line\">Extracting <span class=\"token punctuation\">..</span>.</span><span class=\"gatsby-highlight-code-line\">/usr/bin/tar xz --strip <span class=\"token number\">1</span> --warning<span class=\"token operator\">=</span>no-unknown-keyword -C /home/runner/work/_temp/b7b24842-f513-43a7-938d-2a409c6055c4 -f /home/runner/work/_temp/48e86587-038b-4eae-9b1d-dafbd445c172</span><span class=\"gatsby-highlight-code-line\">Adding to the cache <span class=\"token punctuation\">..</span>.</span><span class=\"gatsby-highlight-code-line\">Done</span>☑️ Run <span class=\"token function\">npm</span> ci\n☑️ Run <span class=\"token function\">npm</span> <span class=\"token builtin class-name\">test</span>\n☑️ Run <span class=\"token function\">npm</span> run build\n☑️ Post Run actions/setup-node@v3\n☑️ Post Run actions/checkout@v3\n☑️ Complete Job</code></pre></div>\n<p>워크플로우의 로그를 통해 Node.js의 정확히 16.14.2 버전이 CI 서버에 설치되는 것을 확인할 수 있습니다.</p>\n<h2 id=\"npm-패키지-캐싱\" style=\"position:relative;\"><a href=\"#npm-%ED%8C%A8%ED%82%A4%EC%A7%80-%EC%BA%90%EC%8B%B1\" aria-label=\"npm 패키지 캐싱 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>npm 패키지 캐싱</h2>\n<p>워크플로우 로그를 확인해보면 npm 패키지를 설치하는 단계에서 시간이 가장 많이 소모되는 것을 눈치챌 수 있는데요.\n개발자들은 계속 같은 컴퓨터를 사용하므로 npm 패키지를 최초에 한 번만 설치해주면 되지만, 항상 새롭게 셋업되는 CI 서버에서는 모든 npm 패키지를 매번 설치해야하는 비효율이 발생합니다.</p>\n<p>특히 프로젝트의 규모가 커지고 더욱 많은 npm 패키지가 설치됨에 따라 이것은 프로젝트의 개발 생산성에도 부정적인 영향을 줄 수 있는데요.\n다행이도 GitHub Actions에서는 캐싱(caching)을 지원하기 때문에 CI 서버에서 npm 패키지를 설치할 때 성능 향상을 꾀할 수 있습니다.</p>\n<p>GitHub의 Setup Node을 사용하면 매우 간편하게 이러한 npm 패키지 캐싱도 설정할 수 있는데요.\n<code>actions/setup-node@v3</code> 액션의 <code>cache</code> 입력 옵션을 통해 <code>npm</code>, <code>yarn</code>, <code>pnpm</code>과 같은 패키지 매니저를 넘길 수 있습니다.\n실습 프로젝트는 <code>npm</code>을 사용하므로 <code>package-lock.json</code> 파일을 기준으로 캐싱을 하도록 <code>cache</code> 입력 옵션을 <code>npm</code>으로 넘기겠습니다.</p>\n<div class=\"gatsby-code-title\">.github/workflows/ci.yml</div>\n<div class=\"gatsby-highlight\" data-language=\"yml\"><pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Our CI\n<span class=\"token key atrule\">on</span><span class=\"token punctuation\">:</span> push\n<span class=\"token key atrule\">jobs</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">build</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">runs-on</span><span class=\"token punctuation\">:</span> ubuntu<span class=\"token punctuation\">-</span>latest\n    <span class=\"token key atrule\">steps</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/checkout@v3\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/setup<span class=\"token punctuation\">-</span>node@v3\n        <span class=\"token key atrule\">with</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">node-version</span><span class=\"token punctuation\">:</span> 16.14.2\n<span class=\"gatsby-highlight-code-line\">          <span class=\"token key atrule\">cache</span><span class=\"token punctuation\">:</span> npm</span>      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> npm ci\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> npm test\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> npm run build</code></pre></div>\n<p>이제 <code>ci.yml</code> 파일의 변경 내용을 GitHub의 코드 저장소로 올리면 워크플로우가 실행될 것입니다.</p>\n<div class=\"gatsby-code-title\">Log</div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">☑️ Set up Job\n☑️ Run actions/checkout@v3\n☑️ Run actions/setup-node@v3\n<span class=\"gatsby-highlight-code-line\">▶ Run actions/setup-node@v3</span><span class=\"gatsby-highlight-code-line\">Attempting to download <span class=\"token number\">16.14</span>.2<span class=\"token punctuation\">..</span>.</span><span class=\"gatsby-highlight-code-line\">Acquiring <span class=\"token number\">16.14</span>.2 - x64 from https://github.com/actions/node-versions/releases/download/16.14.2-2007501289/node-16.14.2-linux-x64.tar.gz</span><span class=\"gatsby-highlight-code-line\">Extracting <span class=\"token punctuation\">..</span>.</span><span class=\"gatsby-highlight-code-line\">/usr/bin/tar xz --strip <span class=\"token number\">1</span> --warning<span class=\"token operator\">=</span>no-unknown-keyword -C /home/runner/work/_temp/763ebb03-a499-446c-9a7e-ca4f5565cca1 -f /home/runner/work/_temp/eebaaa50-d30d-4b26-b2da-a687b624e6d2</span><span class=\"gatsby-highlight-code-line\">Adding to the cache <span class=\"token punctuation\">..</span>.</span><span class=\"gatsby-highlight-code-line\">Done</span><span class=\"gatsby-highlight-code-line\">/opt/hostedtoolcache/node/16.14.2/x64/bin/npm config get cache</span><span class=\"gatsby-highlight-code-line\">/home/runner/.npm</span><span class=\"gatsby-highlight-code-line\"></span><span class=\"gatsby-highlight-code-line\"><span class=\"token function\">npm</span> cache is not found</span>☑️ Run <span class=\"token function\">npm</span> ci\n☑️ Run <span class=\"token function\">npm</span> <span class=\"token builtin class-name\">test</span>\n☑️ Run <span class=\"token function\">npm</span> run build\n☑️ Post Run actions/setup-node@v3\n<span class=\"gatsby-highlight-code-line\">▶ Post job cleanup.</span><span class=\"gatsby-highlight-code-line\">/opt/hostedtoolcache/node/16.14.2/x64/bin/npm config get cache</span><span class=\"gatsby-highlight-code-line\">/home/runner/.npm</span><span class=\"gatsby-highlight-code-line\">/usr/bin/tar --posix --use-compress-program zstd -T0 -cf cache.tzst -P -C /home/runner/work/github-actions-setup-node/github-actions-setup-node --files-from manifest.txt</span><span class=\"gatsby-highlight-code-line\">Cache Size: ~37 MB <span class=\"token punctuation\">(</span><span class=\"token number\">39269225</span> B<span class=\"token punctuation\">)</span></span><span class=\"gatsby-highlight-code-line\">Cache saved successfully</span><span class=\"gatsby-highlight-code-line\">Cache saved with the key: node-cache-Linux-npm-0ea44dc6f6ce94ea47107f7661af88d55a05d065fdb8b953a40ff5c25151ffe7</span>☑️ Post Run actions/checkout@v3\n☑️ Complete Job</code></pre></div>\n<p>첫번째 실행에는 워크플로우가 전혀 빨라지지 않을 거에요.\n아직까지 캐시에 npm 패키지를 저장한 적이 없으니까요.\n하지만 <code>Post Run actions/setup-node@v3</code> 단계를 보시면 npm 패키지를 압축하여 GitHub의 캐시에 올리는 것을 볼 수 있습니다.</p>\n<p>이제 <code>Actions</code> 탭에서 실습 워크플로우를 수동으로 재실행해볼까요?</p>\n<div class=\"gatsby-code-title\">Log</div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">☑️ Set up Job\n☑️ Run actions/checkout@v3\n☑️ Run actions/setup-node@v3\n<span class=\"gatsby-highlight-code-line\">▶ Run actions/setup-node@v3</span><span class=\"gatsby-highlight-code-line\">Attempting to download <span class=\"token number\">16.14</span>.2<span class=\"token punctuation\">..</span>.</span><span class=\"gatsby-highlight-code-line\">Acquiring <span class=\"token number\">16.14</span>.2 - x64 from https://github.com/actions/node-versions/releases/download/16.14.2-2007501289/node-16.14.2-linux-x64.tar.gz</span><span class=\"gatsby-highlight-code-line\">Extracting <span class=\"token punctuation\">..</span>.</span><span class=\"gatsby-highlight-code-line\">/usr/bin/tar xz --strip <span class=\"token number\">1</span> --warning<span class=\"token operator\">=</span>no-unknown-keyword -C /home/runner/work/_temp/85c6463c-9771-4922-9fa8-79825bd14a85 -f /home/runner/work/_temp/f80c4dd5-fcf0-411c-ad5e-5b7bfbb6e7e9</span><span class=\"gatsby-highlight-code-line\">Adding to the cache <span class=\"token punctuation\">..</span>.</span><span class=\"gatsby-highlight-code-line\">Done</span><span class=\"gatsby-highlight-code-line\">/opt/hostedtoolcache/node/16.14.2/x64/bin/npm config get cache</span><span class=\"gatsby-highlight-code-line\">/home/runner/.npm</span><span class=\"gatsby-highlight-code-line\">Received <span class=\"token number\">4194304</span> of <span class=\"token number\">39269225</span> <span class=\"token punctuation\">(</span><span class=\"token number\">10.7</span>%<span class=\"token punctuation\">)</span>, <span class=\"token number\">4.0</span> MBs/sec</span><span class=\"gatsby-highlight-code-line\">Received <span class=\"token number\">39269225</span> of <span class=\"token number\">39269225</span> <span class=\"token punctuation\">(</span><span class=\"token number\">100.0</span>%<span class=\"token punctuation\">)</span>, <span class=\"token number\">27.1</span> MBs/sec</span><span class=\"gatsby-highlight-code-line\">Cache Size: ~37 MB <span class=\"token punctuation\">(</span><span class=\"token number\">39269225</span> B<span class=\"token punctuation\">)</span></span><span class=\"gatsby-highlight-code-line\">/usr/bin/tar --use-compress-program zstd -d -xf /home/runner/work/_temp/bc7adebc-41de-4291-845f-6915f7cd49a4/cache.tzst -P -C /home/runner/work/github-actions-setup-node/github-actions-setup-node</span><span class=\"gatsby-highlight-code-line\">Cache restored successfully</span><span class=\"gatsby-highlight-code-line\"></span><span class=\"gatsby-highlight-code-line\">Cache restored from key: node-cache-Linux-npm-0ea44dc6f6ce94ea47107f7661af88d55a05d065fdb8b953a40ff5c25151ffe7</span>☑️ Run <span class=\"token function\">npm</span> ci\n☑️ Run <span class=\"token function\">npm</span> <span class=\"token builtin class-name\">test</span>\n☑️ Run <span class=\"token function\">npm</span> run build\n☑️ Post Run actions/setup-node@v3\n<span class=\"gatsby-highlight-code-line\">▶ Post job cleanup.</span><span class=\"gatsby-highlight-code-line\">/opt/hostedtoolcache/node/16.14.2/x64/bin/npm config get cache</span><span class=\"gatsby-highlight-code-line\">/home/runner/.npm</span><span class=\"gatsby-highlight-code-line\">Cache hit occurred on the primary key node-cache-Linux-npm-0ea44dc6f6ce94ea47107f7661af88d55a05d065fdb8b953a40ff5c25151ffe7, not saving cache.</span>☑️ Post Run actions/checkout@v3\n☑️ Complete Job</code></pre></div>\n<p>이 번에는 패키지를 설치하는 속도가 훨씬 빨라졌는데요.\n기존에는 약 30초가 걸렸었는데 이번에는 약 10초가 걸리네요.</p>\n<p><code>Run actions/setup-node@v3</code> 단계를 보면 GitHub의 캐시에서 npm 패키지가 들어있는 약 37 MB의 압축 파일을 읽어와서 CI 서버에 압축을 풀고 있는 것을 볼 수 있습니다.</p>\n<p>참고로 이것보다 좀 더 세밀한 캐싱 설정이 필요하다면 GitHub의 Cache 액션을 사용할 수도 있는데요.\nGitHub의 Cache 액션에 대해서는 <a href=\"/github-actions-cache/\">별도의 포스팅</a>에서 다루었으니 참고 바랍니다.</p>\n<h2 id=\"실습-코드\" style=\"position:relative;\"><a href=\"#%EC%8B%A4%EC%8A%B5-%EC%BD%94%EB%93%9C\" aria-label=\"실습 코드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>실습 코드</h2>\n<p>본 포스팅에서 작성한 YAML 파일과 워크플로우 실행 결과는 아래 코드 저장소에서 확인하실 수 있습니다.</p>\n<ul>\n<li>Code: <a href=\"https://github.com/DaleSchool/github-actions-setup-node\">https://github.com/DaleSchool/github-actions-setup-node</a></li>\n<li>Actions: <a href=\"https://github.com/DaleSchool/github-actions-setup-node/actions\">https://github.com/DaleSchool/github-actions-setup-node/actions</a></li>\n</ul>\n<h2 id=\"마치면서\" style=\"position:relative;\"><a href=\"#%EB%A7%88%EC%B9%98%EB%A9%B4%EC%84%9C\" aria-label=\"마치면서 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>마치면서</h2>\n<p>지금까지 자바스크립트 프로젝트를 만들고 GitHub의 저장소에 올린 후 간단하게 GitHub Actions를 셋업해보았습니다.\n실습 워크플로우에서는 일반적인 CI에서 기본적으로 필요한 패키지 설치, 테스트 실행, 프로젝트 빌드까지만 설정을 해보았는데요.</p>\n<p>실제 프로젝트에서는 여기에 코드 포멧팅(formatting)이나 린팅(linting)를 추가 셋업할 수도 있고, 타입스크립트를 사용한다면 당연히 컴파일 오류를 확인하는 단계도 필요할 것입니다.\n뿐만 아니라 단순한 CI(Continuous Integration)에서 더 나아가 애플리케이션을 상용 환경에 반영하거나 라이브러리를 npm 저장소에 배포하는 CD(Continuous Deployment)까지 확장할 수 있겠죠?</p>\n<p>본 포스팅에서 활용한 Setup Node 액션에 대한 좀 더 세부적인 내용은 <a href=\"https://github.com/marketplace/actions/setup-node-js-environment\">GitHub 마켓플레이스</a>를 참고 바라겠습니다.</p>","timeToRead":10,"fields":{"slug":"/github-actions-setup-node/","tags":["GitHub","GitHubActions","JavaScript","Node.js","npm","CI","CD"]},"frontmatter":{"title":"GitHub Actions 자바스크립트 셋업","date":"May 8, 2022"}},"next":{"fields":{"slug":"/mock-service-worker/"},"frontmatter":{"title":"MSW로 백앤드 API 모킹하기"}}}},"staticQueryHashes":["2168229929","2362167539","3056348342"]}