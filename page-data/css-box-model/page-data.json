{"componentChunkName":"component---src-templates-detail-template-jsx","path":"/css-box-model/","result":{"pageContext":{"previous":{"fields":{"slug":"/java-min-max/"},"frontmatter":{"title":"[Java] 최소/최대 원소 구하기 (Loop/Collections/Stream)"}},"node":{"html":"<p>웹페이지 상의 모든 엘리먼트는 하나의 박스의 개념으로 모델링 할 수 있습니다.\n이 박스 모델이라고 불리는 컨셉은 CSS의 근간이 되기 때문에 반드시 이해하고 있어야 합니다.</p>\n<h2 id=\"box-model-이란\" style=\"position:relative;\"><a href=\"#box-model-%EC%9D%B4%EB%9E%80\" aria-label=\"box model 이란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Box Model 이란?</h2>\n<p>우리가 웹페이지에 배치하는 모든 HTML 엘리먼트는 3개의 층을 가진 사각형 구조의 형태를 띠고 있습니다.</p>\n<p><img src=\"https://mdn.mozillademos.org/files/13647/-standard-small.png\" alt=\"box-model\"></p>\n<p>가장 외곽의 층을 <code>margin</code> 영역이라고 부르는데, 보통 주변에 위치한 다른 엘리먼트와의 상하좌우 간격을 두기 위해서 쓰입니다.\n그 바로 아래 층을 <code>border</code> 영역이라고 부르는데, 경계선을 그리기 위해서 쓰이며, <code>margin</code>과 <code>padding</code>과 달리 두께 뿐만 아니라 색상과 모양까지 지정할 수 있습니다.\n그 바로 아래 층은 <code>padding</code> 영역이라고 불리는데, 컨텐츠와 경계선 사이의 간격을 지정하기 위해서 쓰입니다.\n마지막으로 가장 중간에 있는 영역은 <code>content</code> 영역이라고 하며, 컨텐트의 <code>width</code>(너비)와 <code>height</code>(높이)를 지정해줄 수 있습니다.</p>\n<p>예를 들어, <code>15px</code> 두께의 <code>margin</code>과 <code>5px</code> 두께의 <code>bordr</code> 그리고 <code>20px</code> 두께의 <code>padding</code>을 가진 엘리먼트는 다음과 같이 만들 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>container<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  MARGIN\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>box<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    CONTENT\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.container</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> orange<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 400px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">border</span><span class=\"token punctuation\">:</span> 1px solid red<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.box</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> white<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> green<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 200px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 30px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> 20px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">border</span><span class=\"token punctuation\">:</span> 5px dashed black<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">margin</span><span class=\"token punctuation\">:</span> 15px<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<iframe height=\"380\" style=\"width: 100%;\" scrolling=\"no\" title=\"css-box-model-1\" src=\"https://codepen.io/daleseo/embed/zgdzEX?height=265&theme-id=dark&default-tab=css,result\" frameborder=\"no\" allowtransparency=\"true\" allowfullscreen=\"true\">\n  See the Pen <a href='https://codepen.io/daleseo/pen/zgdzEX'>css-box-model-1</a> by Dale Seo\n  (<a href='https://codepen.io/daleseo'>@daleseo</a>) on <a href='https://codepen.io'>CodePen</a>.\n</iframe>\n<h2 id=\"실제-너비감-결정\" style=\"position:relative;\"><a href=\"#%EC%8B%A4%EC%A0%9C-%EB%84%88%EB%B9%84%EA%B0%90-%EA%B2%B0%EC%A0%95\" aria-label=\"실제 너비감 결정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>실제 너비감 결정</h2>\n<p>많은 분들이 박스 모델에서 가장 혼선을 겪는 부분이 바로 엘리먼트의 너비가 어떻게 결정이 되느냐 입니다.\n예를 들어, 위 예제에서 <code>.container</code> 엘리먼트의 <code>width</code>는 <code>400px</code>이고 <code>.box</code> 엘리먼트의 <code>width</code>는 <code>200px</code>입니다.\n그런데 얼핏봐도 초록색 영역이 오렌지색 영역의 절반 이상을 차지하고 있다는 것을 알 수 있습니다.</p>\n<p>이는 박스 모델에서 <code>width</code> 속성은 순수하게 <code>content</code> 영역의 너비만을 포함하기 때문입니다.\n따라서 실제 엘리먼트가 화면에서 차지하는 너비를 생각할 때는 <code>padding</code>과 <code>border</code>의 두께까지 고려해야합니다.\n위 예제의 경우, 초록색 영역의 너비는 실제 <code>content</code> 영역의 너비에 좌우 <code>padding</code> 값과 좌우 <code>border</code> 값을 더한 <code>250px</code>이 됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">200px + (20px * 2) + (5px * 2) = 250px</code></pre></div>\n<p>동일한 방식으로, <code>.container</code> 엘리먼트가 화면에서 자치하는 너비는 <code>402px</code>이 됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">400px + (0px * 2) + (1px * 2) = 402px</code></pre></div>\n<p>이러한 CSS의 박스 모델의 디폴트 동작 방식이 웹페이지의 레이아웃을 잡을 때는 매우 불편하게 느껴질 수 있습니다.\n왜냐하면, 부모 엘리멘트 안에 자식 엘리먼트를 빈틈없이 배치하려면 위와 같은 계산을 직접해줘야 하기 때문입니다.</p>\n<p>예를 들어, <code>.box</code> 엘리먼트를 <code>.container</code> 엘리먼트 속에 딱 맞게 배치하려면 <code>width</code> 값을 몇으로 해줘야할까요?\n우선, <code>.box</code> 엘리먼트의 <code>margin</code> 속성값을 <code>0</code>으로 설정하여, <code>.container</code> 엘리먼트와의 간격을 제거해야줘야 합니다.\n그 다음, <code>.container</code> 엘리먼트의 가용 너비에서 좌우 <code>padding</code> 값과 좌우 <code>border</code> 값을 빼줘야 합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">400px - (20px * 2) - (5px * 2) = 350px</code></pre></div>\n<p>자, 이제 <code>.box</code> 엘리먼트의 <code>width</code> 속성값을 <code>350px</code>로 수정해주면 다음과 같이 두 엘리먼트가 빈틈없이 배치됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.box</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">margin</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 350px<span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">/* 나머지 동일 */</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<iframe height=\"380\" style=\"width: 100%;\" scrolling=\"no\" title=\"css-box-model-2\" src=\"https://codepen.io/daleseo/embed/rXzzKL?height=265&theme-id=dark&default-tab=css,result\" frameborder=\"no\" allowtransparency=\"true\" allowfullscreen=\"true\">\n  See the Pen <a href='https://codepen.io/daleseo/pen/rXzzKL'>css-box-model-2</a> by Dale Seo\n  (<a href='https://codepen.io/daleseo'>@daleseo</a>) on <a href='https://codepen.io'>CodePen</a>.\n</iframe>\n<p>반응형 레이아웃에서는 <code>px</code>과 같은 절대 단위 대신에 <code>%</code>와 같은 상대 단위를 사용하기 때문에 이 문제가 더욱 심각해질 수 있습니다.\n지금까지 계산한 <code>width</code> 속상값을 다시 <code>%</code>로 환산해야된다고 생각해보세요…\n그리고 상위 컨테이너의 <code>width</code> 속성값 마저도 <code>px</code>이 아닌 <code>%</code>로 정의되어 있다고 상상해보세요…</p>\n<h2 id=\"box-sizing\" style=\"position:relative;\"><a href=\"#box-sizing\" aria-label=\"box sizing permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>box-sizing</h2>\n<p>CSS 박스 모델의 이러한 불편한 부분은 <code>box-sizing</code> 속성을 이용하면 해결을 할 수 있습니다.\n<code>box-sizing</code> 속성의 기본값은 <code>content-box</code> 인데, 위에서 설명드린 것 처럼 <code>width</code> 속성값은 순수하게 <code>content</code> 영역의 너비만을 포함합니다.\n하지만 <code>box-sizing</code> 속성값을 <code>border-box</code>로 변경해주면, <code>width</code> 속성값은 <code>content</code> 영역뿐만 아니라 <code>padding</code>과 <code>border</code>까지 포함시키게 됩니다.</p>\n<p>따라서 <code>.box</code> 컨테이너의 <code>width</code> 속성을 <code>.container</code> 컨테이너의 <code>width</code> 속성값과 동일한 <code>400px</code>로 설정하면, <code>.box</code> 컨테이너가 <code>.container</code> 컨테이너 안으로 딱 맞게 들어가게 됩니다.\n그리고 실제 <code>content</code> 영역의 너비는 <code>400px</code>에서 좌우 <code>padding</code>과 좌우 <code>border</code> 두께를 뺀 <code>350px</code>로 자동 계산됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">400px - (20px * 2) - (5px * 2) = 350px</code></pre></div>\n<p>반응형 레이아웃에서 적합하도록 절대 길이인 <code>400px</code> 대신에 상대 길이인 <code>100%</code>로 바꿔줄 수도 있습니다.\n만약에, <code>box-sizing</code> 속성이 <code>content-box</code>로 설정된 상황에서 <code>100%</code>로 설정해줬다면 <code>.box</code> 컨테이너의 너비가 <code>.container</code> 컨테이너를 초과하여 밖으로 삐져나왔을 것입니다.\n왜냐하면 <code>%</code> 단위는 부모 엘리먼트의 너비를 기준으로 하는데, 그럼 <code>content</code> 영역의 너비만 <code>400px</code>이 되고, 여기에 <code>padding</code>과 <code>border</code>를 감안하면 <code>450px</code>이 되기 때문입니다.</p>\n<p><code>box-sizing</code> 속성은 <code>width</code> 속성 뿐만 아니라 <code>height</code> 속성에도 동일한 영향을 줍니다.\n<code>height</code> 속성값이 <code>30px</code>이었는데, 여기서 상하 <code>padding</code>과 상하 <code>border</code> 두께를 빼면 <code>-10px</code>이 됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">30px - (20px * 2) - (5px * 2) = -10px (?)</code></pre></div>\n<p>높이에는 음수 개념이 없기 때문에, <code>content</code> 영역의 높이는 <code>0</code>으로 취급되고, 아래 부분 <code>padding</code>이 짤리는 현상이 발생하게 됩니다.\n따라서 <code>height</code> 속성값을 적당히 늘려줘야 하는데, <code>80px</code>로 늘려주면 <code>content</code> 영역을 위한 가용 높이를 <code>30px</code>이 확보되어 이 전과 동일한 높이감을 가질 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">80px - (20px * 2) - (5px * 2) = 30x (!)</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.box</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">box-sizing</span><span class=\"token punctuation\">:</span> border-box<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 400px<span class=\"token punctuation\">;</span> <span class=\"token comment\">/* 100% */</span>\n  <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 80px<span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">/* 나머지 동일 */</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<iframe height=\"380\" style=\"width: 100%;\" scrolling=\"no\" title=\"css-box-model-3\" src=\"https://codepen.io/daleseo/embed/mNMMNa?height=265&theme-id=dark&default-tab=css,result\" frameborder=\"no\" allowtransparency=\"true\" allowfullscreen=\"true\">\n  See the Pen <a href='https://codepen.io/daleseo/pen/mNMMNa'>css-box-model-3</a> by Dale Seo\n  (<a href='https://codepen.io/daleseo'>@daleseo</a>) on <a href='https://codepen.io'>CodePen</a>.\n</iframe>\n<p>기존에 직접 계산해야했던 <code>content</code> 영역의 너비와 높이를 자동으로 처리해주기 때문에 레이아웃이 많이 편해졌습니다.\n실제 웹 프로젝트에서는 다음과 같이 전체 선택자로 아예 <code>box-sizing</code> 속성의 기본값을 바꾸는 경우도 어렵지 않게 볼 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">*</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">box-sizing</span><span class=\"token punctuation\">:</span> border-box<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"마치면서\" style=\"position:relative;\"><a href=\"#%EB%A7%88%EC%B9%98%EB%A9%B4%EC%84%9C\" aria-label=\"마치면서 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>마치면서</h2>\n<p>지금까지 CSS에서 박스 모델의 개념과 <code>box-sizing</code> 속성을 이용해서 좀 더 편하게 레이아웃을 하는 방법에 대해서 간단히 알아보았습니다.\n대부분 브라우저의 개발자 도구는 이 박스 모델의 각 층 별로 CSS 속성 값들이 어떻게 설정/계산되었는지를 시각적으로 보여줍니다.\n따라서 그냥 웹페이지만 눈으로만 보시지 마시고, 개발자 도구를 통해 박스 모델을 정밀하게 분석해보시면 큰 도움이 되실 겁니다.</p>\n<h2 id=\"참고\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EA%B3%A0\" aria-label=\"참고 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참고</h2>\n<ul>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Learn/CSS/Introduction_to_CSS/Box_model\">MDN The box model</a></li>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/box-sizing\">MDN box-sizing</a></li>\n</ul>","timeToRead":5,"fields":{"slug":"/css-box-model/","tags":["CSS","BoxModel","padding","border","margin"]},"frontmatter":{"title":"CSS 박스 모델과 box-sizing 속성","date":"Sep 29, 2018"}},"next":{"fields":{"slug":"/css-display-inline-block/"},"frontmatter":{"title":"[CSS] display 속성: inline, block, inline-block"}}}}}