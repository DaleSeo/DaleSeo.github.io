{
    "componentChunkName": "component---src-templates-detail-template-jsx",
    "path": "/python-dataclasses/",
    "result": {"pageContext":{"previous":{"fields":{"slug":"/docker-containers/"},"frontmatter":{"title":"Docker 컨테이너 관련 커맨드 사용법"}},"node":{"html":"<div class=\"gatsby-resp-iframe-wrapper\" style=\"padding-bottom: 56.25%; position: relative; height: 0; overflow: hidden; \" > <iframe src=\"https://www.youtube.com/embed/i9MpAPp---M?si=yq5a1cJMnEukmA67\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" referrerpolicy=\"strict-origin-when-cross-origin\" allowfullscreen=\"\" style=\" position: absolute; top: 0; left: 0; width: 100%; height: 100%; \"></iframe> </div>\n<p>우리는 파이썬으로 코딩을 하면서 데이터를 담아두기 위해서 여러 가지 방법을 사용합니다.</p>\n<p>리스트(list), 튜플(tuple), 사전(dictoinary), 네임드 튜플(namedtuple), 세트(set), 프로즌 세트(frozen set)와 같은 내장 자료구조는 사용하기 간편하다는 장점이 있는데요.\n반면에 클래스(class)를 이용해서 데이터를 담아두면 type-safe해지기 때문에 프로그램 실행 중에 오류가 발생할 확률이 적어진다는 장점이 있습니다.</p>\n<p>파이썬 3.7에서 dataclasses라는 매우 매력적인 모듈이 표준 라이브러리에 추가되었는데요.\n이번 포스팅에서는 내장 자료구조처럼 편리하면서도 클래스처럼 견고한 데이터 클래스에 대해서 알아보도록 하겠습니다.</p>\n<h2 id=\"기존-방식의-클래스-작성하기\" style=\"position:relative;\"><a href=\"#%EA%B8%B0%EC%A1%B4-%EB%B0%A9%EC%8B%9D%EC%9D%98-%ED%81%B4%EB%9E%98%EC%8A%A4-%EC%9E%91%EC%84%B1%ED%95%98%EA%B8%B0\" aria-label=\"기존 방식의 클래스 작성하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>기존 방식의 클래스 작성하기</h2>\n<p>먼저 dataclasses 모듈에 등장하기 전에 우리는 어떻게 데이터를 담아두기 위한 클래스를 작성하였는지 살펴보겠습니다.\n예를 들어, 사용자 데이터를 담아두기 위한 <code>User</code> 클래스를 작성한다고 가정하려면 다음과 같은 코드가 필요할 것입니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token keyword\">from</span> datetime <span class=\"token keyword\">import</span> date\n\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">User</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>\n        self<span class=\"token punctuation\">,</span> <span class=\"token builtin\">id</span><span class=\"token punctuation\">:</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">:</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">,</span> birthdate<span class=\"token punctuation\">:</span> date<span class=\"token punctuation\">,</span> admin<span class=\"token punctuation\">:</span> <span class=\"token builtin\">bool</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span>\n    <span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span><span class=\"token builtin\">id</span> <span class=\"token operator\">=</span> <span class=\"token builtin\">id</span>\n        self<span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name\n        self<span class=\"token punctuation\">.</span>birthdate <span class=\"token operator\">=</span> birthdate\n        self<span class=\"token punctuation\">.</span>admin <span class=\"token operator\">=</span> admin</code></pre></div>\n<p>위 코드를 잘 살펴보면 <code>id</code>, <code>name</code>, <code>birthdate</code>, <code>admin</code> 각 변수가 3번씩 반복되는 것을 알 수 있습니다.\n이러한 코드를 흔히 보일러 플레이트(boiler-plate)라고도 하지요.\n만약에 필드 개수가 많은 클래스였다면 이러한 코드를 작성하는 것이 매우 지루하게 느껴졌을 것입니다.\n같은 변수명을 반복해서 타이핑하다가 자칫 오타라도 나게되면 버그로 이어질 수도 있고요. 🤪</p>\n<p>위 클래스의 인스턴스를 출력해보면 출력 결과에 필드값이 나타나지 않아서 불편합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> user <span class=\"token operator\">=</span> User<span class=\"token punctuation\">(</span><span class=\"token builtin\">id</span><span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> name<span class=\"token operator\">=</span><span class=\"token string\">\"Steve Jobs\"</span><span class=\"token punctuation\">,</span> birthdate<span class=\"token operator\">=</span>date<span class=\"token punctuation\">(</span><span class=\"token number\">1955</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">24</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> user\n<span class=\"token operator\">&lt;</span>__main__<span class=\"token punctuation\">.</span>User <span class=\"token builtin\">object</span> at <span class=\"token number\">0x105558100</span><span class=\"token operator\">></span></code></pre></div>\n<p><code>__repr__()</code> 메서드를 추가하여 필드값이 모두 출력되도록 인스턴스의 출력 형태를 바꿔보도록 하겠습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token keyword\">from</span> datetime <span class=\"token keyword\">import</span> date\n\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">User</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>\n        self<span class=\"token punctuation\">,</span> <span class=\"token builtin\">id</span><span class=\"token punctuation\">:</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">:</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">,</span> birthdate<span class=\"token punctuation\">:</span> date<span class=\"token punctuation\">,</span> admin<span class=\"token punctuation\">:</span> <span class=\"token builtin\">bool</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span>\n    <span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span><span class=\"token builtin\">id</span> <span class=\"token operator\">=</span> <span class=\"token builtin\">id</span>\n        self<span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name\n        self<span class=\"token punctuation\">.</span>birthdate <span class=\"token operator\">=</span> birthdate\n        self<span class=\"token punctuation\">.</span>admin <span class=\"token operator\">=</span> admin\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__repr__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n            self<span class=\"token punctuation\">.</span>__class__<span class=\"token punctuation\">.</span>__qualname__ <span class=\"token operator\">+</span> <span class=\"token string-interpolation\"><span class=\"token string\">f\"(id=</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>self<span class=\"token punctuation\">.</span><span class=\"token builtin\">id</span><span class=\"token conversion-option punctuation\">!r</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">, name=</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>self<span class=\"token punctuation\">.</span>name<span class=\"token conversion-option punctuation\">!r</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">, \"</span></span>\n            <span class=\"token string-interpolation\"><span class=\"token string\">f\"birthdate=</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>self<span class=\"token punctuation\">.</span>birthdate<span class=\"token conversion-option punctuation\">!r</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">, admin=</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>self<span class=\"token punctuation\">.</span>admin<span class=\"token conversion-option punctuation\">!r</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">)\"</span></span>\n        <span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> user1 <span class=\"token operator\">=</span> User<span class=\"token punctuation\">(</span><span class=\"token builtin\">id</span><span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> name<span class=\"token operator\">=</span><span class=\"token string\">\"Steve Jobs\"</span><span class=\"token punctuation\">,</span> birthdate<span class=\"token operator\">=</span>date<span class=\"token punctuation\">(</span><span class=\"token number\">1955</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">24</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> user1\nUser<span class=\"token punctuation\">(</span><span class=\"token builtin\">id</span><span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> name<span class=\"token operator\">=</span><span class=\"token string\">'Steve Jobs'</span><span class=\"token punctuation\">,</span> birthdate<span class=\"token operator\">=</span>datetime<span class=\"token punctuation\">.</span>date<span class=\"token punctuation\">(</span><span class=\"token number\">1955</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">24</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> admin<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>이번에는 이 클래스로 생성한 두 개의 인스턴스를 동등성(equality)을 체크해볼까요?</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> user1 <span class=\"token operator\">=</span> User<span class=\"token punctuation\">(</span><span class=\"token builtin\">id</span><span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> name<span class=\"token operator\">=</span><span class=\"token string\">\"Steve Jobs\"</span><span class=\"token punctuation\">,</span> birthdate<span class=\"token operator\">=</span>date<span class=\"token punctuation\">(</span><span class=\"token number\">1955</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">24</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> user2 <span class=\"token operator\">=</span> User<span class=\"token punctuation\">(</span><span class=\"token builtin\">id</span><span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> name<span class=\"token operator\">=</span><span class=\"token string\">\"Steve Jobs\"</span><span class=\"token punctuation\">,</span> birthdate<span class=\"token operator\">=</span>date<span class=\"token punctuation\">(</span><span class=\"token number\">1955</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">24</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> user1 <span class=\"token operator\">==</span> user2\n<span class=\"token boolean\">False</span></code></pre></div>\n<p>두 개의 인스턴스 간에 필드의 값이 모두 같을 때, 동등한 인스턴스로 취급하고 싶다면 <code>__eq__()</code> 메서드를 구현해줘야 합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token keyword\">from</span> datetime <span class=\"token keyword\">import</span> date\n\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">User</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>\n        self<span class=\"token punctuation\">,</span> <span class=\"token builtin\">id</span><span class=\"token punctuation\">:</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">:</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">,</span> birthdate<span class=\"token punctuation\">:</span> date<span class=\"token punctuation\">,</span> admin<span class=\"token punctuation\">:</span> <span class=\"token builtin\">bool</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span>\n    <span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span><span class=\"token builtin\">id</span> <span class=\"token operator\">=</span> <span class=\"token builtin\">id</span>\n        self<span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name\n        self<span class=\"token punctuation\">.</span>birthdate <span class=\"token operator\">=</span> birthdate\n        self<span class=\"token punctuation\">.</span>admin <span class=\"token operator\">=</span> admin\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__repr__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n            self<span class=\"token punctuation\">.</span>__class__<span class=\"token punctuation\">.</span>__qualname__ <span class=\"token operator\">+</span> <span class=\"token string-interpolation\"><span class=\"token string\">f\"(id=</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>self<span class=\"token punctuation\">.</span><span class=\"token builtin\">id</span><span class=\"token conversion-option punctuation\">!r</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">, name=</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>self<span class=\"token punctuation\">.</span>name<span class=\"token conversion-option punctuation\">!r</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">, \"</span></span>\n            <span class=\"token string-interpolation\"><span class=\"token string\">f\"birthdate=</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>self<span class=\"token punctuation\">.</span>birthdate<span class=\"token conversion-option punctuation\">!r</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">, admin=</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>self<span class=\"token punctuation\">.</span>admin<span class=\"token conversion-option punctuation\">!r</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">)\"</span></span>\n        <span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__eq__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> other<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token builtin\">bool</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> other<span class=\"token punctuation\">.</span>__class__ <span class=\"token keyword\">is</span> self<span class=\"token punctuation\">.</span>__class__<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span><span class=\"token builtin\">id</span><span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>birthdate<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>admin<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token punctuation\">(</span>\n                other<span class=\"token punctuation\">.</span><span class=\"token builtin\">id</span><span class=\"token punctuation\">,</span>\n                other<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">,</span>\n                other<span class=\"token punctuation\">.</span>birthdate<span class=\"token punctuation\">,</span>\n                other<span class=\"token punctuation\">.</span>admin<span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">False</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> user1 <span class=\"token operator\">=</span> User<span class=\"token punctuation\">(</span><span class=\"token builtin\">id</span><span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> name<span class=\"token operator\">=</span><span class=\"token string\">\"Steve Jobs\"</span><span class=\"token punctuation\">,</span> birthdate<span class=\"token operator\">=</span>date<span class=\"token punctuation\">(</span><span class=\"token number\">1955</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">24</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> user2 <span class=\"token operator\">=</span> User<span class=\"token punctuation\">(</span><span class=\"token builtin\">id</span><span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> name<span class=\"token operator\">=</span><span class=\"token string\">\"Steve Jobs\"</span><span class=\"token punctuation\">,</span> birthdate<span class=\"token operator\">=</span>date<span class=\"token punctuation\">(</span><span class=\"token number\">1955</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">24</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> user1 <span class=\"token operator\">==</span> user2\n<span class=\"token boolean\">True</span></code></pre></div>\n<p>위와 같이 이상적으로 작동하는 클래스를 작성하려면 생각했던 것 보다 많은 양의 코드가 필요하다는 것을 알 수 있는데요.\n이러한 보일러 플레이트 코드를 일일이 직접 작성하지 않아도 된다면 얼마나 좋을까요?</p>\n<blockquote>\n<p>위 코드에서 사용된 파이썬의 f-string에 대해서는 <a href=\"/python-f-strings\">관련 포스팅</a>을 참고 바랍니다.</p>\n</blockquote>\n<h2 id=\"데이터-클래스-작성하기\" style=\"position:relative;\"><a href=\"#%EB%8D%B0%EC%9D%B4%ED%84%B0-%ED%81%B4%EB%9E%98%EC%8A%A4-%EC%9E%91%EC%84%B1%ED%95%98%EA%B8%B0\" aria-label=\"데이터 클래스 작성하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>데이터 클래스 작성하기</h2>\n<p>dataclasses 모듈은 위와 같이 데이터를 담아두기 위한 클래스를 매우 적은 양의 코드로 작성하게 해줍니다.\n위 예제 코드를 이번에는 dataclasses 모듈을 이용해서 재작성 해보겠습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token keyword\">from</span> dataclasses <span class=\"token keyword\">import</span> dataclass\n<span class=\"token keyword\">from</span> datetime <span class=\"token keyword\">import</span> date\n\n\n<span class=\"token decorator annotation punctuation\">@dataclass</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">User</span><span class=\"token punctuation\">:</span>\n    <span class=\"token builtin\">id</span><span class=\"token punctuation\">:</span> <span class=\"token builtin\">int</span>\n    name<span class=\"token punctuation\">:</span> <span class=\"token builtin\">str</span>\n    birthdate<span class=\"token punctuation\">:</span> date\n    admin<span class=\"token punctuation\">:</span> <span class=\"token builtin\">bool</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span></code></pre></div>\n<p>어떤가요? 너무 간단하지 않은가요? 💅</p>\n<p>dataclasses 모듈에서 제공하는 <code>@dataclass</code> 데코레이터를 일반 클래스에 선언해주면 해당 클래스는 소위 <strong>데이터 클래스</strong>가 됩니다.</p>\n<p>데이터 클래스는 <code>__init__()</code>, <code>__repr__()</code>, <code>__eq__()</code>와 같은 메서드를 자동으로 생성해줍니다.\n따라서 이 데이터 클래스는 다음과 같이 이전 섹션에서 손수 작성했던 클래스와 동일하게 작동하는 것을 알 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> user1 <span class=\"token operator\">=</span> User<span class=\"token punctuation\">(</span><span class=\"token builtin\">id</span><span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> name<span class=\"token operator\">=</span><span class=\"token string\">\"Steve Jobs\"</span><span class=\"token punctuation\">,</span> birthdate<span class=\"token operator\">=</span>date<span class=\"token punctuation\">(</span><span class=\"token number\">1955</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">24</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> user1\nUser<span class=\"token punctuation\">(</span><span class=\"token builtin\">id</span><span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> name<span class=\"token operator\">=</span><span class=\"token string\">'Steve Jobs'</span><span class=\"token punctuation\">,</span> birthdate<span class=\"token operator\">=</span>datetime<span class=\"token punctuation\">.</span>date<span class=\"token punctuation\">(</span><span class=\"token number\">1955</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">24</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> admin<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> user2 <span class=\"token operator\">=</span> User<span class=\"token punctuation\">(</span><span class=\"token builtin\">id</span><span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> name<span class=\"token operator\">=</span><span class=\"token string\">\"Steve Jobs\"</span><span class=\"token punctuation\">,</span> birthdate<span class=\"token operator\">=</span>date<span class=\"token punctuation\">(</span><span class=\"token number\">1955</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">24</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> user1 <span class=\"token operator\">==</span> user2\n<span class=\"token boolean\">True</span></code></pre></div>\n<p>자, 지금까지 데이터 클래스의 기본 기능을 살펴봤으니, 지금부터 데이터 클래스가 제공하는 더욱 강력한 부가 기능들에 대해서 살펴보겠습니다.</p>\n<h2 id=\"불변-데이터-만들기\" style=\"position:relative;\"><a href=\"#%EB%B6%88%EB%B3%80-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EB%A7%8C%EB%93%A4%EA%B8%B0\" aria-label=\"불변 데이터 만들기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>불변 데이터 만들기</h2>\n<p>데이터 클래스는 기본적으로 담고있는 데이터를 자유 자재로 변경할 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> user <span class=\"token operator\">=</span> User<span class=\"token punctuation\">(</span><span class=\"token builtin\">id</span><span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> name<span class=\"token operator\">=</span><span class=\"token string\">\"Steve Jobs\"</span><span class=\"token punctuation\">,</span> birthdate<span class=\"token operator\">=</span>date<span class=\"token punctuation\">(</span><span class=\"token number\">1955</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">24</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> user\nUser<span class=\"token punctuation\">(</span><span class=\"token builtin\">id</span><span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> name<span class=\"token operator\">=</span><span class=\"token string\">'Steve Jobs'</span><span class=\"token punctuation\">,</span> birthdate<span class=\"token operator\">=</span>datetime<span class=\"token punctuation\">.</span>date<span class=\"token punctuation\">(</span><span class=\"token number\">1955</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">24</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> admin<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> user<span class=\"token punctuation\">.</span>admin <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> user\nUser<span class=\"token punctuation\">(</span><span class=\"token builtin\">id</span><span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> name<span class=\"token operator\">=</span><span class=\"token string\">'Steve Jobs'</span><span class=\"token punctuation\">,</span> birthdate<span class=\"token operator\">=</span>datetime<span class=\"token punctuation\">.</span>date<span class=\"token punctuation\">(</span><span class=\"token number\">1955</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">24</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> admin<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>만약에 데이터의 불변성(immutability)가 보장되어야 하는 경우라면 다음과 같이 <code>frozen</code> 옵션을 사용하면 됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token keyword\">from</span> dataclasses <span class=\"token keyword\">import</span> dataclass\n<span class=\"token keyword\">from</span> datetime <span class=\"token keyword\">import</span> date\n\n\n<span class=\"token decorator annotation punctuation\">@dataclass</span><span class=\"token punctuation\">(</span>frozen<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">User</span><span class=\"token punctuation\">:</span>\n    <span class=\"token builtin\">id</span><span class=\"token punctuation\">:</span> <span class=\"token builtin\">int</span>\n    name<span class=\"token punctuation\">:</span> <span class=\"token builtin\">str</span>\n    birthdate<span class=\"token punctuation\">:</span> date\n    admin<span class=\"token punctuation\">:</span> <span class=\"token builtin\">bool</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span></code></pre></div>\n<p>이제 데이터 클래스가 담고 있는 데이터를 변경해보려고 하면 예외가 발생하는 것을 알 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> user <span class=\"token operator\">=</span> User<span class=\"token punctuation\">(</span><span class=\"token builtin\">id</span><span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> name<span class=\"token operator\">=</span><span class=\"token string\">\"Steve Jobs\"</span><span class=\"token punctuation\">,</span> birthdate<span class=\"token operator\">=</span>date<span class=\"token punctuation\">(</span><span class=\"token number\">1955</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">24</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> user<span class=\"token punctuation\">.</span>admin <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span>\nTraceback <span class=\"token punctuation\">(</span>most recent call last<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  File <span class=\"token string\">\"&lt;stdin>\"</span><span class=\"token punctuation\">,</span> line <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">in</span> <span class=\"token operator\">&lt;</span>module<span class=\"token operator\">></span>\n  File <span class=\"token string\">\"&lt;string>\"</span><span class=\"token punctuation\">,</span> line <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">in</span> __setattr__\ndataclasses<span class=\"token punctuation\">.</span>FrozenInstanceError<span class=\"token punctuation\">:</span> cannot assign to field <span class=\"token string\">'admin'</span></code></pre></div>\n<h2 id=\"데이터-대소비교-및-정렬\" style=\"position:relative;\"><a href=\"#%EB%8D%B0%EC%9D%B4%ED%84%B0-%EB%8C%80%EC%86%8C%EB%B9%84%EA%B5%90-%EB%B0%8F-%EC%A0%95%EB%A0%AC\" aria-label=\"데이터 대소비교 및 정렬 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>데이터 대소비교 및 정렬</h2>\n<p>데이터 클래스의 인스턴스 간에 대소비교를 하려고 하면 다음과 같이 예외가 발생합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> user1 <span class=\"token operator\">&lt;</span> user2\nTraceback <span class=\"token punctuation\">(</span>most recent call last<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  File <span class=\"token string\">\"&lt;stdin>\"</span><span class=\"token punctuation\">,</span> line <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">in</span> <span class=\"token operator\">&lt;</span>module<span class=\"token operator\">></span>\nTypeError<span class=\"token punctuation\">:</span> <span class=\"token string\">'&lt;'</span> <span class=\"token keyword\">not</span> supported between instances of <span class=\"token string\">'User'</span> <span class=\"token keyword\">and</span> <span class=\"token string\">'User'</span></code></pre></div>\n<p>필드값에 따라서 데이터의 대소비교가 필요한 경우라면 <code>order</code> 옵션을 사용할 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token keyword\">from</span> dataclasses <span class=\"token keyword\">import</span> dataclass\n<span class=\"token keyword\">from</span> datetime <span class=\"token keyword\">import</span> date\n\n\n<span class=\"token decorator annotation punctuation\">@dataclass</span><span class=\"token punctuation\">(</span>order<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">User</span><span class=\"token punctuation\">:</span>\n    <span class=\"token builtin\">id</span><span class=\"token punctuation\">:</span> <span class=\"token builtin\">int</span>\n    name<span class=\"token punctuation\">:</span> <span class=\"token builtin\">str</span>\n    birthdate<span class=\"token punctuation\">:</span> date\n    admin<span class=\"token punctuation\">:</span> <span class=\"token builtin\">bool</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span></code></pre></div>\n<p>이제 데이터 클래스 간에 대소비교가 가능하고, 따라서 데이터 정렬도 가능해졌습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> user1 <span class=\"token operator\">=</span> User<span class=\"token punctuation\">(</span><span class=\"token builtin\">id</span><span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> name<span class=\"token operator\">=</span><span class=\"token string\">\"Steve Jobs\"</span><span class=\"token punctuation\">,</span> birthdate<span class=\"token operator\">=</span>date<span class=\"token punctuation\">(</span><span class=\"token number\">1955</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">24</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> user2 <span class=\"token operator\">=</span> User<span class=\"token punctuation\">(</span><span class=\"token builtin\">id</span><span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> name<span class=\"token operator\">=</span><span class=\"token string\">\"Bill Gates\"</span><span class=\"token punctuation\">,</span> birthdate<span class=\"token operator\">=</span>date<span class=\"token punctuation\">(</span><span class=\"token number\">1955</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">28</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> user1 <span class=\"token operator\">&lt;</span> user2\n<span class=\"token boolean\">True</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> user1 <span class=\"token operator\">></span> user2\n<span class=\"token boolean\">False</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token builtin\">sorted</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>user2<span class=\"token punctuation\">,</span> user1<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">[</span>User<span class=\"token punctuation\">(</span><span class=\"token builtin\">id</span><span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> name<span class=\"token operator\">=</span><span class=\"token string\">'Steve Jobs'</span><span class=\"token punctuation\">,</span> birthdate<span class=\"token operator\">=</span>datetime<span class=\"token punctuation\">.</span>date<span class=\"token punctuation\">(</span><span class=\"token number\">1955</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">24</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> admin<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> User<span class=\"token punctuation\">(</span><span class=\"token builtin\">id</span><span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> name<span class=\"token operator\">=</span><span class=\"token string\">'Bill Gates'</span><span class=\"token punctuation\">,</span> birthdate<span class=\"token operator\">=</span>datetime<span class=\"token punctuation\">.</span>date<span class=\"token punctuation\">(</span><span class=\"token number\">1955</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">28</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> admin<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span></code></pre></div>\n<blockquote>\n<p>파이썬의 sorted() 내장 함수로 데이터 정렬하는 방법에 대해서는 <a href=\"/python-sorted/\">별도 포스팅</a>에서 자세히 다루고 있습니다.</p>\n</blockquote>\n<h2 id=\"세트나-사전에서-사용하기\" style=\"position:relative;\"><a href=\"#%EC%84%B8%ED%8A%B8%EB%82%98-%EC%82%AC%EC%A0%84%EC%97%90%EC%84%9C-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0\" aria-label=\"세트나 사전에서 사용하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>세트나 사전에서 사용하기</h2>\n<p>데이터 클래스의 인스턴스는 기본적으로 hashable하지 않기 때문에, 세트(set)의 값이나 사전(dictionary)의 키로 사용을 할 수 없습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token builtin\">set</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>user1<span class=\"token punctuation\">,</span> user2<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nTraceback <span class=\"token punctuation\">(</span>most recent call last<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  File <span class=\"token string\">\"&lt;stdin>\"</span><span class=\"token punctuation\">,</span> line <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">in</span> <span class=\"token operator\">&lt;</span>module<span class=\"token operator\">></span>\nTypeError<span class=\"token punctuation\">:</span> unhashable <span class=\"token builtin\">type</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'User'</span></code></pre></div>\n<p>데이터 클래스의 인스턴스를 hashable하게 만들고 싶다면, <code>unsafe_hash</code> 옵션을 사용하면 됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token keyword\">from</span> dataclasses <span class=\"token keyword\">import</span> dataclass\n<span class=\"token keyword\">from</span> datetime <span class=\"token keyword\">import</span> date\n\n\n<span class=\"token decorator annotation punctuation\">@dataclass</span><span class=\"token punctuation\">(</span>unsafe_hash<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">User</span><span class=\"token punctuation\">:</span>\n    <span class=\"token builtin\">id</span><span class=\"token punctuation\">:</span> <span class=\"token builtin\">int</span>\n    name<span class=\"token punctuation\">:</span> <span class=\"token builtin\">str</span>\n    birthdate<span class=\"token punctuation\">:</span> date\n    admin<span class=\"token punctuation\">:</span> <span class=\"token builtin\">bool</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span></code></pre></div>\n<p>이제 세트를 이용해서 중복 데이터를 제거할 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> user1 <span class=\"token operator\">=</span> User<span class=\"token punctuation\">(</span><span class=\"token builtin\">id</span><span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> name<span class=\"token operator\">=</span><span class=\"token string\">\"Steve Jobs\"</span><span class=\"token punctuation\">,</span> birthdate<span class=\"token operator\">=</span>date<span class=\"token punctuation\">(</span><span class=\"token number\">1955</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">24</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> user2 <span class=\"token operator\">=</span> User<span class=\"token punctuation\">(</span><span class=\"token builtin\">id</span><span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> name<span class=\"token operator\">=</span><span class=\"token string\">\"Bill Gates\"</span><span class=\"token punctuation\">,</span> birthdate<span class=\"token operator\">=</span>date<span class=\"token punctuation\">(</span><span class=\"token number\">1955</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">28</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> user3 <span class=\"token operator\">=</span> User<span class=\"token punctuation\">(</span><span class=\"token builtin\">id</span><span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> name<span class=\"token operator\">=</span><span class=\"token string\">\"Steve Jobs\"</span><span class=\"token punctuation\">,</span> birthdate<span class=\"token operator\">=</span>date<span class=\"token punctuation\">(</span><span class=\"token number\">1955</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">24</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> user4 <span class=\"token operator\">=</span> User<span class=\"token punctuation\">(</span><span class=\"token builtin\">id</span><span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> name<span class=\"token operator\">=</span><span class=\"token string\">\"Bill Gates\"</span><span class=\"token punctuation\">,</span> birthdate<span class=\"token operator\">=</span>date<span class=\"token punctuation\">(</span><span class=\"token number\">1955</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">28</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token builtin\">set</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>user1<span class=\"token punctuation\">,</span> user2<span class=\"token punctuation\">,</span> user3<span class=\"token punctuation\">,</span> user4<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>User<span class=\"token punctuation\">(</span><span class=\"token builtin\">id</span><span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> name<span class=\"token operator\">=</span><span class=\"token string\">'Bill Gates'</span><span class=\"token punctuation\">,</span> birthdate<span class=\"token operator\">=</span>datetime<span class=\"token punctuation\">.</span>date<span class=\"token punctuation\">(</span><span class=\"token number\">1955</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">28</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> admin<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> User<span class=\"token punctuation\">(</span><span class=\"token builtin\">id</span><span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> name<span class=\"token operator\">=</span><span class=\"token string\">'Steve Jobs'</span><span class=\"token punctuation\">,</span> birthdate<span class=\"token operator\">=</span>datetime<span class=\"token punctuation\">.</span>date<span class=\"token punctuation\">(</span><span class=\"token number\">1955</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">24</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> admin<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></code></pre></div>\n<blockquote>\n<p>파이썬에서 집합(set)를 사용하는 자세한 방법에 대해서는 <a href=\"/python-set/\">관련 포스팅</a>을 참고 바랍니다.</p>\n</blockquote>\n<h2 id=\"데이터-클래스-사용-시-주의-사항\" style=\"position:relative;\"><a href=\"#%EB%8D%B0%EC%9D%B4%ED%84%B0-%ED%81%B4%EB%9E%98%EC%8A%A4-%EC%82%AC%EC%9A%A9-%EC%8B%9C-%EC%A3%BC%EC%9D%98-%EC%82%AC%ED%95%AD\" aria-label=\"데이터 클래스 사용 시 주의 사항 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>데이터 클래스 사용 시 주의 사항</h2>\n<p>데이터 클래스를 사용할 때 흔히 하는 실수가 잇는데요.\n바로 list와 같은 가변 데이터 타입의 필드에 기본값을 할당해주는 것입니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token keyword\">from</span> dataclasses <span class=\"token keyword\">import</span> dataclass\n<span class=\"token keyword\">from</span> datetime <span class=\"token keyword\">import</span> date\n\n\n<span class=\"token decorator annotation punctuation\">@dataclass</span><span class=\"token punctuation\">(</span>unsafe_hash<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">User</span><span class=\"token punctuation\">:</span>\n    <span class=\"token builtin\">id</span><span class=\"token punctuation\">:</span> <span class=\"token builtin\">int</span>\n    name<span class=\"token punctuation\">:</span> <span class=\"token builtin\">str</span>\n    birthdate<span class=\"token punctuation\">:</span> date\n    admin<span class=\"token punctuation\">:</span> <span class=\"token builtin\">bool</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span>\n    friends<span class=\"token punctuation\">:</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></code></pre></div>\n<p>필드의 기본값은 서로 다른 인스턴스 간에 공유가 되기 때문에 이런 식으로 기본값 할당이 허용되지 않습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\">ValueError<span class=\"token punctuation\">:</span> mutable default <span class=\"token operator\">&lt;</span><span class=\"token keyword\">class</span> <span class=\"token string\">'list'</span><span class=\"token operator\">></span> <span class=\"token keyword\">for</span> field friends <span class=\"token keyword\">is</span> <span class=\"token keyword\">not</span> allowed<span class=\"token punctuation\">:</span> use default_factory</code></pre></div>\n<p>이 문제를 해결하려면 dataclasses 모듈에서 제공하는 <code>filed</code> 함수의 <code>default_factory</code> 옵션을 사용해서 매번 새로운 리스트가 생성될 수 있도록 해줘야 합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token keyword\">from</span> dataclasses <span class=\"token keyword\">import</span> dataclass<span class=\"token punctuation\">,</span> field\n<span class=\"token keyword\">from</span> datetime <span class=\"token keyword\">import</span> date\n\n\n<span class=\"token decorator annotation punctuation\">@dataclass</span><span class=\"token punctuation\">(</span>unsafe_hash<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">User</span><span class=\"token punctuation\">:</span>\n    <span class=\"token builtin\">id</span><span class=\"token punctuation\">:</span> <span class=\"token builtin\">int</span>\n    name<span class=\"token punctuation\">:</span> <span class=\"token builtin\">str</span>\n    birthdate<span class=\"token punctuation\">:</span> date\n    admin<span class=\"token punctuation\">:</span> <span class=\"token builtin\">bool</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span>\n    friends<span class=\"token punctuation\">:</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> field<span class=\"token punctuation\">(</span>default_factory<span class=\"token operator\">=</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> user1 <span class=\"token operator\">=</span> User<span class=\"token punctuation\">(</span><span class=\"token builtin\">id</span><span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> name<span class=\"token operator\">=</span><span class=\"token string\">\"Steve Jobs\"</span><span class=\"token punctuation\">,</span> birthdate<span class=\"token operator\">=</span>date<span class=\"token punctuation\">(</span><span class=\"token number\">1955</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">24</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> user1<span class=\"token punctuation\">.</span>friends\n<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> user1<span class=\"token punctuation\">.</span>friends<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> user1<span class=\"token punctuation\">.</span>friends\n<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span></code></pre></div>\n<h2 id=\"전체-코드\" style=\"position:relative;\"><a href=\"#%EC%A0%84%EC%B2%B4-%EC%BD%94%EB%93%9C\" aria-label=\"전체 코드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>전체 코드</h2>\n<p>본 포스팅에서 제가 작성한 전체 코드는 아래에서 직접 확인하고 실행해보실 수 있습니다.</p>\n<p><a href=\"https://dales.link/c50\">https://dales.link/c50</a></p>\n<h2 id=\"마치면서\" style=\"position:relative;\"><a href=\"#%EB%A7%88%EC%B9%98%EB%A9%B4%EC%84%9C\" aria-label=\"마치면서 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>마치면서</h2>\n<p>지금까지 파이썬의 dataclasses 내장 모듈을 이용해서 데이터 클래스를 어떻게 작성하고 사용하는지 알아보았습니다.\n데이터 클래스를 잘 활용하셔서 보일러 플레이트 코드를 작성할 시간을 아끼고, 그 시간에 좀 더 비지니스에 의미있는 코드를 작성하실 수 있으셨으면 좋겠습니다.</p>\n<p>파이썬의 dataclasses 내장 모듈에 대한 더 자세한 내용은 <a href=\"https://docs.python.org/3/library/dataclasses.html\">공식 문서</a>를 참고 바라겠습니다.\ndataclasses 모듈이 마음에 드셨다면 이보다 좀 더 강력한 기능을 제공하는 <a href=\"https://pypi.org/project/attrs/\">attrs</a>이라는 패키지도 있으니 참고바라겠습니다.</p>","timeToRead":8,"fields":{"slug":"/python-dataclasses/","tags":["Python","dataclasses","decorator"]},"frontmatter":{"title":"파이썬의 데이터 클래스 사용법 (dataclasses 모듈)","date":"Apr 21, 2020"}},"next":{"fields":{"slug":"/docker-run/"},"frontmatter":{"title":"docker run 커맨드 사용법"}}}},
    "staticQueryHashes": ["2168229929","2362167539","3056348342"]}