{
    "componentChunkName": "component---src-templates-detail-template-jsx",
    "path": "/css-nesting/",
    "result": {"pageContext":{"previous":null,"node":{"html":"<p>CSS 네스팅(Nesting)은 어떤 선택자 내부에 다른 선택자를 넣어서 계층적인 스타일이 가능케하는 문법입니다.\n예전에는 SCSS, SASS, LESS와 같은 CSS 전처리기를 사용해야 쓸 수 있던 기능이 었지만, 최근에는 CSS 표준에도 CSS Nesting이 정식으로 도입되어 Vanilla CSS에서도 사용이 가능해졌습니다.</p>\n<p>이번 포스팅에서는 CSS 네스팅을 왜 사용해야하고 어떻게 사용하는지에 대해서 알아보겠습니다.</p>\n<blockquote>\n<p>본 포스팅은 CSS 선택자(selector)와 결합자(combinator)에 대한 기본적인 이해가 필요합니다. 관련해서는 제가 별도의 포스팅에서 다루고 있으니 아래 링크를 참조 바랍니다.</p>\n<ul>\n<li><a href=\"/css-selectors/\">CSS 기본 선택자 (selector)</a></li>\n<li><a href=\"/css-combinators/\">CSS 결합자(combinator)로 선택자 조합하기</a></li>\n</ul>\n</blockquote>\n<h2 id=\"css-nesting을-쓰면-뭐가-좋을까\" style=\"position:relative;\"><a href=\"#css-nesting%EC%9D%84-%EC%93%B0%EB%A9%B4-%EB%AD%90%EA%B0%80-%EC%A2%8B%EC%9D%84%EA%B9%8C\" aria-label=\"css nesting을 쓰면 뭐가 좋을까 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>CSS Nesting을 쓰면 뭐가 좋을까?</h2>\n<p>기존에 CSS Nesting을 사용하지 않았을 때 어떤 문제가 있었고, CSS Nesting이 어떻게 이러한 문제를 해결해주는지 간단히 짚고 넘어가면 좋을 것 같아요.</p>\n<p>아래는 CSS Nesting이 지원되지 않던 시절에 웹사이트의 네비게이션을 스타일하는 코드입니다.</p>\n<div class=\"gatsby-highlight has-highlighted-lines\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">nav</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">/* 네비게이션 스타일 */</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">nav.light</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">/* 라이트 모드 네비게이션 스타일 */</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">nav.dark</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">/* 다크 모드 네비게이션 스타일 */</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">nav > li</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">/* 네비게이션 안에 있는 리스트 스타일 */</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"gatsby-highlight-code-line\"><span class=\"token selector\">nav > li > ul</span> <span class=\"token punctuation\">{</span></span>  <span class=\"token comment\">/* 네비게이션 안에 있는 리스트 안에 있는 일반 아이템 스타일 */</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"gatsby-highlight-code-line\"><span class=\"token selector\">nav > li > ul.new</span> <span class=\"token punctuation\">{</span></span>  <span class=\"token comment\">/* 네비게이션 안에 있는 리스트 안에 있는 새로운 아이템 스타일 */</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">nav a</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">/* 네비게이션 안에 있는 링크 스타일 */</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">nav a:visited</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">/* 네비게이션 안에 있는 링크의 방문 상태 스타일 */</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">nav a:focus,</span>\n<span class=\"token selector\">nav a:hover</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">/* 네비게이션 안에 있는 링크의 포커스, 호버 상태 스타일 */</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>선택자들 간에 중복되는 부분이 참 많다는 것을 느낄 수 있으실텐데요.</p>\n<p>예를 들어, 일반 아이템(<code>ul</code>)과 새로운 아이템의(<code>ul.new</code>) 선택자 간에는 <code>.new</code>가 마지막에 붙었다는 차이 밖에 없지만 동일한 부모 선택자(<code>nav > li > </code>)를 앞에 붙여줘야 합니다.</p>\n<p>동일한 스타일을 이번에는 CSS Nesting을 적용하여 현대적인 스타일로 다시 작성해보겠습니다.</p>\n<div class=\"gatsby-highlight has-highlighted-lines\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">nav</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">/* 네비게이션 스타일 */</span>\n\n  <span class=\"token selector\">&amp;.light</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">/* 라이트 모드 네비게이션 스타일 */</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token selector\">&amp;.dark</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">/* 다크 모드 네비게이션 스타일 */</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token selector\">> li</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">/* 네비게이션 안에 있는 리스트 스타일 */</span>\n\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token selector\">> ul</span> <span class=\"token punctuation\">{</span></span>      <span class=\"token comment\">/* 네비게이션 안에 있는 리스트 안에 있는 일반 아이템 스타일 */</span>\n\n<span class=\"gatsby-highlight-code-line\">      <span class=\"token selector\">&amp;.new</span> <span class=\"token punctuation\">{</span></span>        <span class=\"token comment\">/* 네비게이션 안에 있는 리스트 안에 있는 새로운 아이템 스타일 */</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token selector\">a</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">/* 네비게이션 안에 있는 링크 스타일 */</span>\n\n    <span class=\"token selector\">&amp;:visited</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">/* 네비게이션 안에 있는 링크의 방문 상태 스타일 */</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token selector\">&amp;:focus,</span>\n<span class=\"token selector\">    &amp;:hover</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">/* 네비게이션 안에 있는 링크의 포커스, 호버 상태 스타일 */</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>어떤가요? 🤩</p>\n<p>선택자 간에 중복이 사라진 것은 물론이고, 스타일 계층이 한 눈에 파악이 되지 않나요?\nCSS Nesting의 주요 장점에 대해서 간단히 정리를 해보면요.</p>\n<ul>\n<li>동일한 선택자를 반복할 필요가 없어집니다.</li>\n<li>관련있는 스타일이 가까운 곳에 묶어 집니다.</li>\n<li>CSS 스타일과 HTML 마크업이 비슷한 계층적인 구조를 갖게 됩니다.</li>\n<li>스타일을 찾거나 편집, 삭제하는 것이 수월해 집니다.</li>\n<li>불필요한 클래스 사용을 줄이는데 도움이 됩니다.</li>\n</ul>\n<p>위와 같은 장점들로 인해서 스타일 버그가 얼마나 줄고, 개발자 경험이 얼마나 향상되고, 유지보수가 얼마나 쉬워지는지는… 구구절절 말씀 안 드려도 되겠죠? 😉</p>\n<p>마지막 장점에 대해서만 부연 설명드리자면, CSS Nesting가 지원되지 않을 때는 HTML 코드에 클래스를 과도하기 사용하는 관행이 있었습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>article</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>question<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>header</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>question__header<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h3</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>question__header__heading<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>질문<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h3</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>header</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>question__body<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>CSS Nesting을 써보셨나요?<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>footer</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>question__footer<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>btn secondary<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>아니오<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>btn primary<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>네<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>footer</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>article</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>그리고 CSS 코드에서 원하는 요소를 선택하기 위해서 클래스 선택자를 주로 사용하였죠.</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.question__header__heading</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">/* 어떤 스타일 */</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.question__footer .btn.secondary</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">/* 어떤 스타일 */</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>반면에 CSS Nesting을 사용하면 모든 요소에 일일이 클래스를 붙여주지 않아도 스타일하고 싶은 요소로 범위를 좁혀나갈 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">article</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token selector\">> header</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token selector\">h3</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">/* 어떤 스타일 */</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token selector\">> footer</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token selector\">button.btn.secondary</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">/* 어떤 스타일 */</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>따라서 스타일 목적으로 HTML 요소에 클래스를 붙일 이유를 덜 느끼고 되고, 자연스럽게 클래스 작명에 대한 고민이나 스트레스도 사라지게 됩니다.</p>\n<p>자, 그럼 지금부터 본격적으로 CSS Nesting을 사용하는 방법을 알아보겠습니다.</p>\n<h2 id=\"기본-선택자에-활용\" style=\"position:relative;\"><a href=\"#%EA%B8%B0%EB%B3%B8-%EC%84%A0%ED%83%9D%EC%9E%90%EC%97%90-%ED%99%9C%EC%9A%A9\" aria-label=\"기본 선택자에 활용 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>기본 선택자에 활용</h2>\n<p>선택자로 다른 선택자를 감싸게 되면 내부에 있는 선택자는 외부의 선택자의 문맥 안에서 적용이 됩니다.\n다시 말해서, 내부 선택자는 외부 선택자의 자식 요소를 선택할 수 있게 됩니다.</p>\n<p>예를 들어, <code>&#x3C;section></code> 요소의 자식인 <code>&#x3C;header></code>의 후손인 <code>&#x3C;h1></code>과 <code>&#x3C;h2></code> 요소를 다음과 같이 선택할 수 있습니다.\n여기서 <code>></code> 기호는 자식 결합자(Child Combinator)이고, 공백 기호는 후손 결합자(Descendant Combinator)입니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">section > header h1,\nsection > header h2</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">/* 어떤 스타일 */</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>이 코드를 그대로 CSS Nesting으로 재작성해보면 다음과 같은 모습이 됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">section</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token selector\">> header</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token selector\">h1,\n    h2</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">/* 어떤 스타일 */</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>동일한 코드를 <code>&#x26;</code> 기호를 사용하여 좀 더 명시적으로 작성할 수도 있습니다.\n<code>&#x26;</code> 기호는 요소 자신을 가리킵니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">section</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token selector\">&amp; > header</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token selector\">&amp; h1,\n    &amp; h2</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">/* 어떤 스타일 */</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>처음에 CSS Nesting 기능이 표준으로 논의가 되었을 때는 가급적 <code>&#x26;</code> 기호를 쓰라고 권장했습니다.\n그럼에도 불구하고 많은 웹 개발자들이 <code>&#x26;</code> 기호가 반드시 필요한 상황이 아니면 생략하는 성향을 보이는 것 같아요.\nSCSS, SASS, LESS와 같은 CSS 전처리기를 사용했을 때 <code>&#x26;</code> 기호를 잘 쓰지 않았던 습관이 남아있기 때문일 것입니다.</p>\n<p><code>&#x26;</code> 기호는 스타일 목적에 다라서 매우 유용하게 쓰이기도 합니다.\n특히 하나의 요소가 여러 클래스나 속성에 대해서 복잡하게 스타일이 되야할 때 유용합니다.</p>\n<p>예를 들어, <code>&#x3C;input></code> 요소를 CSS Nesting 없이는 보통 아래와 같이 스타일하죠.</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">input.loading</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">/* 어떤 스타일 */</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">input.error</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">/* 어떤 스타일 */</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">input[disabled]</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">/* 어떤 스타일 */</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">input[disabled]</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">/* 어떤 스타일 */</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">input[type=\"text\"]</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">/* 어떤 스타일 */</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">input[type=\"radio\"]</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">/* 어떤 스타일 */</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">input[type=\"checkbox\"]</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">/* 어떤 스타일 */</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>CSS Nesting을 적용하면 다음과 같이 <code>&#x26;</code> 기호가 많이 필요하게 됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">input</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">/* 어떤 스타일 */</span>\n\n  <span class=\"token selector\">&amp;.error</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">/* 어떤 스타일 */</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token selector\">&amp;.loading</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">/* 어떤 스타일 */</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token selector\">&amp;[disabled]</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">/* 어떤 스타일 */</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token selector\">&amp;[type=\"text\"]</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">/* 어떤 스타일 */</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token selector\">&amp;[type=\"radio\"]</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">/* 어떤 스타일 */</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token selector\">&amp;[type=\"checkbox\"]</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">/* 어떤 스타일 */</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>만약에 <code>&#x26;</code> 기호를 생략한다면 엉뚱하게 자식 요소에게 스타일이 적용될 것입니다.\n선택자를 중첩할 때, 자신을 위한 스타일인지 자식을 위한 스타일인지 한 번 더 생각해보시면 도움이 됩니다.</p>\n<h2 id=\"의사-클래스에-활용\" style=\"position:relative;\"><a href=\"#%EC%9D%98%EC%82%AC-%ED%81%B4%EB%9E%98%EC%8A%A4%EC%97%90-%ED%99%9C%EC%9A%A9\" aria-label=\"의사 클래스에 활용 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>의사 클래스에 활용</h2>\n<p>CSS Nesting으로 의사 클래스를 감싸줄 때는 <code>&#x26;</code> 기호를 더 자주 볼 수 있는데요.\n의사 클래스는 자식이 아닌 자신의 상태를 스타일하기 위해서 사용되는 경우가 많기 때문입니다.</p>\n<p>예를 들어, <code>primary</code> 클래스와 <code>secondary</code> 클래스가 붙은 <code>&#x3C;a></code> 요소의 4가지 상태에 대한 스타일을 CSS Nesting없이 작성해보겠습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">a.primary</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">font-weight</span><span class=\"token punctuation\">:</span> 500<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> <span class=\"token function\">var</span><span class=\"token punctuation\">(</span>--text-100<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> <span class=\"token function\">var</span><span class=\"token punctuation\">(</span>--bg-400<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">a.primary:focus</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">outline</span><span class=\"token punctuation\">:</span> 3px solid <span class=\"token function\">var</span><span class=\"token punctuation\">(</span>--primary<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token property\">outline-offset</span><span class=\"token punctuation\">:</span> 2px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">border-radius</span><span class=\"token punctuation\">:</span> 10px<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">a.primary:focus-visible</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">outline</span><span class=\"token punctuation\">:</span> 3px solid <span class=\"token function\">var</span><span class=\"token punctuation\">(</span>--secondary<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token property\">outline-offset</span><span class=\"token punctuation\">:</span> 2px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">border-radius</span><span class=\"token punctuation\">:</span> 10px<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">a.primary:hover</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">font-weight</span><span class=\"token punctuation\">:</span> <span class=\"token function\">var</span><span class=\"token punctuation\">(</span>--font-weight-bold<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> <span class=\"token function\">var</span><span class=\"token punctuation\">(</span>--bg-300<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">a.primary:active</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> <span class=\"token function\">var</span><span class=\"token punctuation\">(</span>--text-300<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> <span class=\"token function\">var</span><span class=\"token punctuation\">(</span>--bg-900<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">a.secondary</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">/* 어떤 스타일 */</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">a.secondary:focus</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">/* 어떤 스타일 */</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">a.secondary:focus-visible</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">/* 어떤 스타일 */</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">a.secondary:hover</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">/* 어떤 스타일 */</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">a.secondary:active</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">/* 어떤 스타일 */</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>CSS Nesting을 적용하면 클래스 별로 스타일을 묶어줄 수 있습니다.\n<code>primary</code> 클래스가 붙은 <code>&#x3C;a></code> 요소에 대한 스타일과 <code>secondary</code> 클래스가 붙은 <code>&#x3C;a></code> 요소에 대한 스타일이 서로 격리되어 간에 구분이 참 쉬어지죠?</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">a.primary</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">font-weight</span><span class=\"token punctuation\">:</span> 500<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> <span class=\"token function\">var</span><span class=\"token punctuation\">(</span>--text-100<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> <span class=\"token function\">var</span><span class=\"token punctuation\">(</span>--bg-400<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token selector\">&amp;:focus</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">outline</span><span class=\"token punctuation\">:</span> 3px solid <span class=\"token function\">var</span><span class=\"token punctuation\">(</span>--primary<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token property\">outline-offset</span><span class=\"token punctuation\">:</span> 2px<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">border-radius</span><span class=\"token punctuation\">:</span> 10px<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token selector\">&amp;:focus-visible</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">outline</span><span class=\"token punctuation\">:</span> 3px solid <span class=\"token function\">var</span><span class=\"token punctuation\">(</span>--secondary<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token property\">outline-offset</span><span class=\"token punctuation\">:</span> 2px<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">border-radius</span><span class=\"token punctuation\">:</span> 10px<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token selector\">&amp;:hover</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">font-weight</span><span class=\"token punctuation\">:</span> <span class=\"token function\">var</span><span class=\"token punctuation\">(</span>--font-weight-bold<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> <span class=\"token function\">var</span><span class=\"token punctuation\">(</span>--bg-300<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token selector\">&amp;:active</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> <span class=\"token function\">var</span><span class=\"token punctuation\">(</span>--text-300<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> <span class=\"token function\">var</span><span class=\"token punctuation\">(</span>--bg-900<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">a.secondary</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">/* 어떤 스타일 */</span>\n\n  <span class=\"token selector\">&amp;:focus</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">/* 어떤 스타일 */</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token selector\">&amp;:focus-visible</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">/* 어떤 스타일 */</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token selector\">&amp;:hover</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">/* 어떤 스타일 */</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token selector\">&amp;:active</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">/* 어떤 스타일 */</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"미디어-쿼리에-활용\" style=\"position:relative;\"><a href=\"#%EB%AF%B8%EB%94%94%EC%96%B4-%EC%BF%BC%EB%A6%AC%EC%97%90-%ED%99%9C%EC%9A%A9\" aria-label=\"미디어 쿼리에 활용 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>미디어 쿼리에 활용</h2>\n<p>CSS Nesting은 <a href=\"/css-media-queries/\">미디어 쿼리</a>나 컨테이너 쿼리를 사용할 때도 빛을 발휘합니다.</p>\n<p>예를 들어, 반응형(Responsive) 글꼴을 CSS Nesting 없이 스타일하면 보통 아래와 같이 작성을 하는데요.</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">h1</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> 2rem<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">h2</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> 1.5rem<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">p</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> 1rem<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token atrule\"><span class=\"token rule\">@media</span> <span class=\"token punctuation\">(</span><span class=\"token property\">min-width</span><span class=\"token punctuation\">:</span> 480px<span class=\"token punctuation\">)</span></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token selector\">h1</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> 2.75rem<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token selector\">h2</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> 2rem<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token selector\">p</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> 1.25rem<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token atrule\"><span class=\"token rule\">@media</span> <span class=\"token punctuation\">(</span><span class=\"token property\">min-width</span><span class=\"token punctuation\">:</span> 1024px<span class=\"token punctuation\">)</span></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token selector\">h1</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> 3.5rem<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token selector\">h2</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> 2.5rem<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token selector\">p</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> 1.5rem<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>여기서 한번 <code>&#x3C;h2></code> 요소에 대한 스타일만 찾아보시겠어요?\n화면 폭에 따른 스타일이 흩어져 있어서 찾기가 좀 불편하실 거에요.\n실제 프로젝트에서는 이보다 스타일이 훨씬 더 많기 때문에 동일한 HTML 요소에 대한 스타일을 찾는 게 더 고통스러울 수 있죠.</p>\n<p>이번에는 CSS Nesting을 활용하여 미디어 쿼리를 각 요소에 대한 선택자 속으로 넣어보겠습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">h1</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> 2rem<span class=\"token punctuation\">;</span>\n\n  <span class=\"token atrule\"><span class=\"token rule\">@media</span> <span class=\"token punctuation\">(</span><span class=\"token property\">min-width</span><span class=\"token punctuation\">:</span> 480px<span class=\"token punctuation\">)</span></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> 2.75rem<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token atrule\"><span class=\"token rule\">@media</span> <span class=\"token punctuation\">(</span><span class=\"token property\">min-width</span><span class=\"token punctuation\">:</span> 1024px<span class=\"token punctuation\">)</span></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> 3.5rem<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">h2</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> 1.5rem<span class=\"token punctuation\">;</span>\n\n  <span class=\"token atrule\"><span class=\"token rule\">@media</span> <span class=\"token punctuation\">(</span><span class=\"token property\">min-width</span><span class=\"token punctuation\">:</span> 480px<span class=\"token punctuation\">)</span></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> 2rem<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token atrule\"><span class=\"token rule\">@media</span> <span class=\"token punctuation\">(</span><span class=\"token property\">min-width</span><span class=\"token punctuation\">:</span> 1024px<span class=\"token punctuation\">)</span></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> 2.5rem<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">p</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> 1rem<span class=\"token punctuation\">;</span>\n\n  <span class=\"token atrule\"><span class=\"token rule\">@media</span> <span class=\"token punctuation\">(</span><span class=\"token property\">min-width</span><span class=\"token punctuation\">:</span> 480px<span class=\"token punctuation\">)</span></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> 1.25rem<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token atrule\"><span class=\"token rule\">@media</span> <span class=\"token punctuation\">(</span><span class=\"token property\">min-width</span><span class=\"token punctuation\">:</span> 1024px<span class=\"token punctuation\">)</span></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> 1.5rem<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>어떤가요? 각 HTML 요소의 글꼴 크기가 화면 폭에 따라서 어떻게 변하는지 훨씬 직관적으로 파악이 되죠?</p>\n<p>우리 개발자들은 화면 폭에 따라 사고하기 보다는 요소 별로 사고하는 경우가 많기 때문에,\n이러한 방식으로 스타일을 묶어 두면 스타일 작성 뿐만 아니라 디버깅이 훨씬 수월해집니다.</p>\n<h2 id=\"실전-예제\" style=\"position:relative;\"><a href=\"#%EC%8B%A4%EC%A0%84-%EC%98%88%EC%A0%9C\" aria-label=\"실전 예제 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>실전 예제</h2>\n<p>좀 더 현실에서 볼 법한 예제를 제공해드리기 위해서, CSS Nesting을 활용하여 웹에서 쉽게 볼 수 있는 4가지 종류(기본, 성공, 오류, 경고)의 버튼을 스타일해보았습니다.</p>\n<iframe height=\"300\" style=\"width: 100%;\" scrolling=\"no\" title=\"css-nesting\" src=\"https://codepen.io/daleseo/embed/jOjMyYb?default-tab=css%2Cresult\" frameborder=\"no\" loading=\"lazy\" allowtransparency=\"true\" allowfullscreen=\"true\">\n  See the Pen <a href=\"https://codepen.io/daleseo/pen/jOjMyYb\">\n  css-nesting</a> by Dale Seo (<a href=\"https://codepen.io/daleseo\">@daleseo</a>)\n  on <a href=\"https://codepen.io\">CodePen</a>.\n</iframe>\n<h2 id=\"마치면서\" style=\"position:relative;\"><a href=\"#%EB%A7%88%EC%B9%98%EB%A9%B4%EC%84%9C\" aria-label=\"마치면서 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>마치면서</h2>\n<p>지금까지 CSS Nesting의 기본 사용법을 알아보고 다양한 상황에서 어떻게 실제 스타일에 활용할 수 있는지 배워보았습니다.</p>\n<p>Nesting을 CSS 자체적으로 지원되기를 기다리던 개발자들이 너무나 많았으며, SCSS나 SASS와 같은 CSS 전처리기를 가장 큰 이유 중 하나 였습니다.\n그래서 개인적으로 <a href=\"/css-variables/\">CSS Variables</a>과 더불이 CSS Nesting이 최근에 CSS에 있었던 가장 영향력이 큰 변화라고 생각합니다.</p>\n<p>읽기 편하고 유지 보수가 쉬운 현대적인 CSS를 작성하시는데 본 포스팅이 도움이 되었으면 좋겠습니다.</p>","timeToRead":7,"fields":{"slug":"/css-nesting/","tags":["HTML","CSS","nesting","selectors"]},"frontmatter":{"title":"CSS Nesting으로 선택자 중첩하기","date":"Jul 24, 2024"}},"next":{"fields":{"slug":"/vite/"},"frontmatter":{"title":"Vite 처음 시작하기"}}}},
    "staticQueryHashes": ["2168229929","2362167539","3056348342"]}