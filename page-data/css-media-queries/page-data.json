{"componentChunkName":"component---src-templates-detail-template-jsx","path":"/css-media-queries/","result":{"pageContext":{"previous":{"fields":{"slug":"/css-inheritance/"},"frontmatter":{"title":"CSS의 상속(Inheritance)"}},"node":{"html":"<div class=\"gatsby-resp-iframe-wrapper\" style=\"padding-bottom: 56.25%; position: relative; height: 0; overflow: hidden; \" > <iframe src=\"https://www.youtube.com/embed/xMhG1Easy2c\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"\" style=\" position: absolute; top: 0; left: 0; width: 100%; height: 100%; \"></iframe> </div>\n<p>다양한 디바이스들이 웹브라우징을 지원하면서 뷰포트(viewport) 너비에 따라 유연하게 컨텐츠를 배치하는 기술이 점점 중요해지고 있습니다.\n이번 포스팅에서는 이러한 반응형 웹디자인의 기본이되는 CSS의 미디어 쿼리(Media Query)에 대해서 살펴보겠습니다.</p>\n<h2 id=\"기본-문법\" style=\"position:relative;\"><a href=\"#%EA%B8%B0%EB%B3%B8-%EB%AC%B8%EB%B2%95\" aria-label=\"기본 문법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>기본 문법</h2>\n<p>미디어 쿼리는 CSS에서 어떤 스타일을 선택적으로 적용하고 싶을 때 사용합니다.\n다른 프로그래밍 언어의 <code>if</code> 조건문과 비슷한 개념이라고 생각하시면 이해가 쉬우실 겁니다.</p>\n<p><code>@media</code> 키워드로 시작하는 미디어 쿼리의 문법 구조는 아래와 같습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token atrule\"><span class=\"token rule\">@media</span> <span class=\"token punctuation\">(</span>조건<span class=\"token punctuation\">)</span></span> <span class=\"token punctuation\">{</span>\n  스타일\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><code>스타일</code> 부분에는 일반적인 CSS 코드가 들어가는데, <code>조건</code> 부분이 만족될 때는 스타일이 적용되고, 만족되지 않을 때는 스타일이 무시됩니다.</p>\n<h2 id=\"좁은-화면-스타일링\" style=\"position:relative;\"><a href=\"#%EC%A2%81%EC%9D%80-%ED%99%94%EB%A9%B4-%EC%8A%A4%ED%83%80%EC%9D%BC%EB%A7%81\" aria-label=\"좁은 화면 스타일링 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>좁은 화면 스타일링</h2>\n<p>핸드폰처럼 좁은 화면에서만 특정 스타일을 적용하고 싶을 때는 화면의 최대 너비를 조건으로 하여 미디어 쿼리를 사용할 수 있습니다.</p>\n<p>예를 들어, <code>800px</code> 이하의 좁은 화면에서 특정 HTML 요소의 배경색을 토마토 색으로 바꾸고 싶다면,</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>small-tomato<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>좁은 화면에서는 배경색이 토마토 색이 됩니다.<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>다음과 같이 <code>max-width</code> 속성을 이용하여 미디어 쿼리를 작성해주면 됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token atrule\"><span class=\"token rule\">@media</span> <span class=\"token punctuation\">(</span><span class=\"token property\">max-width</span><span class=\"token punctuation\">:</span> 800px<span class=\"token punctuation\">)</span></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token selector\">.small-tomato</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> tomato<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<iframe height=\"265\" style=\"width: 100%;\" scrolling=\"no\" title=\"css-media-queries-1\" src=\"https://codepen.io/daleseo/embed/JjbzMeL?height=265&theme-id=dark&default-tab=css,result\" frameborder=\"no\" loading=\"lazy\" allowtransparency=\"true\" allowfullscreen=\"true\">\n  See the Pen <a href='https://codepen.io/daleseo/pen/JjbzMeL'>css-media-queries-1</a> by Dale Seo\n  (<a href='https://codepen.io/daleseo'>@daleseo</a>) on <a href='https://codepen.io'>CodePen</a>.\n</iframe>\n<h2 id=\"넓은-화면-스타일링\" style=\"position:relative;\"><a href=\"#%EB%84%93%EC%9D%80-%ED%99%94%EB%A9%B4-%EC%8A%A4%ED%83%80%EC%9D%BC%EB%A7%81\" aria-label=\"넓은 화면 스타일링 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>넓은 화면 스타일링</h2>\n<p>반대로 TV처럼 넓은 화면에서만 특정 스타일을 적용하고 싶을 때는 화면의 최소 너비를 조건으로 하여 미디어 쿼리를 사용할 수 있습니다.</p>\n<p>예를 들어, <code>800px</code> 이상의 넓은 화면에서 특정 HTML 요소의 글자색을 토마토 색으로 바꾸고 싶다면,</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>large-tomato<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>넓은 화면에서는 글자색이 토마토 색이 됩니다.<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>다음과 같이 <code>min-width</code> 속성을 이용하여 미디어 쿼리를 작성해주면 됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token atrule\"><span class=\"token rule\">@media</span> <span class=\"token punctuation\">(</span><span class=\"token property\">min-width</span><span class=\"token punctuation\">:</span> 800px<span class=\"token punctuation\">)</span></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token selector\">.large-tomato</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> tomato<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<iframe height=\"265\" style=\"width: 100%;\" scrolling=\"no\" title=\"css-media-queries-2\" src=\"https://codepen.io/daleseo/embed/OJbqzKJ?height=265&theme-id=dark&default-tab=css,result\" frameborder=\"no\" loading=\"lazy\" allowtransparency=\"true\" allowfullscreen=\"true\">\n  See the Pen <a href='https://codepen.io/daleseo/pen/OJbqzKJ'>css-media-queries-2</a> by Dale Seo\n  (<a href='https://codepen.io/daleseo'>@daleseo</a>) on <a href='https://codepen.io'>CodePen</a>.\n</iframe>\n<h2 id=\"화면-너비에-따라-html-요소-숨기기\" style=\"position:relative;\"><a href=\"#%ED%99%94%EB%A9%B4-%EB%84%88%EB%B9%84%EC%97%90-%EB%94%B0%EB%9D%BC-html-%EC%9A%94%EC%86%8C-%EC%88%A8%EA%B8%B0%EA%B8%B0\" aria-label=\"화면 너비에 따라 html 요소 숨기기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>화면 너비에 따라 HTML 요소 숨기기</h2>\n<p>미디어 쿼리는 특정 HTML 요소를 화면의 너비에 따라 숨길 때도 많이 사용됩니다.</p>\n<p>예를 들어, 목록에서 어떤 항목은 넓은 화면에서 숨기고 어떤 항목은 좁은 화면에서 숨기고 싶다면,</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>desktop<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>저는 넓은 화면에서만 보입니다.<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span>저는 항상 보입니다.<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>mobile<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>저는 좁은 화면에서만 보입니다.<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>다음과 같이 <code>max-width</code> 속성과 <code>min-width</code> 속성을 이용하여 미디어 쿼리로 작성해주면 됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token atrule\"><span class=\"token rule\">@media</span> <span class=\"token punctuation\">(</span><span class=\"token property\">max-width</span><span class=\"token punctuation\">:</span> 600px<span class=\"token punctuation\">)</span></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token selector\">.desktop</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> none<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token atrule\"><span class=\"token rule\">@media</span> <span class=\"token punctuation\">(</span><span class=\"token property\">min-width</span><span class=\"token punctuation\">:</span> 1000px<span class=\"token punctuation\">)</span></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token selector\">.mobile</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> none<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>뷰포트(viewport)의 폭이 <code>600px</code> 이하로 내려가면 <code>desktop</code> 클래스가 적용된 부분이 화면에서 사라지고,\n뷰포트(viewport)의 폭이 <code>1000px</code> 이상으로 올라가면 <code>mobile</code> 클래스가 적용된 부분이 화면에서 사라지는 것을 볼 수 있으실 겁니다.</p>\n<iframe height=\"265\" style=\"width: 100%;\" scrolling=\"no\" title=\"css-media-queries-3\" src=\"https://codepen.io/daleseo/embed/vYyPdEw?height=265&theme-id=dark&default-tab=css,result\" frameborder=\"no\" loading=\"lazy\" allowtransparency=\"true\" allowfullscreen=\"true\">\n  See the Pen <a href='https://codepen.io/daleseo/pen/vYyPdEw'>css-media-queries-3</a> by Dale Seo\n  (<a href='https://codepen.io/daleseo'>@daleseo</a>) on <a href='https://codepen.io'>CodePen</a>.\n</iframe>\n<h2 id=\"마치면서\" style=\"position:relative;\"><a href=\"#%EB%A7%88%EC%B9%98%EB%A9%B4%EC%84%9C\" aria-label=\"마치면서 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>마치면서</h2>\n<p>이상으로 CSS에서 미디어 쿼리를 사용하는 방법에 대해서 간단히 알아보았습니다.</p>\n<p>사실 미디어 쿼리는 이렇게 뷰포트(viewport) 너비에 따라 다른 스타일을 적용하기 위해서 뿐만 아니라 다크 모드 지원 등 다양한 용도로 활용이 가능합니다.\n이 부분에 대해서는 추후 기회가 되면 다뤄보도록 하겠습니다.</p>\n<ul>\n<li>관련 포스팅: <a href=\"/css-prefers-color-scheme/\">CSS 미디어 쿼리 prefers-color-scheme (다크 모드)</a></li>\n</ul>","timeToRead":3,"fields":{"slug":"/css-media-queries/","tags":["CSS","Responsive","Media Query"]},"frontmatter":{"title":"CSS 미디어 쿼리 (Media Query) 사용법","date":"Mar 13, 2021"}},"next":{"fields":{"slug":"/jest-each/"},"frontmatter":{"title":"[Jest] 파라미터화 테스트: test.each(), describe.each() "}}}},"staticQueryHashes":["2168229929","2362167539","3056348342"]}