{"componentChunkName":"component---src-templates-detail-template-jsx","path":"/css-aspect-ratio/","result":{"pageContext":{"previous":null,"node":{"html":"<p>웹 페이지에 이미지나 비디오를 넣을 때 가로세로 비율이 생각처럼 조정이 안 되서 고생해보신 적이 있으신가요?</p>\n<p>이번 포스팅에서는 CSS의 aspect-ratio 속성으로 아주 쉽게 요소의 가로세로 비율을 조정하는 방법에 대해서 알아보겠습니다.</p>\n<h2 id=\"이미지\" style=\"position:relative;\"><a href=\"#%EC%9D%B4%EB%AF%B8%EC%A7%80\" aria-label=\"이미지 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>이미지</h2>\n<iframe height=\"300\" style=\"width: 100%;\" scrolling=\"no\" title=\"css-aspect-ratio-image\" src=\"https://codepen.io/daleseo/embed/oNaQvga?default-tab=css%2Cresult\" frameborder=\"no\" loading=\"lazy\" allowtransparency=\"true\" allowfullscreen=\"true\">\n  See the Pen <a href=\"https://codepen.io/daleseo/pen/oNaQvga\">\n  css-aspect-ratio-image</a> by Dale Seo (<a href=\"https://codepen.io/daleseo\">@daleseo</a>)\n  on <a href=\"https://codepen.io\">CodePen</a>.\n</iframe>\n<h2 id=\"마치면서\" style=\"position:relative;\"><a href=\"#%EB%A7%88%EC%B9%98%EB%A9%B4%EC%84%9C\" aria-label=\"마치면서 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>마치면서</h2>\n<p>이상으로 <code>overflow</code> 속성을 활용하여 많은 양의 컨텐츠를 제한된 영역에서 여러 가지 방법으로 처리해보았는데요.\n본 포스팅이 웹 개발을 하다가 의도치 않게 삐져나오는 컨텐츠를 원하시는데로 통제하는데 도움이 되었으면 좋겠습니다. 😁</p>\n<p>포스팅을 마치면서 한 가지 드리고 말씀은 <code>overflow</code> 속성을 활용하는 것보다 어떻게 하면 컨텐츠가 요소를 넘치지 않도록 디자인할 수 있을까 고민하는 것이 중요하다는 것입니다.\n요소에 컨텐츠을 담을 충분한 공간이 있다면 삐져나오는 부분을 어떻게 처리할지에 대해서 고민할 필요가 없을테니까요.\n뿐만 아니라 일반적으로 브라우저 전체 창이 아니라 요소 범위에서 생기는 스크롤바는 키보드 사용자가 스크롤하기 어렵게 때문에 웹 접근성(accessibility) 측면에서도 더 고려할 부분이 많아지고요.</p>\n<p>컨텐츠가 삐져나오는 것을 방지하기 위한 간단한 방법이 바로 불필요하게 해당 요소에 <code>height</code> 속성을 줘서 높이를 제한하지 않는 것인데요.\n<code>height</code> 속성이 명시되지 않은 요소는 컨텐츠의 양에 맞게 자동으로 높이가 늘어나기 때문입니다.\n이 부분은 본 포스팅에서 다루려는 주제에서 넘어가는 것 같으니 추후 기회가 되면 자세히 다뤄보도록 할께요.</p>","timeToRead":1,"fields":{"slug":"/css-aspect-ratio/","tags":["CSS","responsive","img","video","iframe","aspect-ratio"]},"frontmatter":{"title":"CSS의 aspect-ratio 속성으로 이미지나 비디오의 반응형 비율 조정","date":"May 23, 2023"}},"next":{"fields":{"slug":"/css-object-fit/"},"frontmatter":{"title":"CSS의 object-fit 속성으로 이미지를 왜곡없이 보여주기"}}}},"staticQueryHashes":["2168229929","2362167539","3056348342"]}