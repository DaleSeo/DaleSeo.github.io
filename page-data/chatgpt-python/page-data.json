{"componentChunkName":"component---src-templates-detail-template-jsx","path":"/chatgpt-python/","result":{"pageContext":{"previous":{"fields":{"slug":"/chatgpt-cli-python/"},"frontmatter":{"title":"ChatGPT 터미널 앱 파이썬으로 만들어보기"}},"node":{"html":"<div class=\"gatsby-resp-iframe-wrapper\" style=\"padding-bottom: 56.25%; position: relative; height: 0; overflow: hidden; \" > <iframe src=\"https://www.youtube.com/embed/b6Rh64kQt1U\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" allowfullscreen=\"\" style=\" position: absolute; top: 0; left: 0; width: 100%; height: 100%; \"></iframe> </div>\n<p>이번 포스팅에서는 파이썬으로 ChatGPT API를 호출하는 방법에 대해서 알아보겠습니다.</p>\n<h2 id=\"openai-api-키-설정\" style=\"position:relative;\"><a href=\"#openai-api-%ED%82%A4-%EC%84%A4%EC%A0%95\" aria-label=\"openai api 키 설정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>OpenAI API 키 설정</h2>\n<blockquote>\n<p>OpenAI에서 회원 가입 후에 API 키를 발급받는 방법은 <a href=\"/chatgpt-api-keys/\">별도 포스팅</a>에서 자세히 다루었으니 참고 바랍니다.</p>\n</blockquote>\n<p>사전 준비로 터미널을 열고 <code>OPENAI_API_KEY</code>라는 환경 변수에 OpenAI에서 발급받은 API 키를 설정해줍니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">OPENAI_API_KEY</span><span class=\"token operator\">=</span>sk-<span class=\"token punctuation\">..</span>.0K7L\n$ <span class=\"token builtin class-name\">echo</span> <span class=\"token variable\">$OPENAI_API_KEY</span>\nsk-<span class=\"token punctuation\">..</span>.0K7L</code></pre></div>\n<p>이렇게 API 키를 환경 변수로 저장해놓으면 Python 코드를 실행할 때 <code>os</code> 모듈의 <code>getenv()</code> 함수를 통해 쉽게 환경 변수를 읽어올 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\">$ python\nPython <span class=\"token number\">3.11</span><span class=\"token number\">.2</span> <span class=\"token punctuation\">(</span>main<span class=\"token punctuation\">,</span> Apr  <span class=\"token number\">7</span> <span class=\"token number\">2023</span><span class=\"token punctuation\">,</span> <span class=\"token number\">15</span><span class=\"token punctuation\">:</span><span class=\"token number\">52</span><span class=\"token punctuation\">:</span><span class=\"token number\">33</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">[</span>Clang <span class=\"token number\">14.0</span><span class=\"token number\">.3</span> <span class=\"token punctuation\">(</span>clang<span class=\"token operator\">-</span><span class=\"token number\">1403.0</span><span class=\"token number\">.22</span><span class=\"token number\">.14</span><span class=\"token number\">.1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> on darwin\nType <span class=\"token string\">\"help\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"copyright\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"credits\"</span> <span class=\"token keyword\">or</span> <span class=\"token string\">\"license\"</span> <span class=\"token keyword\">for</span> more information<span class=\"token punctuation\">.</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">import</span> os\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> os<span class=\"token punctuation\">.</span>getenv<span class=\"token punctuation\">(</span><span class=\"token string\">\"OPENAI_API_KEY\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token string\">'=sk-...0K7L'</span></code></pre></div>\n<blockquote>\n<p>Python에서 환경 변수를 다루는 방법에 대해서는 <a href=\"/python-os-environ/\">관련 포스팅</a>을 참고 바랍니다.</p>\n</blockquote>\n<h2 id=\"requests-라이브러리-사용\" style=\"position:relative;\"><a href=\"#requests-%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC-%EC%82%AC%EC%9A%A9\" aria-label=\"requests 라이브러리 사용 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>requests 라이브러리 사용</h2>\n<p>ChatGPT API를 호출하는 첫 번째 방법은 파이썬에서 HTTP를 통해 원격 API를 호출하는데 범용적으로 사용되는 <code>requests</code> 라이브러리를 사용하는 것입니다.</p>\n<p>우선 터미널을 열고 파이썬의 패키지 매니저인 pip를 사용하여 <code>requests</code>라는 패키지를 설치해줍니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ pip <span class=\"token function\">install</span> requests</code></pre></div>\n<p>그 다음 <code>python</code>을 실행 후 <code>os</code> 내장 모듈과 방금 설치한 <code>requests</code> 모듈을 불러옵니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\">$ python\nPython <span class=\"token number\">3.11</span><span class=\"token number\">.2</span> <span class=\"token punctuation\">(</span>main<span class=\"token punctuation\">,</span> Apr  <span class=\"token number\">7</span> <span class=\"token number\">2023</span><span class=\"token punctuation\">,</span> <span class=\"token number\">15</span><span class=\"token punctuation\">:</span><span class=\"token number\">52</span><span class=\"token punctuation\">:</span><span class=\"token number\">33</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">[</span>Clang <span class=\"token number\">14.0</span><span class=\"token number\">.3</span> <span class=\"token punctuation\">(</span>clang<span class=\"token operator\">-</span><span class=\"token number\">1403.0</span><span class=\"token number\">.22</span><span class=\"token number\">.14</span><span class=\"token number\">.1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> on darwin\nType <span class=\"token string\">\"help\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"copyright\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"credits\"</span> <span class=\"token keyword\">or</span> <span class=\"token string\">\"license\"</span> <span class=\"token keyword\">for</span> more information<span class=\"token punctuation\">.</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">import</span> os\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">import</span> requests</code></pre></div>\n<p>이제 <code>requests</code> 모듈의 <code>post()</code> 함수를 이용해서 ChatGPT API를 호출할 차례인데요.</p>\n<p><code>headers</code> 키워드 인자로 환경 변수로 설정해놓은 API 키를 <code>Authorization</code> 헤더로 넘김니다.\n<code>json</code> 키워드 인자로는 <code>gpt-3.5-turbo</code>를 인공지능 모델로 지정해주고, 보낼 메시지의 역할과 내용을 리스트의 형태로 넘겨주면 됩니다.</p>\n<blockquote>\n<p>HTTP를 통해서 송수신되는 ChatGPT API의 요청과 응답이 구체적으로 어떻게 생겼는지 궁금하시다면 <a href=\"/chatgpt-curl/\">관련 포스팅</a>을 참고 바랍니다.</p>\n</blockquote>\n<p>함수가 반환해준 결과는 <code>response</code> 변수에 저장하겠습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> response <span class=\"token operator\">=</span> requests<span class=\"token punctuation\">.</span>post<span class=\"token punctuation\">(</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token string\">\"https://api.openai.com/v1/chat/completions\"</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     headers<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token string\">\"Authorization\"</span><span class=\"token punctuation\">:</span> <span class=\"token string-interpolation\"><span class=\"token string\">f\"Bearer </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>os<span class=\"token punctuation\">.</span>getenv<span class=\"token punctuation\">(</span><span class=\"token string\">'OPENAI_API_KEY'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     json<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token string\">\"model\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"gpt-3.5-turbo\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"messages\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span><span class=\"token string\">\"role\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"user\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"content\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"야!\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> <span class=\"token punctuation\">)</span></code></pre></div>\n<p><code>response</code> 변수를 상대로 <code>json()</code> 함수를 호출하면 ChatGPT API가 응답해준 결과를 사전의 형태로 얻을 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> response<span class=\"token punctuation\">.</span>json<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token punctuation\">{</span><span class=\"token string\">'id'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'chatcmpl-76qTg3W2m8YYuAxAbe1DTEk0vsdJe'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'object'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'chat.completion'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'created'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1681866048</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'model'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'gpt-3.5-turbo-0301'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'usage'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span><span class=\"token string\">'prompt_tokens'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'completion_tokens'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">19</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'total_tokens'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">29</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'choices'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span><span class=\"token string\">'message'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span><span class=\"token string\">'role'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'assistant'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'content'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'네? 제가 도움을 드릴 수 있나요?'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'finish_reason'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'stop'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'index'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span></code></pre></div>\n<p>다음과 같이 응답 사전으로 부터 수신된 메세지만 추출할 수도 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> response<span class=\"token punctuation\">.</span>json<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"choices\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"message\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"content\"</span><span class=\"token punctuation\">]</span>\n<span class=\"token string\">'네? 제가 도움을 드릴 수 있나요?'</span></code></pre></div>\n<p><code>requests</code> 라이브러리를 사용하면 OpenAI 뿐만 아니라 타사의 API도 표준화된 방법으로 호출할 수 있다는 이점이 있습니다.</p>\n<blockquote>\n<p>파이썬으로 HTTP 통신이 필요한 프로그램을 작성할 때 많이 사용되는 라이브러리인 requests에 대해서는 [별도 포스팅}(/python-requests/)에서 자세히 다루고 있으니 참고 바랍니다.</p>\n</blockquote>\n<h2 id=\"openai-라이브러리-사용\" style=\"position:relative;\"><a href=\"#openai-%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC-%EC%82%AC%EC%9A%A9\" aria-label=\"openai 라이브러리 사용 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>openai 라이브러리 사용</h2>\n<p>OpenAI에서는 제공하는 <code>openai</code> 라이브러리를 이용해서도 ChatGPT API를 호출할 수 있습니다.</p>\n<p>마찬가지로 터미널에서 pip를 사용하여 <code>openai</code>라는 패키지를 설치해줍니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ pip <span class=\"token function\">install</span> openai</code></pre></div>\n<p>그 다음 <code>python</code>을 실행 후 <code>os</code> 내장 모듈과 방금 설치한 <code>openai</code> 모듈을 불러옵니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\">$ python\nPython <span class=\"token number\">3.11</span><span class=\"token number\">.2</span> <span class=\"token punctuation\">(</span>main<span class=\"token punctuation\">,</span> Apr  <span class=\"token number\">7</span> <span class=\"token number\">2023</span><span class=\"token punctuation\">,</span> <span class=\"token number\">15</span><span class=\"token punctuation\">:</span><span class=\"token number\">52</span><span class=\"token punctuation\">:</span><span class=\"token number\">33</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">[</span>Clang <span class=\"token number\">14.0</span><span class=\"token number\">.3</span> <span class=\"token punctuation\">(</span>clang<span class=\"token operator\">-</span><span class=\"token number\">1403.0</span><span class=\"token number\">.22</span><span class=\"token number\">.14</span><span class=\"token number\">.1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> on darwin\nType <span class=\"token string\">\"help\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"copyright\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"credits\"</span> <span class=\"token keyword\">or</span> <span class=\"token string\">\"license\"</span> <span class=\"token keyword\">for</span> more information<span class=\"token punctuation\">.</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">import</span> os\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">import</span> openai</code></pre></div>\n<p>그 다음 환경 변수로 저장해놓은 API 키를 읽어서 <code>openai</code>의 <code>api_key</code> 속성으로 설정합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> openai<span class=\"token punctuation\">.</span>api_key <span class=\"token operator\">=</span> os<span class=\"token punctuation\">.</span>getenv<span class=\"token punctuation\">(</span><span class=\"token string\">\"OPENAI_API_KEY\"</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>이제 <code>openai</code> 모듈의 <code>ChatCompletion</code> 속성을 이용해서 ChatGPT API를 호출할 차례인데요.</p>\n<p><code>model</code> 키워드 인자로는 <code>gpt-3.5-turbo</code>를 인공지능 모델로 지정해주고, <code>messages</code> 키워드 인자로 보낼 메시지를 역할과 내용을 넘겨줍니다.</p>\n<p>함수가 반환해준 결과는 <code>response</code> 변수에 저장하겠습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> response <span class=\"token operator\">=</span> openai<span class=\"token punctuation\">.</span>ChatCompletion<span class=\"token punctuation\">.</span>create<span class=\"token punctuation\">(</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     model<span class=\"token operator\">=</span><span class=\"token string\">\"gpt-3.5-turbo\"</span><span class=\"token punctuation\">,</span> messages<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span><span class=\"token string\">\"role\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"user\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"content\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"야!\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> <span class=\"token punctuation\">)</span></code></pre></div>\n<p>반환된 결과는 다음과 같이 복잡한 사전의 형태입니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> response\n<span class=\"token operator\">&lt;</span>OpenAIObject chat<span class=\"token punctuation\">.</span>completion <span class=\"token builtin\">id</span><span class=\"token operator\">=</span>chatcmpl<span class=\"token operator\">-</span>76r2Uczo2uksiVeaLtlkg7i48gmuC at <span class=\"token number\">0x1029f87d0</span><span class=\"token operator\">></span> JSON<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token string\">\"choices\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token string\">\"finish_reason\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"stop\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">\"index\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">\"message\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token string\">\"content\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"\\ub124, \\ubb34\\uc5c7\\uc774 \\ubb38\\uc81c\\uc778\\uac00\\uc694? \\uc5b4\\ub5bb\\uac8c \\ub3c4\\uc640\\ub4dc\\ub9b4\\uae4c\\uc694?\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"role\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"assistant\"</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"created\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1681868206</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"id\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"chatcmpl-76r2Uczo2uksiVeaLtlkg7i48gmuC\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"model\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"gpt-3.5-turbo-0301\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"object\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"chat.completion\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"usage\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">\"completion_tokens\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">30</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"prompt_tokens\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"total_tokens\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">40</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>비슷한 방식으로 수신된 메시지 내용만 추출할 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> response<span class=\"token punctuation\">.</span>choices<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">.</span>content\n<span class=\"token string\">'네, 무엇이 문제인가요? 어떻게 도와드릴까요?'</span></code></pre></div>\n<p><code>openai</code> 라이브러리를 사용하면 ChatGPT API 뿐만 OpenAI에서 제공하는 다른 API들도 유사한 방식으로 호출할 수 있어서 편리합니다.</p>\n<h2 id=\"마치면서\" style=\"position:relative;\"><a href=\"#%EB%A7%88%EC%B9%98%EB%A9%B4%EC%84%9C\" aria-label=\"마치면서 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>마치면서</h2>\n<p>이상으로 파이썬으로 ChatGPT API를 호출하는 2가지 방법에 대해서 알아보겠습니다.\n보시다시피 <code>requests</code> 라이브러리를 사용하든 <code>openai</code> 라이브러리를 사용하든 작성해야하는 코드의 양은 어차피 얼마 안 되며 큰 차이가 나지 않죠?\n따라서 <code>requests</code> 라이브러리를 사용해서 원격 API를 호출하시는데 이미 익숙하시다면 굳이 새롭게 <code>openai</code> 라이브러리 사용법을 익힐 큰 이유는 없을 것 같습니다.</p>\n<blockquote>\n<p>ChatGPT에 대한 포스팅은 <a href=\"/?tag=ChatGPT\">관련 태그</a>를 통해서 쉽게 만나보세요!</p>\n</blockquote>","timeToRead":5,"fields":{"slug":"/chatgpt-python/","tags":["OpenAI","ChatGPT","API","Python"]},"frontmatter":{"title":"파이썬으로 ChatGPT API를 호출하는 방법","date":"Apr 18, 2023"}},"next":{"fields":{"slug":"/chatgpt-cli-js/"},"frontmatter":{"title":"ChatGPT 터미널 앱 자바스크립트로 만들어보기"}}}},"staticQueryHashes":["2168229929","2362167539","3056348342"]}