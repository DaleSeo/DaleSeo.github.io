{"version":3,"file":"component---src-templates-list-template-jsx-9e68e6f59aa28a40172c.js","mappings":"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","sources":["webpack://dale-blog/./src/components/PostList/Header.jsx","webpack://dale-blog/./src/components/PostList/ContentCard.jsx","webpack://dale-blog/./src/components/PostList/ContentGrid.jsx","webpack://dale-blog/./src/components/PostList/Pagination.jsx","webpack://dale-blog/./src/components/PostList/PostList.jsx","webpack://dale-blog/./src/templates/ListTemplate.jsx"],"sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nfunction ContentGrid({ title, totalPosts }) {\n  return (\n    <Wrapper>\n      <Title>{title}</Title>\n      <Count>{totalPosts} posts</Count>\n    </Wrapper>\n  );\n}\n\nconst Wrapper = styled.div`\n  display: flex;\n  gap: var(--spacing-1);\n`;\n\nconst Title = styled.h1`\n  font-size: var(--font-size-h2);\n`;\n\nconst Count = styled.span``;\n\nexport default ContentGrid;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"gatsby\";\n// import Tags from \"./Tags\";\n\nexport default function ({ item }) {\n  const {\n    excerpt,\n    timeToRead,\n    fields: { slug, tags },\n    frontmatter: { title },\n  } = item;\n  return (\n    <Wrapper>\n      <Title>\n        <Link to={slug}>{title}</Link>\n      </Title>\n      <Excerpt>{excerpt}</Excerpt>\n      {/* <Tags tags={tags} /> */}\n    </Wrapper>\n  );\n}\n\nconst Wrapper = styled.article`\n  background: var(--color-background-secondary);\n  border-radius: var(--spacing-4);\n  padding: var(--spacing-8);\n  display: flex;\n  gap: var(--spacing-4);\n  flex-direction: column;\n  justify-content: space-between;\n`;\n\nconst Title = styled.h3`\n  font-size: var(--font-size-h4);\n`;\n\nconst Excerpt = styled.p`\n  font-size: var(--font-size-4);\n  display: -webkit-box;\n  -webkit-box-orient: vertical;\n  -webkit-line-clamp: 4;\n  overflow: hidden;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport ContentCard from \"./ContentCard\";\n\nfunction ContentGrid({ posts }) {\n  return (\n    <Wrapper>\n      {posts.map((post) => (\n        <ContentCard key={post.fields.slug} item={post} />\n      ))}\n    </Wrapper>\n  );\n}\n\nconst Wrapper = styled.div`\n  display: grid;\n  gap: 32px;\n  grid-template-columns: 1fr;\n  @media (min-width: 34.375rem) {\n    grid-template-columns: repeat(auto-fill, minmax(400px, 1fr));\n  }\n`;\n\nexport default ContentGrid;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"gatsby\";\n\nfunction Pagination({ totalPages, tag, page }) {\n  return (\n    <Wrapper>\n      {Array(totalPages)\n        .fill()\n        .map((_, i) => (\n          <Item active={i + 1 === page} to={`?tag=${tag}&page=${i + 1}`}>\n            {i + 1}\n          </Item>\n        ))}\n    </Wrapper>\n  );\n}\n\nconst Wrapper = styled.nav`\n  display: flex;\n  flex-wrap: wrap;\n  gap: var(--spacing-1);\n  justify-content: center;\n`;\n\nconst Item = styled(Link)`\n  display: grid;\n  place-items: center;\n  color: var(--color-text);\n  font-size: var(--font-size-4);\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  background: ${(p) => p.active && \"var(--color-primary)\"};\n  opacity: 0.7;\n\n  &:hover {\n    background: var(--color-primary);\n    opacity: 0.4;\n  }\n`;\n\nexport default Pagination;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Header from \"./Header\";\nimport ContentGrid from \"./ContentGrid\";\nimport Pagination from \"./Pagination\";\n\nfunction Layout({\n  tag,\n  posts,\n  totalPages,\n  totalPosts,\n  postsPerPage,\n  page,\n  skip,\n}) {\n  return (\n    <Wrapper>\n      <Header title={tag} totalPosts={totalPosts} />\n      <ContentGrid posts={posts.slice(skip, skip + postsPerPage)} />\n      <Pagination totalPages={totalPages} tag={tag} page={page} />\n    </Wrapper>\n  );\n}\n\nconst Wrapper = styled.main`\n  margin: var(--spacing-8) auto;\n  display: flex;\n  flex-direction: column;\n  gap: var(--spacing-8);\n`;\n\nexport default Layout;\n","import React from \"react\";\nimport { graphql } from \"gatsby\";\nimport qs from \"qs\";\nimport Layout from \"../components/Layout\";\nimport PostList from \"../components/PostList\";\n\nexport default function ({ data }) {\n  const { nodes } = data.allMarkdownRemark;\n  const search =\n    typeof document === `undefined` ? \"\" : document.location.search;\n  const { tag = \"\", page = \"1\" } = qs.parse(search, {\n    ignoreQueryPrefix: true,\n  });\n\n  const posts = nodes.filter((node) =>\n    tag ? node.fields.tags.includes(tag) : true\n  );\n  const totalPosts = posts.length;\n  const postsPerPage = 20;\n  const totalPages = Math.ceil(totalPosts / postsPerPage);\n  const skip = (parseInt(page) - 1) * postsPerPage;\n\n  return (\n    <Layout>\n      <PostList\n        tag={tag}\n        posts={posts}\n        totalPages={totalPages}\n        totalPosts={totalPosts}\n        postsPerPage={postsPerPage}\n        page={page}\n        skip={skip}\n      />\n    </Layout>\n  );\n}\n\nexport const query = graphql`\n  query listPosts {\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      nodes {\n        excerpt(truncate: true, pruneLength: 300)\n        timeToRead\n        fields {\n          slug\n          tags\n        }\n        frontmatter {\n          title\n          date(formatString: \"MMM D, YYYY\")\n        }\n      }\n    }\n  }\n`;\n"],"names":["Wrapper","styled","div","withConfig","displayName","componentId","Title","h1","Count","span","_ref","title","totalPosts","React","item","excerpt","_item$fields","timeToRead","fields","slug","tags","frontmatter","Link","to","Excerpt","article","h3","p","posts","map","post","ContentCard","key","nav","Item","active","totalPages","tag","page","Array","fill","_","i","main","postsPerPage","skip","Header","ContentGrid","slice","Pagination","nodes","data","allMarkdownRemark","search","document","location","_qs$parse","qs","ignoreQueryPrefix","_qs$parse$tag","_qs$parse$page","filter","node","includes","length","Math","ceil","parseInt","Layout","PostList"],"sourceRoot":""}